{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/brill/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":1,"renderable":1},{"_id":"themes/brill/source/css/default.css","path":"css/default.css","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/brill/source/css/loading-style.css","path":"css/loading-style.css","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/brill/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/brill/source/img/coderwall.png","path":"img/coderwall.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/alipay.png","path":"img/alipay.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/douban.png","path":"img/douban.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/delicious.png","path":"img/delicious.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/facebook.png","path":"img/facebook.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/github.png","path":"img/github.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/google.png","path":"img/google.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/img-err.png","path":"img/img-err.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/img-loading.png","path":"img/img-loading.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/linkedin.png","path":"img/linkedin.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/pinboard.png","path":"img/pinboard.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/mail.png","path":"img/mail.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/instagram.png","path":"img/instagram.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/pinterest.png","path":"img/pinterest.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/qq.png","path":"img/qq.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/rss.png","path":"img/rss.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/segmentfault.png","path":"img/segmentfault.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/wechat.png","path":"img/wechat.png","modified":1,"renderable":1},{"_id":"themes/brill/source/css/showshare.css","path":"css/showshare.css","modified":1,"renderable":1},{"_id":"themes/brill/source/img/twitter.png","path":"img/twitter.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/weibo.png","path":"img/weibo.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/weixin.png","path":"img/weixin.png","modified":1,"renderable":1},{"_id":"themes/brill/source/img/zhihu.png","path":"img/zhihu.png","modified":1,"renderable":1},{"_id":"themes/brill/source/js/TweenMax.js","path":"js/TweenMax.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/clipboard.min.js","path":"js/clipboard.min.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/instagram.js","path":"js/instagram.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/mobile.js","path":"js/mobile.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/pace.js","path":"js/pace.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/plugins.js","path":"js/plugins.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/pc.js","path":"js/pc.js","modified":1,"renderable":1},{"_id":"themes/brill/source/img/head.jpg","path":"img/head.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-25.jpg","path":"background/bg-25.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/img/alipayimg.jpg","path":"img/alipayimg.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/js/TweenMax.min.js","path":"js/TweenMax.min.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/embed.js","path":"js/embed.js","modified":1,"renderable":1},{"_id":"themes/brill/source/img/wechatimg.jpg","path":"img/wechatimg.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-109.jpg","path":"background/bg-109.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-1.jpg","path":"background/bg-1.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-11.jpg","path":"background/bg-11.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-17.jpg","path":"background/bg-17.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-20.jpg","path":"background/bg-20.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-27.jpg","path":"background/bg-27.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-26.jpg","path":"background/bg-26.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-3.jpg","path":"background/bg-3.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg.jpg","path":"background/bg.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/brill/source/css/pace/pace-theme-flash.css","path":"css/pace/pace-theme-flash.css","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/css/font-awesome.css","path":"font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/css/font-awesome.min.css","path":"font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/brill/source/js/404/jquery.parallaxify-0.0.2.min.js","path":"js/404/jquery.parallaxify-0.0.2.min.js","modified":1,"renderable":1},{"_id":"themes/brill/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-15.jpg","path":"background/bg-15.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-23.jpg","path":"background/bg-23.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-7.jpg","path":"background/bg-7.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/FontAwesome.otf","path":"font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.woff","path":"font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/brill/source/js/404/jquery-2.0.3.min.js","path":"js/404/jquery-2.0.3.min.js","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.eot","path":"font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.woff2","path":"font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-14.jpg","path":"background/bg-14.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-9.jpg","path":"background/bg-9.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.ttf","path":"font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/select_share.css","path":"static/api/css/select_share.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/imgshare.css","path":"static/api/css/imgshare.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/like.css","path":"static/api/css/like.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_popup.css","path":"static/api/css/share_popup.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style1_16.css","path":"static/api/css/share_style1_16.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style0_16.css","path":"static/api/css/share_style0_16.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style0_24.css","path":"static/api/css/share_style0_24.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style0_32.css","path":"static/api/css/share_style0_32.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style1_32.css","path":"static/api/css/share_style1_32.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style2.css","path":"static/api/css/share_style2.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style1_24.css","path":"static/api/css/share_style1_24.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style2_16.css","path":"static/api/css/share_style2_16.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style4.css","path":"static/api/css/share_style4.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style2_24.css","path":"static/api/css/share_style2_24.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/share_style2_32.css","path":"static/api/css/share_style2_32.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share.js","path":"static/api/js/share.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/slide_share.css","path":"static/api/css/slide_share.css","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/css/weixin_popup.css","path":"static/api/css/weixin_popup.css","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-19.jpg","path":"background/bg-19.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-21.jpg","path":"background/bg-21.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-22.jpg","path":"background/bg-22.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-24.jpg","path":"background/bg-24.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-4.jpg","path":"background/bg-4.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-6.jpg","path":"background/bg-6.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-8.jpg","path":"background/bg-8.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l8.gif","path":"static/api/img/share/l8.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/data.js","path":"static/api/js/trans/data.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/logger.js","path":"static/api/js/trans/logger.js","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-10.jpg","path":"background/bg-10.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-12.jpg","path":"background/bg-12.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-18.jpg","path":"background/bg-18.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/img/bg.jpg","path":"img/bg.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_0_24.png","path":"static/api/img/share/icons_0_24.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_1_16.png","path":"static/api/img/share/icons_1_16.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_0_16.png","path":"static/api/img/share/icons_0_16.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_0_32.png","path":"static/api/img/share/icons_0_32.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_1_24.png","path":"static/api/img/share/icons_1_24.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_2_24.png","path":"static/api/img/share/icons_2_24.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_1_32.png","path":"static/api/img/share/icons_1_32.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l0.gif","path":"static/api/img/share/l0.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l3.gif","path":"static/api/img/share/l3.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_2_16.png","path":"static/api/img/share/icons_2_16.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l1.gif","path":"static/api/img/share/l1.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l2.gif","path":"static/api/img/share/l2.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l5.gif","path":"static/api/img/share/l5.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l6.gif","path":"static/api/img/share/l6.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/icons_2_32.png","path":"static/api/img/share/icons_2_32.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l4.gif","path":"static/api/img/share/l4.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/l7.gif","path":"static/api/img/share/l7.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/pop_c.gif","path":"static/api/img/share/pop_c.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r2.gif","path":"static/api/img/share/r2.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r0.gif","path":"static/api/img/share/r0.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r1.gif","path":"static/api/img/share/r1.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r6.gif","path":"static/api/img/share/r6.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r4.gif","path":"static/api/img/share/r4.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r3.gif","path":"static/api/img/share/r3.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r7.gif","path":"static/api/img/share/r7.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/sc.png","path":"static/api/img/share/sc.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/share-search-icon.png","path":"static/api/img/share/share-search-icon.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/selectshare_close.png","path":"static/api/img/share/selectshare_close.png","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r5.gif","path":"static/api/img/share/r5.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/conf/const.js","path":"static/api/js/conf/const.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/img/share/r8.gif","path":"static/api/img/share/r8.gif","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/conf/define.js","path":"static/api/js/conf/define.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/base/class.js","path":"static/api/js/base/class.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/animate.js","path":"static/api/js/component/animate.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/comm_tools.js","path":"static/api/js/component/comm_tools.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/anticheat.js","path":"static/api/js/component/anticheat.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/partners.js","path":"static/api/js/component/partners.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/pop_popup.js","path":"static/api/js/component/pop_popup.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/pop_base.js","path":"static/api/js/component/pop_base.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/pop_dialog.js","path":"static/api/js/component/pop_dialog.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/combine_api.js","path":"static/api/js/share/combine_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/api_base.js","path":"static/api/js/share/api_base.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/pop_popup_slide.js","path":"static/api/js/component/pop_popup_slide.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/component/qrcode.js","path":"static/api/js/component/qrcode.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/image_api.js","path":"static/api/js/share/image_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/select_api.js","path":"static/api/js/share/select_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/like_api.js","path":"static/api/js/share/like_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/share_api.js","path":"static/api/js/share/share_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/likeshare.js","path":"static/api/js/share/likeshare.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/share/slide_api.js","path":"static/api/js/share/slide_api.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/trans_bdysc.js","path":"static/api/js/trans/trans_bdysc.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/trans.js","path":"static/api/js/trans/trans.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/start/router.js","path":"static/api/js/start/router.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/trans_bdxc.js","path":"static/api/js/trans/trans_bdxc.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/like_view.js","path":"static/api/js/view/like_view.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/trans/trans_weixin.js","path":"static/api/js/trans/trans_weixin.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/select_view.js","path":"static/api/js/view/select_view.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/image_view.js","path":"static/api/js/view/image_view.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/share_view.js","path":"static/api/js/view/share_view.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/slide_view.js","path":"static/api/js/view/slide_view.js","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/view/view_base.js","path":"static/api/js/view/view_base.js","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-111.jpg","path":"background/bg-111.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-13.jpg","path":"background/bg-13.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-16.jpg","path":"background/bg-16.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.svg","path":"font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/brill/source/static/api/js/base/tangram.js","path":"static/api/js/base/tangram.js","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-2.jpg","path":"background/bg-2.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-5.jpg","path":"background/bg-5.jpg","modified":1,"renderable":1},{"_id":"themes/brill/source/background/bg-112.jpg","path":"background/bg-112.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/brill/.gitignore","hash":"237760b38ce80bcc3a8b556566bef0295c145393","modified":1541256061364},{"_id":"themes/brill/README.md","hash":"228961ab390b883cb441fec95fd2ae6ab1f423ba","modified":1541256061364},{"_id":"source/_posts/Azure-DevOps入门.md","hash":"9aa988b29e325fa5e4c842901bee8682e6651810","modified":1547364048959},{"_id":"source/_posts/C-系列-友元.md","hash":"c590bd417ddc7f0188ee82d003fe27273ec6b88d","modified":1543590146444},{"_id":"source/_posts/CMake的使用.md","hash":"2d6ed4f249819a98305ec913dc56e8bf5315ca59","modified":1544926183814},{"_id":"source/_posts/CMD命令.md","hash":"1c3216b1e957e59d296683bc3d1cd5d9f5fab218","modified":1542426181823},{"_id":"source/_posts/Go的学习进度.md","hash":"534f5773367521372bb23bf14b729e16788492da","modified":1545577385259},{"_id":"source/_posts/Go环境搭建.md","hash":"6123634a4b0a55c627259442a12224d2fbfcd695","modified":1545909908519},{"_id":"source/_posts/Javascript整理.md","hash":"6b25c3120c8bc0f114c87e8a2a00b076c32b2162","modified":1542296496387},{"_id":"source/_posts/Js中require和import的使用.md","hash":"74a0979a23388795f8bb9da820a784c3037dabbc","modified":1548235071443},{"_id":"source/_posts/Linux下cmake的使用.md","hash":"d2d90b9b0b47e622eeca54ba3f915cc1c190cafd","modified":1541251964566},{"_id":"source/_posts/Linux手册.md","hash":"40d19e15f4393745214b41ff6a24afcf91471953","modified":1543638256080},{"_id":"source/_posts/RabitMQ使用.md","hash":"d222f743c9c1d8ff9182c6eece27b379a6e3a02c","modified":1542640670291},{"_id":"source/_posts/Kafka使用.md","hash":"7ef122882bf4acc2d91eec39352e185b13fa31bd","modified":1545653190097},{"_id":"source/_posts/Rapberry使用.md","hash":"43927789a31dc76195ddd568378aaaac2cdac890","modified":1545804531848},{"_id":"source/_posts/Samba网络问题定位.md","hash":"a5e66c134df7fa2f938ec2300c7dd782997217c5","modified":1545749415117},{"_id":"source/_posts/Sphinx.md","hash":"13ce8b30d449debf7cfd9bec8952a89edb61f504","modified":1541902699801},{"_id":"source/_posts/TravisCI使用.md","hash":"df6101135cb42e7dddbb8f6d8236f210227552c5","modified":1545631090246},{"_id":"source/_posts/UML使用.md","hash":"9a4ac8565244a3291c1be6e8b8652c2938e72e83","modified":1543140728009},{"_id":"source/_posts/VSCode更新记录.md","hash":"bcce3432f25076dc1f78219610f7f6f999046717","modified":1547968326915},{"_id":"source/_posts/acl开源库的使用.md","hash":"1085c44560ceac4a14d355bcd4f1b36b36ec8b37","modified":1541251964567},{"_id":"source/_posts/acl模块之singleton.md","hash":"7c0ee21e8f800bc1d4eebf052fe2393e92611c89","modified":1541251964568},{"_id":"source/_posts/docker入门.md","hash":"ae895e88c7935c5018df9b913ef0e2595246abab","modified":1545795147022},{"_id":"source/_posts/boost版本.md","hash":"35fedc483a9e440f6b918655997d2581b290fc3f","modified":1541320755883},{"_id":"source/_posts/gulp入门.md","hash":"5eee7cc081d749849a6a9a581dfa3cc1cf0084f5","modified":1547528018421},{"_id":"source/_posts/kernel学习.md","hash":"a137a0fc2c82bdc87c66abb91be55886abff9303","modified":1545825735987},{"_id":"source/_posts/linux上安装gcc.md","hash":"ce16e05114e2344ffd200cac625beafd5bd385f8","modified":1545888314414},{"_id":"source/_posts/muduo的使用入门.md","hash":"26fcd1bbd9aa31a007e4b3be77146328e4bd7bdd","modified":1541259965329},{"_id":"source/_posts/python整理.md","hash":"5bbdb665121e6a2e786299f6459695466e8bce24","modified":1545891197995},{"_id":"source/_posts/qemu简介.md","hash":"93656b2209e83be8031f9d6a2af46abc79276003","modified":1545570178090},{"_id":"source/_posts/redis安装和使用.md","hash":"cd60f41844c7199e3df434c2a8e127b830eb5fd3","modified":1542529297862},{"_id":"source/_posts/svn使用.md","hash":"2395cf173f02fd4eb92f44f93d80e3213d3def3a","modified":1541690602612},{"_id":"source/_posts/typora-pandoc使用.md","hash":"3eff3265fa9ce51d2e651178f0cbb3a5205779a7","modified":1542899906701},{"_id":"source/_posts/valgrind使用.md","hash":"c5f201fd0ac37085445dca18066985950fe23f28","modified":1541690612000},{"_id":"source/_posts/yarn入门.md","hash":"5f170ca67fb07b208c235e16033f5c96f36f9064","modified":1547526014905},{"_id":"source/_posts/使用acl实现websocket.md","hash":"20e4a12dc276b5e134cd23063a9f835290bdb1f1","modified":1541251964569},{"_id":"source/_posts/前端基础常识.md","hash":"29ac0624f91904891aac6b6391302b846ad935fc","modified":1542458551272},{"_id":"source/_posts/类之间的关系.md","hash":"1c5527da9493e2c94735ee7b0d4a76b89ac08364","modified":1543587959500},{"_id":"source/_posts/蓝牙.md","hash":"bccef3a339a286a8fdf481c9aaf976af9f894074","modified":1541899883733},{"_id":"source/_posts/脚本使用.md","hash":"4753fcee4600f0505fdf0426ca347bac986b958a","modified":1547537151613},{"_id":"source/_posts/译文-C-Go-Cgo.md","hash":"d2289de74da30f6d9911a3e96f70490c075c3b5c","modified":1546352250997},{"_id":"themes/brill/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1541256061333},{"_id":"themes/brill/.git/config","hash":"5a7f94adae2b33a78bf4855001e38c8a43654b4a","modified":1541256061352},{"_id":"source/about/index.md","hash":"7252bab15d2aa5fbc97506488ac71d3fec10ed31","modified":1541251964570},{"_id":"themes/brill/.git/index","hash":"d076329ad1b73b37d752e04bee825383a6c1e6cf","modified":1541958717403},{"_id":"themes/brill/.git/packed-refs","hash":"8630a949882b0bb3b0aa1f8fe3f05fbbb9254247","modified":1541256061308},{"_id":"themes/brill/_config.yml","hash":"858335b12e07494d38131a4abcdc5a91b1bbf072","modified":1542296327670},{"_id":"themes/brill/source/apple-touch-icon.png","hash":"c36a373c7830d61d1ce092bd5a88d0e9b54212fd","modified":1541256061398},{"_id":"themes/brill/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1541256045472},{"_id":"themes/brill/languages/default.yml","hash":"9e59cd11b290be84909612beb12d0f93ce737f53","modified":1541256061367},{"_id":"themes/brill/languages/de.yml","hash":"ecb13af8af81ccc033ae7494cb2f94f84f6466ad","modified":1541256061366},{"_id":"themes/brill/languages/en.yml","hash":"8fa0a7482188ca56fd3cf19c4a87320f85a76846","modified":1541256061367},{"_id":"themes/brill/languages/es.yml","hash":"1f9e9c0084e972c8e40045da963ec4904ac79327","modified":1541256061368},{"_id":"themes/brill/languages/pt-BR","hash":"922b6d836cc690742b2d55a725e3886c5d0cbb75","modified":1541256061369},{"_id":"themes/brill/languages/fr-FR.yml","hash":"12cfa96dc412ecb6f8bf4de2690575929464906e","modified":1541256061368},{"_id":"themes/brill/languages/ru.yml","hash":"9997425292031ee8a58a93346ac6d3f38f18e566","modified":1541256061369},{"_id":"themes/brill/languages/zh-Hans.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1541256061370},{"_id":"themes/brill/languages/zh-hk.yml","hash":"606dfb34d3fec1d7895a654ff7a5a1de0c6a5c55","modified":1541256061370},{"_id":"themes/brill/languages/zh-tw.yml","hash":"9e4034870b57d2bb3063c91f8d206a6c4d7b3789","modified":1541256061371},{"_id":"themes/brill/languages/zh.yml","hash":"0d7e8da60fd5e5db217e1733ac273ae00fd752ea","modified":1541256061371},{"_id":"themes/brill/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1541256061394},{"_id":"themes/brill/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1541256061394},{"_id":"themes/brill/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1541256061394},{"_id":"themes/brill/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1541256061397},{"_id":"themes/brill/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1541256061395},{"_id":"themes/brill/source/css/default.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1541256061474},{"_id":"themes/brill/layout/plugins.swig","hash":"f809b5e62e968a80921c56e5d7658325b48b7263","modified":1541256061396},{"_id":"themes/brill/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1541256061397},{"_id":"source/_posts/_linux上安装gcc/buildexe.png","hash":"870099a2bb7ab08c183737c88191a785482796f3","modified":1545809002900},{"_id":"themes/brill/layout/layout.ejs","hash":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1541256061395},{"_id":"source/_posts/_Samba网络问题定位/smbd01.png","hash":"9487cf8b5ba26728a3c629306aab729f2459d4fb","modified":1545743686693},{"_id":"themes/brill/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1541256045500},{"_id":"themes/brill/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1541256045492},{"_id":"themes/brill/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1541256045477},{"_id":"themes/brill/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1541256045484},{"_id":"themes/brill/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1541256045506},{"_id":"themes/brill/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1541256045520},{"_id":"themes/brill/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1541256045513},{"_id":"themes/brill/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1541256045527},{"_id":"themes/brill/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1541256045547},{"_id":"themes/brill/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1541256045539},{"_id":"themes/brill/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1541256045533},{"_id":"themes/brill/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1541256045546},{"_id":"themes/brill/.git/logs/HEAD","hash":"0d71a38564b4dc9f0b4212d3e78b34da5610e716","modified":1541256061342},{"_id":"themes/brill/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1541256061477},{"_id":"themes/brill/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1541256061478},{"_id":"themes/brill/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1541256061479},{"_id":"themes/brill/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1541256061479},{"_id":"themes/brill/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1541256061480},{"_id":"themes/brill/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1541256061478},{"_id":"themes/brill/source/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1541256061485},{"_id":"themes/brill/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1541256061485},{"_id":"themes/brill/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1541256061460},{"_id":"themes/brill/source/css/loading-style.css","hash":"1f67362d809e85edc9f122db7bc3711af1ed1d8b","modified":1541256061475},{"_id":"themes/brill/source/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1541256061484},{"_id":"themes/brill/source/css/_variables.styl","hash":"a753c14f409a294188f2e99575f2c10b82fd56a2","modified":1541256061474},{"_id":"themes/brill/source/css/style.styl","hash":"e2064d2ba11610154306730bfbac821b9633abe7","modified":1541256061477},{"_id":"themes/brill/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1541256061498},{"_id":"themes/brill/source/img/alipay.png","hash":"6ec0c618109aac31a212d252a3b85f2975b82b3a","modified":1541256061495},{"_id":"themes/brill/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1541256061498},{"_id":"themes/brill/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1541256061498},{"_id":"themes/brill/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1541256061499},{"_id":"themes/brill/source/img/favicon.png","hash":"4c9afb35c30b5f6914a1ae9fdeb0a6bde1b20866","modified":1541256061499},{"_id":"themes/brill/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1541256061500},{"_id":"themes/brill/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1541256061500},{"_id":"themes/brill/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1541256061501},{"_id":"themes/brill/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1541256061502},{"_id":"themes/brill/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1541256061503},{"_id":"themes/brill/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1541256061504},{"_id":"themes/brill/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1541256061504},{"_id":"themes/brill/source/img/instagram.png","hash":"3c148a3882a8d141d7d405be8c4815d0dcb03561","modified":1541256061503},{"_id":"themes/brill/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1541256061505},{"_id":"themes/brill/source/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1541256061505},{"_id":"themes/brill/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1541256061506},{"_id":"themes/brill/source/img/segmentfault.png","hash":"4483ab273423deb65021111fc8ad9512b69e45b2","modified":1541256061507},{"_id":"themes/brill/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1541256061507},{"_id":"themes/brill/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1541256061506},{"_id":"themes/brill/source/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1541256061508},{"_id":"themes/brill/source/css/showshare.css","hash":"d5288601c95acd7fea993ac8cc3d04efcbdd1559","modified":1541256061476},{"_id":"themes/brill/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1541256061508},{"_id":"themes/brill/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1541256061510},{"_id":"themes/brill/source/img/weixin.png","hash":"92b8df9aba9169c1553c01994bf21a938fa39cb7","modified":1541256061510},{"_id":"themes/brill/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1541256061511},{"_id":"themes/brill/source/js/TweenMax.js","hash":"0ba64564a4fde4085fa3971dd53b7d64a41751e1","modified":1541256061513},{"_id":"themes/brill/source/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1541256061515},{"_id":"themes/brill/source/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1541256061517},{"_id":"themes/brill/source/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1541256061518},{"_id":"themes/brill/source/js/mobile.js","hash":"d3847e5bcaf39108931724ecb02770c62b10889f","modified":1541256061519},{"_id":"themes/brill/source/js/pace.js","hash":"b49c10cd65d9488f7338e3c778e55ac6628650f3","modified":1541256061520},{"_id":"themes/brill/source/js/main.js","hash":"921b2fb56e48cce3d16ceb4a3fadf8e666c73a0a","modified":1541256061518},{"_id":"themes/brill/source/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1541256061521},{"_id":"themes/brill/source/js/pc.js","hash":"ab375af6e3bcd054b1e87e1a8dcd3d7d25c2db40","modified":1541256061520},{"_id":"themes/brill/source/img/head.jpg","hash":"caebdde0ea3db6816ab1d273bb137608f7402fde","modified":1541256061501},{"_id":"themes/brill/layout/_partial/archive-post.ejs","hash":"8af583c5f60c69ffdc97bee4e8fdac1ba34ebecd","modified":1541256061374},{"_id":"themes/brill/layout/_partial/archive.ejs","hash":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1541256061375},{"_id":"themes/brill/layout/_partial/background.ejs","hash":"cb656037dae582272c748c68a174f2da622d5a12","modified":1541256061376},{"_id":"themes/brill/layout/_partial/after-footer.ejs","hash":"d2d8fda1d50d193088dbd641c6dcc3bd2bdf0165","modified":1541256061372},{"_id":"themes/brill/layout/_partial/case.swig","hash":"a2a7ec0e4c203e49fd32335c60c3b9851ed6e4a5","modified":1541256061377},{"_id":"themes/brill/layout/_partial/header.ejs","hash":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1541256061380},{"_id":"themes/brill/layout/_partial/bodybackground.ejs","hash":"931700a928b84577cc33dfff68a009188885f6c0","modified":1541256061376},{"_id":"themes/brill/layout/_partial/footer.ejs","hash":"0e54ea8678e6d6f0bf98a4b76f5c4ee4d424893f","modified":1541256061379},{"_id":"themes/brill/layout/_partial/hide-labels.ejs","hash":"e981795db4954ba5cc9d6844a6a2799bffdc0af3","modified":1541256061381},{"_id":"themes/brill/layout/_partial/head.ejs","hash":"6f34f1062b8bbd46bb5216332c8110c08697c6d2","modified":1541256061380},{"_id":"themes/brill/layout/_partial/article.ejs","hash":"b30e6dac43ac0c82cca3990f31e29004c1b8e647","modified":1541256061375},{"_id":"themes/brill/layout/_partial/mobile-nav.ejs","hash":"320de58b166710d02963d80f27bcd50478841401","modified":1541256061382},{"_id":"themes/brill/layout/_partial/mathjax.ejs","hash":"cdfd21f079933f3a275bc4088e1ca5e6068e75b4","modified":1541256061382},{"_id":"themes/brill/layout/_partial/left-col.ejs","hash":"9d9aaecfd40903be38b97c46d6b7f1ea3fd7354e","modified":1541256061381},{"_id":"themes/brill/layout/_partial/plugin.swig","hash":"17b6c6945e4b1b41dbb10d851f85ca10100c28ea","modified":1541256061383},{"_id":"themes/brill/layout/_partial/scrolling-button.ejs","hash":"b3a28974f37375796687e6100b48c3da6f662640","modified":1541256061389},{"_id":"themes/brill/layout/_partial/sidebar.swig","hash":"38bea91021bc559245ef7765a3fdd805ec9885c1","modified":1541256061391},{"_id":"themes/brill/layout/_partial/post-nav-button.ejs","hash":"c817bdf39f62670872aae19accea4c51f5e0bfa7","modified":1541256061384},{"_id":"themes/brill/layout/_partial/work.swig","hash":"6bdb6ec45f6179875e5a33bfdc7568a3831638fd","modified":1541256061393},{"_id":"themes/brill/layout/_partial/theme.swig","hash":"5a279ad8f6c6b7c104cce495faa563d8b7a7c74a","modified":1541256061392},{"_id":"themes/brill/layout/_partial/page.ejs","hash":"55ffdcc87b5fa50afdc370f439c0e812e307cbff","modified":1541256061383},{"_id":"themes/brill/source/background/bg-25.jpg","hash":"7a05a524b70c9acd75c3f16a3b9992e4587995bd","modified":1541256061443},{"_id":"themes/brill/source/img/alipayimg.jpg","hash":"259fb41d1aba355d36bf180ee290f7c752d86aa8","modified":1541256061496},{"_id":"themes/brill/source/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1541256061514},{"_id":"themes/brill/source/js/embed.js","hash":"8d2d4a812ab639bc02fdd8749d3a39f6b9406c54","modified":1541256061516},{"_id":"themes/brill/source/img/wechatimg.jpg","hash":"28f71f2debfbfed8f104474ea450ad0b8ce89645","modified":1541256061509},{"_id":"themes/brill/.git/objects/pack/pack-3f4b137aad4584d6d3234b2961cb55e43dc5dc66.idx","hash":"4931e763bad81524ecf6046aa79a9e47e8c36637","modified":1541256060914},{"_id":"themes/brill/.git/refs/heads/master","hash":"69facb24b6fe7a9223023978436e55703b28ed45","modified":1541256061341},{"_id":"themes/brill/source/background/bg-109.jpg","hash":"6171c1e921c8cc9bdcd7276cf7f0bee5295f4672","modified":1541256061403},{"_id":"themes/brill/source/background/bg-1.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1541256061399},{"_id":"themes/brill/source/background/bg-11.jpg","hash":"d69a0447e91f62977b144737f08620d77037c76a","modified":1541256061404},{"_id":"themes/brill/source/background/bg-17.jpg","hash":"6ab5e470059e8ccb0c8bc6786abfb5db7e9a1826","modified":1541256061429},{"_id":"themes/brill/source/background/bg-20.jpg","hash":"9d428ac435198b2a0107102a2e9ae71e53afe364","modified":1541256061435},{"_id":"themes/brill/source/background/bg-27.jpg","hash":"ced50e6e8cad2b0db97445c4e1463d4a62540b9b","modified":1541256061446},{"_id":"themes/brill/source/background/bg-26.jpg","hash":"3730aa317f9d75ca327b34478cd58e72667b04e8","modified":1541256061445},{"_id":"themes/brill/source/background/bg-3.jpg","hash":"f1347eddd07bdae93ab6bebad8627eddc5baeb44","modified":1541256061447},{"_id":"themes/brill/source/background/bg.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1541256061459},{"_id":"themes/brill/layout/_partial/toc.ejs","hash":"84bbda825793de643d5a40190fab2160af1e75e3","modified":1541256061393},{"_id":"themes/brill/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1541256061481},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1541256061482},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1541256061482},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1541256061484},{"_id":"themes/brill/source/css/_partial/archive.styl","hash":"a8bc2e2458bcc51fa68122274a41f5e4e52a8ebd","modified":1541256061461},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1541256061481},{"_id":"themes/brill/source/css/_partial/article.styl","hash":"956eddddae0059c0abc63c5cc820b6e987a673cc","modified":1541256061461},{"_id":"themes/brill/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1541256061483},{"_id":"themes/brill/source/css/_partial/footer.styl","hash":"cbf916a5338e69e05d0815c53aeb818d636b6d99","modified":1541256061464},{"_id":"themes/brill/source/css/_partial/highlight.styl","hash":"62d7930e9556f893088c65c5fc4229a10ebc7671","modified":1541256061465},{"_id":"themes/brill/source/css/_partial/baidushare.styl","hash":"fe36e3d8933b1b0b674aaf16e50dbf6090099912","modified":1541256061462},{"_id":"themes/brill/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1541256061465},{"_id":"themes/brill/source/css/_partial/main.styl","hash":"6e3d15fbe2663bb6fc408df4a771925c3eac65cf","modified":1541256061466},{"_id":"themes/brill/source/css/_partial/instagram.styl","hash":"db9cc156c7df27f7f54b0e7ff34b5949f55f99eb","modified":1541256061466},{"_id":"themes/brill/source/css/_partial/mobile-slider.styl","hash":"3bf9f2359f68c700e21618ad6262db81038c3d96","modified":1541256061467},{"_id":"themes/brill/source/css/_partial/mobile.styl","hash":"53b1a06e08df81427505cbc76cc8eb02bea54356","modified":1541256061467},{"_id":"themes/brill/source/css/_partial/page.styl","hash":"46b9c91428c1e1f42cc8a1010f600f70fb8edc82","modified":1541256061468},{"_id":"themes/brill/source/css/_partial/scroll.styl","hash":"1932774d30b8706919342f9cf36ea2d99987ce14","modified":1541256061471},{"_id":"themes/brill/source/css/_partial/plugins.styl","hash":"629ae10dfc053dbfc074966f0bf7f0115acf65e2","modified":1541256061468},{"_id":"themes/brill/source/css/_partial/share.styl","hash":"2dde7c9ea40c71fce3dbd8d5e2bcc8d9682141b8","modified":1541256061471},{"_id":"themes/brill/source/css/_partial/tagcloud.styl","hash":"91e6553775ca931a1b3db1ab11c4cf227df68c21","modified":1541256061472},{"_id":"themes/brill/source/css/_partial/reward.styl","hash":"2b705bcc1c2f8c71a979aa10851a162d1deba394","modified":1541256061470},{"_id":"themes/brill/source/css/_partial/wheelmenu.styl","hash":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1541256061472},{"_id":"themes/brill/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1541256061473},{"_id":"themes/brill/source/css/pace/pace-theme-flash.css","hash":"508bce8b59a1fbc1f1443a7c4ab3b026e5517dab","modified":1541256061476},{"_id":"themes/brill/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1541256061473},{"_id":"themes/brill/source/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1541256061486},{"_id":"themes/brill/source/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1541256061487},{"_id":"themes/brill/source/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1541256061513},{"_id":"themes/brill/source/js/gitment.browser.js","hash":"6154e6a3bfb402c3ecc9b7889675f1f640926b75","modified":1541256061517},{"_id":"source/_posts/_linux上安装gcc/寻址方式.png","hash":"9a9e73a27216375b8d6d4b3005e553abd315515e","modified":1545822117933},{"_id":"themes/brill/layout/_partial/analytics/baidu-analytics.ejs","hash":"b21500b87d79a0068e3ca0408b4e125e3e749d01","modified":1541256061373},{"_id":"themes/brill/layout/_partial/analytics/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1541256061374},{"_id":"themes/brill/layout/_partial/comments/disqus.ejs","hash":"7792a79ab85ef28551cc2a793735973b1d5521a7","modified":1541256061378},{"_id":"themes/brill/layout/_partial/comments/duoshuo.ejs","hash":"f6112c3f08f46dde1c0ba6a5bee8017624590e47","modified":1541256061378},{"_id":"themes/brill/layout/_partial/comments/youyan.ejs","hash":"a6853b59ee60e775de1ed90b242084f83774d195","modified":1541256061379},{"_id":"themes/brill/layout/_partial/comments/gitment.ejs","hash":"a3248f670ca13c4ea1e330cf8b89152adb8b5625","modified":1541256061378},{"_id":"themes/brill/layout/_partial/post/date.ejs","hash":"1cfcf2e06ab9b1c6dcd44f41825dfe98d400c7ea","modified":1541256061385},{"_id":"themes/brill/layout/_partial/post/category.ejs","hash":"265bb12f7cfa5e0bcbb74fdd409ba13a6d9d2e22","modified":1541256061385},{"_id":"themes/brill/layout/_partial/post/TipTitle.ejs","hash":"65b0956edca84e0bc0eb616ec236309822d5f803","modified":1541256061385},{"_id":"themes/brill/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1541256061388},{"_id":"themes/brill/layout/_partial/post/swiftype.ejs","hash":"76374e601d911e1279e1944d2a6b7eb3391c7c7c","modified":1541256061387},{"_id":"themes/brill/layout/_partial/post/loading.ejs","hash":"52a576a8afee08d33c6f69a61c496e1820132e91","modified":1541256061386},{"_id":"themes/brill/layout/_partial/post/tag.ejs","hash":"9dad471e27de9e066666f3082137eccaede2e67b","modified":1541256061388},{"_id":"themes/brill/layout/_partial/post/nav.ejs","hash":"4779c17cf76bf4560e52708102467bb8ec7a2781","modified":1541256061387},{"_id":"themes/brill/source/background/bg-15.jpg","hash":"ce5760578eb814fe951c56200e81c6f47b6468d4","modified":1541256061425},{"_id":"themes/brill/source/background/bg-23.jpg","hash":"050937d649be2c02ef8a66a0ffe7d320b236d1b0","modified":1541256061440},{"_id":"themes/brill/source/background/bg-7.jpg","hash":"acbe0946a47ba16b79f062dbee14c4c9ff9a48da","modified":1541256061454},{"_id":"themes/brill/source/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1541256061489},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1541256061494},{"_id":"themes/brill/source/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1541256061512},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1541256061489},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1541256061494},{"_id":"themes/brill/layout/_partial/share/baidu-share.ejs","hash":"993b7d231881601ba79aab1e78d75dcb271b3500","modified":1541256061390},{"_id":"themes/brill/.git/logs/refs/heads/master","hash":"0d71a38564b4dc9f0b4212d3e78b34da5610e716","modified":1541256061344},{"_id":"themes/brill/source/background/bg-14.jpg","hash":"2fd6ede2bc9de2d26d910ea4e45d28b2350881eb","modified":1541256061424},{"_id":"themes/brill/source/background/bg-9.jpg","hash":"df731da0fe0de9a05d99d017e747252c990f972d","modified":1541256061458},{"_id":"themes/brill/layout/_partial/share/showshare.ejs","hash":"410b809eb6c50bacfd9e1e573f1e0251841bc79d","modified":1541256061391},{"_id":"themes/brill/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1541256061329},{"_id":"themes/brill/layout/_partial/share/share.ejs","hash":"62467610ba6df9b63350d163e806be774dcf5a00","modified":1541256061390},{"_id":"themes/brill/source/css/_partial/customise/blockquote.styl","hash":"83179f1d0e12b025cd433a6071b2826c2b4168cc","modified":1541256061463},{"_id":"themes/brill/source/css/_partial/customise/code-block.styl","hash":"1f05c0558b2970c369fe19bafbc8a1821c09bce0","modified":1541256061463},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1541256061493},{"_id":"themes/brill/source/css/_partial/customise/inline-code.styl","hash":"ac2fcef8823d5566c0e27f23b2a46beecbd71c72","modified":1541256061464},{"_id":"themes/brill/source/css/_partial/post/youyan.styl","hash":"ac2869e2e0fb3a1ee0df4b0c0a233a2b1923ea20","modified":1541256061470},{"_id":"themes/brill/source/css/_partial/post/gitment.styl","hash":"9a103392d4fd8ba0667e633fcb8b30d36d51ef65","modified":1541256061469},{"_id":"themes/brill/source/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1541256061523},{"_id":"themes/brill/source/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1541256061522},{"_id":"themes/brill/source/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1541256061522},{"_id":"themes/brill/source/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1541256061523},{"_id":"themes/brill/source/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1541256061526},{"_id":"themes/brill/source/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1541256061524},{"_id":"themes/brill/source/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1541256061525},{"_id":"themes/brill/source/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1541256061525},{"_id":"themes/brill/source/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1541256061527},{"_id":"themes/brill/source/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1541256061527},{"_id":"themes/brill/source/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1541256061526},{"_id":"themes/brill/source/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1541256061528},{"_id":"themes/brill/source/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1541256061529},{"_id":"themes/brill/source/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1541256061528},{"_id":"themes/brill/source/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1541256061529},{"_id":"themes/brill/source/static/api/js/share.js","hash":"5e71147fe4a93bc99387a5cc1c6894d8b6ab2d5e","modified":1541256061555},{"_id":"themes/brill/source/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1541256061530},{"_id":"themes/brill/source/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1541256061530},{"_id":"themes/brill/source/background/bg-19.jpg","hash":"d77504412d28432643fc61ed9fd9f7c57096bdd9","modified":1541256061432},{"_id":"themes/brill/source/background/bg-21.jpg","hash":"7c4c6cd5d75115093fa29bba7372fa198f04b0f1","modified":1541256061437},{"_id":"themes/brill/source/background/bg-22.jpg","hash":"7a055391fa4188d9c22fdc1d34a10b26e2f0826d","modified":1541256061438},{"_id":"themes/brill/source/background/bg-24.jpg","hash":"796fa5262d7714e8ce9496a2d03864429cfc5b45","modified":1541256061443},{"_id":"themes/brill/source/background/bg-4.jpg","hash":"da47f889e02241c8b095f852fb7efd89c114599d","modified":1541256061448},{"_id":"themes/brill/source/background/bg-6.jpg","hash":"1a4f4c8875b2c56e7992000979a7fca7856eec35","modified":1541256061453},{"_id":"themes/brill/source/background/bg-8.jpg","hash":"dbecc189e28d00fa23e397eb512e039c2ff03c87","modified":1541256061456},{"_id":"themes/brill/source/static/api/img/share/l8.gif","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1541256061540},{"_id":"themes/brill/source/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1541256061560},{"_id":"themes/brill/source/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1541256061560},{"_id":"themes/brill/.git/logs/refs/remotes/origin/HEAD","hash":"0d71a38564b4dc9f0b4212d3e78b34da5610e716","modified":1541256061328},{"_id":"themes/brill/source/background/bg-10.jpg","hash":"dfb23c1c3cf8a3dcb8dc0ea10cf06501c151a2a2","modified":1541256061402},{"_id":"themes/brill/source/background/bg-12.jpg","hash":"2e0815591309863d8130881681cde32ec4bfebf1","modified":1541256061420},{"_id":"themes/brill/source/background/bg-18.jpg","hash":"4d61dc41a781a9c1d37c9e5e413ac0d8a9538f6a","modified":1541256061430},{"_id":"themes/brill/source/img/bg.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1541256061497},{"_id":"themes/brill/source/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1541256061532},{"_id":"themes/brill/source/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1541256061534},{"_id":"themes/brill/source/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1541256061531},{"_id":"themes/brill/source/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1541256061533},{"_id":"themes/brill/source/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1541256061534},{"_id":"themes/brill/source/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1541256061536},{"_id":"themes/brill/source/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1541256061535},{"_id":"themes/brill/source/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1541256061537},{"_id":"themes/brill/source/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1541256061539},{"_id":"themes/brill/source/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1541256061535},{"_id":"themes/brill/source/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1541256061538},{"_id":"themes/brill/source/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1541256061538},{"_id":"themes/brill/source/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1541256061539},{"_id":"themes/brill/source/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1541256061540},{"_id":"themes/brill/source/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1541256061537},{"_id":"themes/brill/source/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1541256061539},{"_id":"themes/brill/source/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1541256061540},{"_id":"themes/brill/source/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1541256061541},{"_id":"themes/brill/source/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1541256061542},{"_id":"themes/brill/source/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1541256061541},{"_id":"themes/brill/source/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1541256061542},{"_id":"themes/brill/source/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1541256061544},{"_id":"themes/brill/source/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1541256061543},{"_id":"themes/brill/source/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1541256061543},{"_id":"themes/brill/source/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1541256061545},{"_id":"themes/brill/source/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1541256061546},{"_id":"themes/brill/source/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1541256061547},{"_id":"themes/brill/source/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1541256061546},{"_id":"themes/brill/source/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1541256061544},{"_id":"themes/brill/source/static/api/js/conf/const.js","hash":"e2269411b129b847eca265fbc73f0d573f2474bb","modified":1541256061554},{"_id":"themes/brill/source/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1541256061545},{"_id":"themes/brill/source/static/api/js/conf/define.js","hash":"1393906ec26b7cf711c18e569a64f7d0c1951fc7","modified":1541256061555},{"_id":"themes/brill/source/static/api/js/base/class.js","hash":"ad1e5a3011e30b83ac8aaeabffc3311dcb151bf5","modified":1541256061548},{"_id":"themes/brill/source/static/api/js/component/animate.js","hash":"00b6f74ed82e5a21a9295dd2dc963e892734b7f6","modified":1541256061549},{"_id":"themes/brill/source/static/api/js/component/comm_tools.js","hash":"e651fbb1a85ab9c615ee833f4d042c203ef430bc","modified":1541256061550},{"_id":"themes/brill/source/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1541256061550},{"_id":"themes/brill/source/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1541256061551},{"_id":"themes/brill/source/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1541256061552},{"_id":"themes/brill/source/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1541256061551},{"_id":"themes/brill/source/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1541256061552},{"_id":"themes/brill/source/static/api/js/share/combine_api.js","hash":"c45d76df1707b4fd739dae7022dc4a015632a81a","modified":1541256061556},{"_id":"themes/brill/source/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1541256061556},{"_id":"themes/brill/source/static/api/js/component/pop_popup_slide.js","hash":"1119fc14abd34ffb8e1f653cd30ca26adaafa3bf","modified":1541256061553},{"_id":"themes/brill/source/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1541256061553},{"_id":"themes/brill/source/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1541256061557},{"_id":"themes/brill/source/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1541256061558},{"_id":"themes/brill/source/static/api/js/share/like_api.js","hash":"3526047b7f9f7446b883e2fa5ebcf143526449be","modified":1541256061557},{"_id":"themes/brill/source/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1541256061558},{"_id":"themes/brill/source/static/api/js/share/likeshare.js","hash":"d088ffe7b6451cedf202280d16e85f75a8c3bfd3","modified":1541256061557},{"_id":"themes/brill/source/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1541256061559},{"_id":"themes/brill/source/static/api/js/trans/trans_bdysc.js","hash":"1be632b99fdd67ba5279aa6c56db7d528fd094c3","modified":1541256061561},{"_id":"themes/brill/source/static/api/js/trans/trans.js","hash":"2bf87aff540cba3bee6cc05a7a8e9a2bc8b5d907","modified":1541256061560},{"_id":"themes/brill/source/static/api/js/start/router.js","hash":"97c195ae0d30dd8c7aac55a0555f082eeed4eee0","modified":1541256061560},{"_id":"themes/brill/source/static/api/js/trans/trans_bdxc.js","hash":"da78025de5717315252d2d33b4252c89b891c71c","modified":1541256061561},{"_id":"themes/brill/source/static/api/js/view/like_view.js","hash":"42b51bd3ee4815b9ca8df6dacb9c81a8a34d762a","modified":1541256061563},{"_id":"themes/brill/source/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1541256061562},{"_id":"themes/brill/source/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1541256061564},{"_id":"themes/brill/source/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1541256061563},{"_id":"themes/brill/source/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1541256061564},{"_id":"themes/brill/source/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1541256061565},{"_id":"themes/brill/source/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1541256061565},{"_id":"themes/brill/source/background/bg-111.jpg","hash":"e1631b47fede8da6c03582ceed648668547c4f09","modified":1541256061406},{"_id":"themes/brill/source/background/bg-13.jpg","hash":"d7237c6014e28c90f53287f48f718d0759af104b","modified":1541256061422},{"_id":"themes/brill/source/background/bg-16.jpg","hash":"d1a34d0c4b69262169b543922e4aeb4dae997ad8","modified":1541256061427},{"_id":"themes/brill/source/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1541256061491},{"_id":"themes/brill/source/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1541256061549},{"_id":"themes/brill/source/background/bg-2.jpg","hash":"40a6db13e9c461f80e2c4efee7fb63bbd594e751","modified":1541256061434},{"_id":"themes/brill/source/background/bg-5.jpg","hash":"2d5da2a209732cce0abf2ca234c0bef0516b65ff","modified":1541256061451},{"_id":"themes/brill/source/background/bg-112.jpg","hash":"54d04b06878eec5d021b6f257bc44298f953a2b7","modified":1541256061418},{"_id":"themes/brill/.git/objects/pack/pack-3f4b137aad4584d6d3234b2961cb55e43dc5dc66.pack","hash":"a70ffe300ac99d7eec1c05397b35a8cdb375859d","modified":1541256060933},{"_id":"public/categories/window/index.html","hash":"d373021448f048a72769abe9658e805ec9db2dd3","modified":1548309449197},{"_id":"public/categories/软件工程/index.html","hash":"983d2f314f30472d93beffe9ce66c4e0bb2208cf","modified":1548309449312},{"_id":"public/categories/开源代码/index.html","hash":"b65b97e41b4c8cc078500a416f96e31e6ae1c9ec","modified":1548309449317},{"_id":"public/categories/版本管理/index.html","hash":"ecbc604c581d8322ba3dda994b4e2d9d7f777556","modified":1548309449317},{"_id":"public/categories/前端/index.html","hash":"1ffa8e037a3c33e0d9b0d1a9688caec7295109f5","modified":1548309449318},{"_id":"public/tags/friend-declaration1/index.html","hash":"d1286d05fcae52047dd571042154f6d5c65ea27b","modified":1548309449318},{"_id":"public/tags/cmd/index.html","hash":"0e48081b0f67a31a85039e095403faaa3ca4c1fa","modified":1548309449318},{"_id":"public/tags/CMake/index.html","hash":"0383c5d66acb31ffe3cb9aad8286d18ed0b3e0e2","modified":1548309449318},{"_id":"public/tags/Go/index.html","hash":"e41cd35c7f60df73ec57abb472a479be9e29582f","modified":1548309449318},{"_id":"public/tags/GO/index.html","hash":"bfc55d7ce0bc68023ebad72b191f785547fa38ef","modified":1548309449318},{"_id":"public/tags/Javascript/index.html","hash":"483f1ed97ef631d78610bd71a92d57f3a02b82d2","modified":1548309449318},{"_id":"public/tags/make/index.html","hash":"6a1d181fbbe818be71a00709fc673f979735f565","modified":1548309449318},{"_id":"public/tags/RabbitMQ/index.html","hash":"c280445bdf66b8a11c19a54d199db894598692b2","modified":1548309449318},{"_id":"public/tags/Sphinx/index.html","hash":"78001b61e85a329d2efcf84f3aeb56c303afd57f","modified":1548309449318},{"_id":"public/tags/UML/index.html","hash":"6d83513a41113e1504f339f976e54503001d2084","modified":1548309449318},{"_id":"public/tags/VSCode/index.html","hash":"b7ca53e8d0fbe48ea46b544ec4459837cf09b5a3","modified":1548309449318},{"_id":"public/tags/singleton/index.html","hash":"605b0c0b446e664ce6ad261284c643c70828e5d9","modified":1548309449318},{"_id":"public/tags/c/index.html","hash":"85aed16f71d2217a17097ce2ed5fc8cab3b9ef3d","modified":1548309449318},{"_id":"public/tags/redis/index.html","hash":"7afed237303bb85e7f96c678efb44f14f9657b4f","modified":1548309449318},{"_id":"public/tags/svn/index.html","hash":"5ba6b15273274b101a204a2297a12d5dd6246b18","modified":1548309449318},{"_id":"public/tags/valgrind/index.html","hash":"45a26364fe11481b84bf46414bbd2f63595e6eea","modified":1548309449318},{"_id":"public/tags/shell/index.html","hash":"777704d812ed1d0c80fd6b73596e100a6fde8892","modified":1548309449318},{"_id":"public/tags/前端常识/index.html","hash":"bb2049fc21de61704d6c26ac3d4bf4e8129a1f3a","modified":1548309449318},{"_id":"public/tags/Class/index.html","hash":"15601e2c2848d4e07570fe978bc54b958f126ff8","modified":1548309449318},{"_id":"public/tags/bluetooth/index.html","hash":"4260ba89aed01e713e82ae44080d30602a30ef0c","modified":1548309449318},{"_id":"public/about/index.html","hash":"8953911cd2dea1b33169df796c472944a6232778","modified":1548309449318},{"_id":"public/2018/11/30/C-系列-友元/index.html","hash":"1df48b68e2e468b581734e4a848761721fa19bea","modified":1548309449318},{"_id":"public/2018/12/13/Go环境搭建/index.html","hash":"eb3fb13ef78e78b684ab8dc6e5d0b8767a092c85","modified":1548309449319},{"_id":"public/2018/12/01/linux上安装gcc/index.html","hash":"4eb7d50b5bde3b43bd6213ce9571ecabe1f474ea","modified":1548309449319},{"_id":"public/2018/12/12/kernel学习/index.html","hash":"1fdaa95ab474683035c42e1d4e68edcbfa8ade70","modified":1548309449319},{"_id":"public/2018/11/25/类之间的关系/index.html","hash":"6de20ef4c49b4225ef8277ffb7f9b4558bc87e77","modified":1548309449319},{"_id":"public/2018/11/25/UML使用/index.html","hash":"f31b034b0865e35f8a4f83b2c1482b1166eb95b7","modified":1548309449319},{"_id":"public/2018/11/19/VSCode更新记录/index.html","hash":"df3c4353ca308871a5deada36ca250fe28b0cfad","modified":1548309449319},{"_id":"public/2018/11/22/typora-pandoc使用/index.html","hash":"fffde4bd8c846dd2f3a3ddb6297a680685f9d133","modified":1548309449319},{"_id":"public/2018/11/18/RabitMQ使用/index.html","hash":"eb48fa42701941af960aebd7811976380ff3379d","modified":1548309449319},{"_id":"public/2018/11/17/CMD命令/index.html","hash":"dced4e7d82815416e7b0df7f09c9d593672d6dc4","modified":1548309449319},{"_id":"public/2018/11/15/Javascript整理/index.html","hash":"4bdb0e3fc668d14d52e57c7046fe6d0196f0000e","modified":1548309449319},{"_id":"public/2018/11/11/Sphinx/index.html","hash":"cae46f307c0d5536bb79c56fc6e634cf087a6457","modified":1548309449319},{"_id":"public/2018/11/17/前端基础常识/index.html","hash":"a91fd734c81d77869abab50446891668089e473f","modified":1548309449319},{"_id":"public/2018/11/08/CMake的使用/index.html","hash":"cc5f6f070895b95f75e194b126500f21265ee8f0","modified":1548309449319},{"_id":"public/2018/11/11/蓝牙/index.html","hash":"fc66ff6938f74170aa8bd3cb15a7038374db9abd","modified":1548309449319},{"_id":"public/2018/11/05/valgrind使用/index.html","hash":"9efae19949ee418b834e8c0a4d12d7ea78a9c375","modified":1548309449319},{"_id":"public/2018/11/04/svn使用/index.html","hash":"20351a761326f7e8dda9a7a9f41ecaf2cf1b0849","modified":1548309449319},{"_id":"public/2018/11/03/muduo的使用入门/index.html","hash":"2091d1ec329e5bfa26f858024042ffb84a73552c","modified":1548309449319},{"_id":"public/2018/11/04/boost版本/index.html","hash":"c4228651e949e25c2528e43396d90abee0a810dd","modified":1548309449319},{"_id":"public/2018/11/02/Linux下cmake的使用/index.html","hash":"a7590ebf2ee125b24de33993de433eed5e12e4fc","modified":1548309449319},{"_id":"public/2018/11/02/Linux手册/index.html","hash":"ae13b070ae3e2709a7af8caab0c596eec78dc9eb","modified":1548309449319},{"_id":"public/2018/10/15/acl模块之singleton/index.html","hash":"db9047657a3df4cf6713eb2f51a530fded5594b6","modified":1548309449319},{"_id":"public/2018/10/15/使用acl实现websocket/index.html","hash":"98bbc109e5c662d7ed60d21f8d5da73be554155f","modified":1548309449320},{"_id":"public/2018/10/15/redis安装和使用/index.html","hash":"05f2318afc253fcd8f7b8f4b7bdee160f1de7a0e","modified":1548309449320},{"_id":"public/2018/10/14/acl开源库的使用/index.html","hash":"50e8986c0b866a4b8593a17fcd9214fd4c6965d1","modified":1548309449320},{"_id":"public/archives/index.html","hash":"7d8722a21cfbaef14518cc55d2127e5d225293d6","modified":1548309449320},{"_id":"public/archives/page/2/index.html","hash":"0bffacb931b2c41c8596e5efd1cb12fb3d72dd9a","modified":1548309449320},{"_id":"public/archives/2018/index.html","hash":"cf8aa1c85a64843092cf6a39b9ca8c842d547599","modified":1548309449320},{"_id":"public/archives/2018/page/2/index.html","hash":"cbe6f80da7be109cc8c83588f7cc3aa51136144d","modified":1548309449320},{"_id":"public/archives/page/3/index.html","hash":"c6c94c95a4ab89343d12d25cff001906807c6853","modified":1548309449320},{"_id":"public/archives/2018/page/3/index.html","hash":"b39aa0d818cb09428f82f8a8c5933b391bb1fba1","modified":1548309449320},{"_id":"public/archives/2018/10/index.html","hash":"563912f135f3280ba23392e8c48610771ea7f812","modified":1548309449320},{"_id":"public/archives/2018/12/index.html","hash":"9c714dc67b808025d850ff1e7a9c597979311a25","modified":1548309449320},{"_id":"public/archives/2018/11/page/2/index.html","hash":"a5b50b1f6364d1059da053908baa813f7cd6f34e","modified":1548309449320},{"_id":"public/archives/2018/11/index.html","hash":"2a4632c7c656f93e1ae5eb10e63e6dcf6ee5e88a","modified":1548309449320},{"_id":"public/index.html","hash":"059038191f0818fa6a6c4fc3b4bff0bdd0957eb8","modified":1548309449320},{"_id":"public/page/2/index.html","hash":"51cea6267b78a8d1c2755d35ac517102ca34ba40","modified":1548309449320},{"_id":"public/page/3/index.html","hash":"201445398d6d42e25f5fba82cbee8cc370a1bd81","modified":1548309449320},{"_id":"public/tags/linux/index.html","hash":"9fd95926f776cbbca6b435153903bec56432de76","modified":1548309449320},{"_id":"public/tags/acl/index.html","hash":"31440943cd5124806aa2f2ae06585914f7a33894","modified":1548309449320},{"_id":"public/archives/2018/12/page/2/index.html","hash":"9129097d28a9f50de68fd8cbe3911334b2210500","modified":1548309449331},{"_id":"public/tags/DevOps/index.html","hash":"dccb33fe18add064c3b34471f0ed7a827b99e036","modified":1548309449331},{"_id":"public/tags/集群/index.html","hash":"74ebe1cccf1ed009e9c358efe23e4bc968fbdcfc","modified":1548309449331},{"_id":"public/tags/bug/index.html","hash":"d7ac21606e562936b1991b35d1cfd9ef7458fd55","modified":1548309449331},{"_id":"public/tags/项目管理/index.html","hash":"3070d8949897afe3354ca3caef653a05e87932e6","modified":1548309449331},{"_id":"public/tags/容器/index.html","hash":"c66136da6b455969fc15542dd48dea2e54fa6248","modified":1548309449331},{"_id":"public/tags/gulp/index.html","hash":"7c0b285f033ac1eb86ffc7a2e247f56f0946076a","modified":1548309449331},{"_id":"public/tags/python/index.html","hash":"51146bd04b4fe36ba1284ae5660190b7f3f905eb","modified":1548309449331},{"_id":"public/tags/工具/index.html","hash":"122ea12a7cc6e9cb5d50e1d135fb6b592ae11f7b","modified":1548309449331},{"_id":"public/tags/yarn/index.html","hash":"82a92806f0a58f7e0690f40da6a5e6d322a47725","modified":1548309449331},{"_id":"public/tags/译文/index.html","hash":"794de59a64ac731b9a14b5e527296c491804be0b","modified":1548309449331},{"_id":"public/2019/01/23/Js中require和import的使用/index.html","hash":"54475c2fc69be570dee9b1386623b32a8f7fa301","modified":1548309449331},{"_id":"public/2019/01/14/yarn入门/index.html","hash":"443cfed559a0ac1aa476c13e76d4e206d3b9a884","modified":1548309449331},{"_id":"public/2019/01/14/gulp入门/index.html","hash":"e7479d5edba56106b21bc4a7c507c60500e7e537","modified":1548309449331},{"_id":"public/2019/01/13/Azure-DevOps入门/index.html","hash":"4ab7208972b868fdff2388e6ad76a9c8c4ce2646","modified":1548309449331},{"_id":"public/2019/01/01/译文-C-Go-Cgo/index.html","hash":"8dca7e49f9d484dd53371745c2f6910aaa3bda06","modified":1548309449331},{"_id":"public/2018/12/27/python整理/index.html","hash":"cdad1115bbb29c17271aaa5bd031f6179521a71b","modified":1548309449331},{"_id":"public/2018/12/24/docker入门/index.html","hash":"8f10a4c888d7d6086f45568f58e36e2f5a01cbcc","modified":1548309449331},{"_id":"public/2018/12/24/Kafka使用/index.html","hash":"c91bfbfde4a04cc0bf4b3e52907c3a8182d197b0","modified":1548309449331},{"_id":"public/2018/12/24/TravisCI使用/index.html","hash":"1a23435a60963e33b3fb0655387c088419ba4d22","modified":1548309449333},{"_id":"public/2018/12/25/Samba网络问题定位/index.html","hash":"a371b745fa7e3220e119333f716655c8d54bdf13","modified":1548309449333},{"_id":"public/2018/12/23/qemu简介/index.html","hash":"144bd5e9135c7a65230ab66ce0d9a7f0aeb16739","modified":1548309449333},{"_id":"public/2018/12/26/Rapberry使用/index.html","hash":"509a20b079d5af07abb03fae02a886b94b347474","modified":1548309449333},{"_id":"public/2018/12/19/Go的学习进度/index.html","hash":"1a0cb932c07150331a5c9b612b7bb9210baeaae4","modified":1548309449333},{"_id":"public/2018/11/02/脚本使用/index.html","hash":"b22013e15847ec1e5d80970fc1c66ba5bd4cbf7b","modified":1548309449333},{"_id":"public/archives/page/4/index.html","hash":"ca035c53434ddf86afdc369b4ac9b8271d878e07","modified":1548309449333},{"_id":"public/archives/2018/page/4/index.html","hash":"94f08164a4f4cfee534366405b5147d2b62d5ca4","modified":1548309449333},{"_id":"public/archives/2019/index.html","hash":"867d6592374b4f554979ee40511a0e648832bca5","modified":1548309449333},{"_id":"public/archives/2019/01/index.html","hash":"9ebd53f2abcaa52facbd784dc89b8f305be00a85","modified":1548309449333},{"_id":"public/page/4/index.html","hash":"42c7d90d585d5a803bd7ba4dd4684f907d91652c","modified":1548309449333},{"_id":"public/static/api/img/share/l8.gif","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548309449333},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1548309449333},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1548309449333},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1548309449333},{"_id":"public/apple-touch-icon.png","hash":"c36a373c7830d61d1ce092bd5a88d0e9b54212fd","modified":1548309449333},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1548309449333},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1548309449333},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1548309449333},{"_id":"public/img/alipay.png","hash":"6ec0c618109aac31a212d252a3b85f2975b82b3a","modified":1548309449333},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1548309449333},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1548309449334},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1548309449334},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1548309449334},{"_id":"public/img/favicon.png","hash":"4c9afb35c30b5f6914a1ae9fdeb0a6bde1b20866","modified":1548309449334},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1548309449334},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1548309449334},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1548309449334},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1548309449334},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1548309449334},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1548309449334},{"_id":"public/img/instagram.png","hash":"3c148a3882a8d141d7d405be8c4815d0dcb03561","modified":1548309449334},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1548309449334},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1548309449334},{"_id":"public/img/qq.png","hash":"fd741764c5528fe371f053beac99839a97900eef","modified":1548309449334},{"_id":"public/img/segmentfault.png","hash":"4483ab273423deb65021111fc8ad9512b69e45b2","modified":1548309449334},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1548309449334},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1548309449334},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1548309449334},{"_id":"public/img/wechat.png","hash":"7ca41b6e32ca4dac419225261ab4fee5a88f73a9","modified":1548309449334},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1548309449334},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1548309449334},{"_id":"public/img/weixin.png","hash":"92b8df9aba9169c1553c01994bf21a938fa39cb7","modified":1548309449334},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1548309449334},{"_id":"public/img/head.jpg","hash":"caebdde0ea3db6816ab1d273bb137608f7402fde","modified":1548309449334},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1548309449334},{"_id":"public/static/api/img/share/icons_1_16.png","hash":"3793c3265429ab7b830bfaf18322259cd0b4c4ef","modified":1548309450284},{"_id":"public/static/api/img/share/icons_0_16.png","hash":"0eec1e81a04664b2032bd389513349e9bd5d5b0f","modified":1548309450285},{"_id":"public/static/api/img/share/icons_0_24.png","hash":"a89223f9714c8c4fa169430a327963ca6a1c9a6e","modified":1548309450288},{"_id":"public/static/api/img/share/icons_0_32.png","hash":"c20521634fdacef39631031671528713e6ba6081","modified":1548309450288},{"_id":"public/static/api/img/share/icons_1_24.png","hash":"9f1d472095dbe138ef7aff069b1d18cae6ffa942","modified":1548309450288},{"_id":"public/static/api/img/share/icons_1_32.png","hash":"09825de5f238c97e4374d545961d6e0d5bbfb3e2","modified":1548309450289},{"_id":"public/static/api/img/share/l3.gif","hash":"26c0dd37d98df63abb9d3d83e01bb47c34ee3f0f","modified":1548309450289},{"_id":"public/static/api/img/share/icons_2_24.png","hash":"e47fb87c533f2be89f22901f0864d9b5ef83412d","modified":1548309450289},{"_id":"public/static/api/img/share/l0.gif","hash":"738b92632b0a9789a9eb568b8d101eb64f55f6e0","modified":1548309450289},{"_id":"public/static/api/img/share/l1.gif","hash":"70e1932ca7a622ed3322b683eceb7a590860a55e","modified":1548309450289},{"_id":"public/static/api/img/share/l5.gif","hash":"148706f56b8ef4fd9d8483d0ac3a6730e72fc0ad","modified":1548309450289},{"_id":"public/static/api/img/share/icons_2_16.png","hash":"07340442cb61aabb419dd226f4bfb206a7577f52","modified":1548309450289},{"_id":"public/static/api/img/share/l2.gif","hash":"e6a5d6104c226a686d48759e0268e09d762e242e","modified":1548309450289},{"_id":"public/static/api/img/share/l6.gif","hash":"f4b8e3188f744f13aca46b27b451d55d9e209c48","modified":1548309450289},{"_id":"public/static/api/img/share/l4.gif","hash":"8a9c3cf99766d3f07a9c480cfdffdc3197b9a6b9","modified":1548309450289},{"_id":"public/static/api/img/share/l7.gif","hash":"e4f7e5e56c8f4eb026b5cb0affe3bd69c31af261","modified":1548309450289},{"_id":"public/static/api/img/share/icons_2_32.png","hash":"deba62865245a6b5aafa446787d72165c703b943","modified":1548309450289},{"_id":"public/static/api/img/share/pop_c.gif","hash":"e8b9ece6ddaa47ccb2c15f2396d1cd3020740603","modified":1548309450289},{"_id":"public/static/api/img/share/r2.gif","hash":"67c84a67be3b039892e9cb8c7c29ed29813bf60f","modified":1548309450289},{"_id":"public/static/api/img/share/r0.gif","hash":"882f255fbafc0136a3917c1dd40db88879c1b1c1","modified":1548309450290},{"_id":"public/static/api/img/share/r1.gif","hash":"96064d132ee2477c0e444c2e18162f9d1dc9e9c2","modified":1548309450290},{"_id":"public/static/api/img/share/r6.gif","hash":"4bc01e08ef0015fddf5b8c7257c094ec584ca3ee","modified":1548309450290},{"_id":"public/static/api/img/share/r4.gif","hash":"517435e69a2215a0f003e75a4861154ca963c30e","modified":1548309450290},{"_id":"public/static/api/img/share/r7.gif","hash":"3c596c924910c93cf3e37cc1b2870dbf271151e2","modified":1548309450290},{"_id":"public/static/api/img/share/r3.gif","hash":"ecdd21f1457be54afc96e2d005524eef93d7bf85","modified":1548309450290},{"_id":"public/static/api/img/share/share-search-icon.png","hash":"0629677a7eb5aa3e8bab3faa310c6d8c467a3287","modified":1548309450290},{"_id":"public/static/api/img/share/sc.png","hash":"e5a2ca56973a3d6608e7e3a48ebd9fa5ebda9991","modified":1548309450290},{"_id":"public/static/api/img/share/selectshare_close.png","hash":"6f3666278268890a153c85fb9f04ac848c442561","modified":1548309450290},{"_id":"public/static/api/img/share/r5.gif","hash":"e61b32d1830390303927bdab21823959f8dc7023","modified":1548309450290},{"_id":"public/static/api/img/share/r8.gif","hash":"c068ece54a72a3f2428d4f1b5ca7c176f027dd4e","modified":1548309450290},{"_id":"public/background/bg-25.jpg","hash":"7a05a524b70c9acd75c3f16a3b9992e4587995bd","modified":1548309450290},{"_id":"public/img/alipayimg.jpg","hash":"259fb41d1aba355d36bf180ee290f7c752d86aa8","modified":1548309450290},{"_id":"public/img/wechatimg.jpg","hash":"28f71f2debfbfed8f104474ea450ad0b8ce89645","modified":1548309450290},{"_id":"public/font-awesome/fonts/FontAwesome.otf","hash":"42c179eef588854b5ec151bcf6a3f58aa8b79b11","modified":1548309450290},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff","hash":"4a313eb93b959cc4154c684b915b0a31ddb68d84","modified":1548309450291},{"_id":"public/font-awesome/fonts/fontawesome-webfont.eot","hash":"986eed8dca049714e43eeebcb3932741a4bec76d","modified":1548309450291},{"_id":"public/font-awesome/fonts/fontawesome-webfont.woff2","hash":"638c652d623280a58144f93e7b552c66d1667a11","modified":1548309450291},{"_id":"public/css/default.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548309450304},{"_id":"public/css/loading-style.css","hash":"1f67362d809e85edc9f122db7bc3711af1ed1d8b","modified":1548309450304},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1548309450306},{"_id":"public/css/showshare.css","hash":"3efc4afd0d136fb5dec993e9cd9ce85b9d1cf589","modified":1548309450306},{"_id":"public/js/clipboard.min.js","hash":"c13b4bb8fee46447284590d2afc0efca0ea3cb7b","modified":1548309450306},{"_id":"public/js/TweenMax.js","hash":"0ba64564a4fde4085fa3971dd53b7d64a41751e1","modified":1548309450306},{"_id":"public/js/jquery.lazyload.js","hash":"8e4ad3e17f8e82be311b6b6e87811762e2b2d764","modified":1548309450307},{"_id":"public/js/mobile.js","hash":"d3847e5bcaf39108931724ecb02770c62b10889f","modified":1548309450307},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1548309450307},{"_id":"public/js/main.js","hash":"921b2fb56e48cce3d16ceb4a3fadf8e666c73a0a","modified":1548309450307},{"_id":"public/js/pc.js","hash":"ab375af6e3bcd054b1e87e1a8dcd3d7d25c2db40","modified":1548309450307},{"_id":"public/js/plugins.js","hash":"c1cf96b2d852b5803228a34d99014b005623bc06","modified":1548309450307},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1548309450307},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1548309450307},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1548309450307},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1548309450307},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1548309450308},{"_id":"public/css/pace/pace-theme-flash.css","hash":"508bce8b59a1fbc1f1443a7c4ab3b026e5517dab","modified":1548309450308},{"_id":"public/js/404/jquery.parallaxify-0.0.2.min.js","hash":"b97e2dfcb210b76f7bdd6e1800b26128bf4fad99","modified":1548309450308},{"_id":"public/static/api/css/like.css","hash":"2024d58206df01b858c38f07957f928b44e14cb3","modified":1548309450308},{"_id":"public/static/api/css/select_share.css","hash":"d0259abdb410193cf761e42bffaa51e70327a0cd","modified":1548309450308},{"_id":"public/static/api/css/share_popup.css","hash":"338ba2b30ef8ce0c84cd36b37d7f8482996291dc","modified":1548309450308},{"_id":"public/static/api/css/imgshare.css","hash":"c3624a2dde649ed28b2e5d1f050fd971fbaf71a0","modified":1548309450308},{"_id":"public/static/api/css/share_style1_16.css","hash":"aeb4e9fa96cfa0167481e1f4007079dc3f3c6c27","modified":1548309450308},{"_id":"public/static/api/css/share_style0_16.css","hash":"090e77e9e6e9b8ee0d73a233cbe46499de935bdd","modified":1548309450308},{"_id":"public/css/style.css","hash":"e79a2a59df87f1fd4dc5bae568c99e15c0ae891e","modified":1548309450308},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1548309450308},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1548309450308},{"_id":"public/js/pace.js","hash":"b49c10cd65d9488f7338e3c778e55ac6628650f3","modified":1548309450309},{"_id":"public/js/TweenMax.min.js","hash":"eaa4e4a08400da3f22dedda706ba56cdce5b0b7a","modified":1548309450309},{"_id":"public/js/embed.js","hash":"8d2d4a812ab639bc02fdd8749d3a39f6b9406c54","modified":1548309450309},{"_id":"public/font-awesome/css/font-awesome.css","hash":"b488600451227b445414796e9b8550e7c1bd6d29","modified":1548309450309},{"_id":"public/font-awesome/css/font-awesome.min.css","hash":"12d6861075de8e293265ff6ff03b1f3adcb44c76","modified":1548309450309},{"_id":"public/js/gitment.browser.js","hash":"6154e6a3bfb402c3ecc9b7889675f1f640926b75","modified":1548309450309},{"_id":"public/js/404/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1548309450309},{"_id":"public/background/bg-109.jpg","hash":"6171c1e921c8cc9bdcd7276cf7f0bee5295f4672","modified":1548309450309},{"_id":"public/background/bg-17.jpg","hash":"6ab5e470059e8ccb0c8bc6786abfb5db7e9a1826","modified":1548309450309},{"_id":"public/background/bg-1.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1548309450309},{"_id":"public/background/bg-11.jpg","hash":"d69a0447e91f62977b144737f08620d77037c76a","modified":1548309450310},{"_id":"public/background/bg-27.jpg","hash":"ced50e6e8cad2b0db97445c4e1463d4a62540b9b","modified":1548309450310},{"_id":"public/background/bg-20.jpg","hash":"9d428ac435198b2a0107102a2e9ae71e53afe364","modified":1548309450310},{"_id":"public/background/bg-26.jpg","hash":"3730aa317f9d75ca327b34478cd58e72667b04e8","modified":1548309450310},{"_id":"public/background/bg-3.jpg","hash":"f1347eddd07bdae93ab6bebad8627eddc5baeb44","modified":1548309450311},{"_id":"public/background/bg.jpg","hash":"f0617756387d74f99afe0087c7b93a32f3c7096b","modified":1548309450311},{"_id":"public/font-awesome/fonts/fontawesome-webfont.ttf","hash":"6484f1af6b485d5096b71b344e67f4164c33dd1f","modified":1548309450312},{"_id":"public/static/api/css/share_style0_24.css","hash":"7d1f9f32b80f91001f4f951aa045180cde22d82e","modified":1548309450363},{"_id":"public/static/api/css/share_style2.css","hash":"1ad451187cde8a74843fd398b924ca0ac911e9be","modified":1548309450363},{"_id":"public/static/api/css/share_style0_32.css","hash":"7c2d12ea532c8a55c102b649bb23ef5bf53b3ed3","modified":1548309450363},{"_id":"public/static/api/css/share_style1_32.css","hash":"626d67a4c0bb72a152e90d25dbf281c0c35a2140","modified":1548309450363},{"_id":"public/static/api/css/share_style2_24.css","hash":"917d963d3be111064cbb1d122963da91ee3724a0","modified":1548309450363},{"_id":"public/static/api/css/share_style4.css","hash":"0a9e2ed712a5ef5c4699c038cd001a0d688a0fdf","modified":1548309450363},{"_id":"public/static/api/css/share_style1_24.css","hash":"3ee5f745c863b4f68299fe5dc125f913ca619c07","modified":1548309450363},{"_id":"public/static/api/css/share_style2_16.css","hash":"572c8e856988e463eb865f38d33ba003cc20d083","modified":1548309450364},{"_id":"public/static/api/css/slide_share.css","hash":"3898feaf45559b039f885bee8f9e831f48adb20c","modified":1548309450364},{"_id":"public/static/api/css/share_style2_32.css","hash":"3657bbc4b5bbc66ebca4906ee0a1cbf9f98be883","modified":1548309450364},{"_id":"public/static/api/css/weixin_popup.css","hash":"5e6c5084bfd16051de5776c2e136a5462b08a32c","modified":1548309450364},{"_id":"public/static/api/js/trans/data.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548309450364},{"_id":"public/static/api/js/trans/logger.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1548309450364},{"_id":"public/static/api/js/conf/const.js","hash":"e2269411b129b847eca265fbc73f0d573f2474bb","modified":1548309450364},{"_id":"public/static/api/js/conf/define.js","hash":"1393906ec26b7cf711c18e569a64f7d0c1951fc7","modified":1548309450364},{"_id":"public/static/api/js/component/partners.js","hash":"a4c275ffb4d3557280211e6bf0573485b397ffd8","modified":1548309450364},{"_id":"public/static/api/js/base/class.js","hash":"ad1e5a3011e30b83ac8aaeabffc3311dcb151bf5","modified":1548309450364},{"_id":"public/static/api/js/component/animate.js","hash":"00b6f74ed82e5a21a9295dd2dc963e892734b7f6","modified":1548309450364},{"_id":"public/static/api/js/component/comm_tools.js","hash":"e651fbb1a85ab9c615ee833f4d042c203ef430bc","modified":1548309450364},{"_id":"public/static/api/js/component/anticheat.js","hash":"ee6b11a7ed39ae67c1c2aeeef96b4a0f40f8083c","modified":1548309450364},{"_id":"public/static/api/js/share/combine_api.js","hash":"c45d76df1707b4fd739dae7022dc4a015632a81a","modified":1548309450364},{"_id":"public/static/api/js/component/pop_popup.js","hash":"aface5a8c3f71e9e024bf0df5b361ed8f5452f50","modified":1548309450364},{"_id":"public/static/api/js/component/pop_dialog.js","hash":"4417d2fa9ad8ff6c79a2352ef07e9d10a1313ee0","modified":1548309450364},{"_id":"public/static/api/js/component/pop_base.js","hash":"eae6e120c149a21caa2883c533ccc40bc07fda51","modified":1548309450364},{"_id":"public/static/api/js/component/pop_popup_slide.js","hash":"1119fc14abd34ffb8e1f653cd30ca26adaafa3bf","modified":1548309450364},{"_id":"public/static/api/js/share/api_base.js","hash":"cbacd664451f80955c2ff4caccd4b9110062c714","modified":1548309450364},{"_id":"public/static/api/js/component/qrcode.js","hash":"2e3cc4cc5545556dd97ab899ff32d3ab7ccee808","modified":1548309450365},{"_id":"public/static/api/js/share/select_api.js","hash":"bf259a7912ee6124d741dbb5e45cab40bfa45e90","modified":1548309450365},{"_id":"public/static/api/js/share/image_api.js","hash":"43a93415f2a5dd34760042c2bcd9f4692feecb5d","modified":1548309450365},{"_id":"public/static/api/js/share/like_api.js","hash":"3526047b7f9f7446b883e2fa5ebcf143526449be","modified":1548309450365},{"_id":"public/static/api/js/share/share_api.js","hash":"f7b86d0cc063f692a73a174d04e77cbe3c5facc7","modified":1548309450365},{"_id":"public/static/api/js/share/likeshare.js","hash":"d088ffe7b6451cedf202280d16e85f75a8c3bfd3","modified":1548309450365},{"_id":"public/static/api/js/trans/trans.js","hash":"2bf87aff540cba3bee6cc05a7a8e9a2bc8b5d907","modified":1548309450365},{"_id":"public/static/api/js/trans/trans_bdysc.js","hash":"1be632b99fdd67ba5279aa6c56db7d528fd094c3","modified":1548309450365},{"_id":"public/static/api/js/start/router.js","hash":"97c195ae0d30dd8c7aac55a0555f082eeed4eee0","modified":1548309450365},{"_id":"public/static/api/js/share/slide_api.js","hash":"c317e3f7fec13d89178e475f26a689bb94e5aa76","modified":1548309450365},{"_id":"public/static/api/js/trans/trans_bdxc.js","hash":"da78025de5717315252d2d33b4252c89b891c71c","modified":1548309450365},{"_id":"public/static/api/js/view/like_view.js","hash":"42b51bd3ee4815b9ca8df6dacb9c81a8a34d762a","modified":1548309450365},{"_id":"public/static/api/js/trans/trans_weixin.js","hash":"e68e9bc91ee6fbcd64ac788463870f01602a8562","modified":1548309450366},{"_id":"public/static/api/js/view/select_view.js","hash":"2611efec1d31d85609feea0c57e14d3f817a6220","modified":1548309450366},{"_id":"public/static/api/js/view/share_view.js","hash":"f445ce9cbbcf887da5e248b1cfadc03ab7df76d0","modified":1548309450366},{"_id":"public/static/api/js/view/image_view.js","hash":"bb66297a5bd2c7dd931b9145f5d4a616876f3373","modified":1548309450366},{"_id":"public/static/api/js/view/view_base.js","hash":"b3fd7dafde05d63af3dfe9e0a59f9367f81402c5","modified":1548309450366},{"_id":"public/static/api/js/view/slide_view.js","hash":"973ded5cd15eb119e79ffd9326af3a44167b26bd","modified":1548309450366},{"_id":"public/static/api/js/share.js","hash":"5e71147fe4a93bc99387a5cc1c6894d8b6ab2d5e","modified":1548309450366},{"_id":"public/static/api/js/base/tangram.js","hash":"e1952e27f6dc3d6339128cec157acef8cc0a775f","modified":1548309450366},{"_id":"public/background/bg-15.jpg","hash":"ce5760578eb814fe951c56200e81c6f47b6468d4","modified":1548309450366},{"_id":"public/background/bg-23.jpg","hash":"050937d649be2c02ef8a66a0ffe7d320b236d1b0","modified":1548309450366},{"_id":"public/background/bg-7.jpg","hash":"acbe0946a47ba16b79f062dbee14c4c9ff9a48da","modified":1548309450366},{"_id":"public/background/bg-14.jpg","hash":"2fd6ede2bc9de2d26d910ea4e45d28b2350881eb","modified":1548309450381},{"_id":"public/background/bg-9.jpg","hash":"df731da0fe0de9a05d99d017e747252c990f972d","modified":1548309450381},{"_id":"public/background/bg-21.jpg","hash":"7c4c6cd5d75115093fa29bba7372fa198f04b0f1","modified":1548309450414},{"_id":"public/background/bg-19.jpg","hash":"d77504412d28432643fc61ed9fd9f7c57096bdd9","modified":1548309450414},{"_id":"public/background/bg-24.jpg","hash":"796fa5262d7714e8ce9496a2d03864429cfc5b45","modified":1548309450415},{"_id":"public/background/bg-4.jpg","hash":"da47f889e02241c8b095f852fb7efd89c114599d","modified":1548309450415},{"_id":"public/background/bg-6.jpg","hash":"1a4f4c8875b2c56e7992000979a7fca7856eec35","modified":1548309450416},{"_id":"public/background/bg-22.jpg","hash":"7a055391fa4188d9c22fdc1d34a10b26e2f0826d","modified":1548309450416},{"_id":"public/background/bg-8.jpg","hash":"dbecc189e28d00fa23e397eb512e039c2ff03c87","modified":1548309450416},{"_id":"public/font-awesome/fonts/fontawesome-webfont.svg","hash":"b06b5c8f67fd632cdc62a33b62ae4f74194131b3","modified":1548309450416},{"_id":"public/background/bg-10.jpg","hash":"dfb23c1c3cf8a3dcb8dc0ea10cf06501c151a2a2","modified":1548309450443},{"_id":"public/background/bg-12.jpg","hash":"2e0815591309863d8130881681cde32ec4bfebf1","modified":1548309450443},{"_id":"public/background/bg-18.jpg","hash":"4d61dc41a781a9c1d37c9e5e413ac0d8a9538f6a","modified":1548309450443},{"_id":"public/img/bg.jpg","hash":"1bcba3c6348e2190a42bff762800bf846cf9239c","modified":1548309450444},{"_id":"public/background/bg-111.jpg","hash":"e1631b47fede8da6c03582ceed648668547c4f09","modified":1548309450464},{"_id":"public/background/bg-16.jpg","hash":"d1a34d0c4b69262169b543922e4aeb4dae997ad8","modified":1548309450464},{"_id":"public/background/bg-13.jpg","hash":"d7237c6014e28c90f53287f48f718d0759af104b","modified":1548309450464},{"_id":"public/background/bg-2.jpg","hash":"40a6db13e9c461f80e2c4efee7fb63bbd594e751","modified":1548309450469},{"_id":"public/background/bg-5.jpg","hash":"2d5da2a209732cce0abf2ca234c0bef0516b65ff","modified":1548309450479},{"_id":"public/background/bg-112.jpg","hash":"54d04b06878eec5d021b6f257bc44298f953a2b7","modified":1548309450493}],"Category":[{"name":"window","_id":"cjra7gvpv0008ewuolb6hcdp2"},{"name":"软件工程","_id":"cjra7gvqc000zewuonrnycisw"},{"name":"开源代码","_id":"cjra7gvqf0015ewuo8r5wc1qg"},{"name":"版本管理","_id":"cjra7gvqp001tewuoz8i1arxc"},{"name":"前端","_id":"cjra7gvqv0026ewuonkm93r2x"}],"Data":[],"Page":[{"title":"about","reward":true,"date":"2018-10-14T13:49:31.000Z","description":null,"categories":null,"tags":null,"_content":"","source":"about/index.md","raw":"---\ntitle: about\nreward: true\ndate: 2018-10-14 21:49:31\ndescription:\ncategories:\ntags:\n---\n","updated":"2018-11-03T13:32:44.570Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjra7gvph0001ewuovtn328ow","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Azure_DevOps入门","reward":true,"date":"2019-01-13T06:38:36.000Z","description":null,"_content":"\n# Azure DevOps\n\nAzure DevOps服务提供了开发协作工具,包括高性能管道,免费的私有Git存储库,可配置的看板,以及广泛的自动化和基于云的负载测试.\n\n## 简介\n\nAzure DevOps的开始使用:\n1.使用Azure Pipelines去编辑GitHub工程\n2.开始使用Azure DevOps\n\n## 使用入门\n\n### Azure Pipelines编译一个Github仓库\n\n#### 准备工作\n\n- 一个Azure DevOps组织,如果没有可以[免费创建一个](https://go.microsoft.com/fwlink/?LinkId=307137),\n- GitHub账号\n\n#### 获取源码\n\n#### 开始第一次的编译\n\n- 登陆Azure DevOps组织, 选中你的项目\n- 选中Piplines页,选择新建pipeline\n- 通过选择GitHub作为源代码的位置来完成向导的步骤\n- 认证GitHub账号权限\n- 当重回到Azure Pipelines页面,选择程序对应的存储库\n- Azure Pipelines在你的仓库中分析代码.如果仓库已经包含了一个azure-pipelines.yml文件,这一步将会被跳过.否则,Azure Pipelines会基于\n  你的代码上会有一个模板\n- 最后,你需要展示出将要使用的YAML文件\n- 如果你看到Run按钮,选择它,跳到下一步.如果你看到Save and Run按钮,先选择Commit directly to the master branch,接着再选择Save and run.\n- 等待编译完成\n  \n#### 将CI状态徽章到你的仓库中\n\n- 在Azure Pipelines页面中,进入到Build页面显示pipelines的列表.\n- 选择你创建的pipelines\n- 在pipelines的上下文菜单中,选择Status badge项\n- 拷贝到Markdown中\n\n## 使用技巧\n\n## 特性分析\n\n## 相关链接","source":"_posts/Azure-DevOps入门.md","raw":"---\ntitle: Azure_DevOps入门\nreward: true\ndate: 2019-01-13 14:38:36\ndescription:\ncategories:\ntags:\n- DevOps\n---\n\n# Azure DevOps\n\nAzure DevOps服务提供了开发协作工具,包括高性能管道,免费的私有Git存储库,可配置的看板,以及广泛的自动化和基于云的负载测试.\n\n## 简介\n\nAzure DevOps的开始使用:\n1.使用Azure Pipelines去编辑GitHub工程\n2.开始使用Azure DevOps\n\n## 使用入门\n\n### Azure Pipelines编译一个Github仓库\n\n#### 准备工作\n\n- 一个Azure DevOps组织,如果没有可以[免费创建一个](https://go.microsoft.com/fwlink/?LinkId=307137),\n- GitHub账号\n\n#### 获取源码\n\n#### 开始第一次的编译\n\n- 登陆Azure DevOps组织, 选中你的项目\n- 选中Piplines页,选择新建pipeline\n- 通过选择GitHub作为源代码的位置来完成向导的步骤\n- 认证GitHub账号权限\n- 当重回到Azure Pipelines页面,选择程序对应的存储库\n- Azure Pipelines在你的仓库中分析代码.如果仓库已经包含了一个azure-pipelines.yml文件,这一步将会被跳过.否则,Azure Pipelines会基于\n  你的代码上会有一个模板\n- 最后,你需要展示出将要使用的YAML文件\n- 如果你看到Run按钮,选择它,跳到下一步.如果你看到Save and Run按钮,先选择Commit directly to the master branch,接着再选择Save and run.\n- 等待编译完成\n  \n#### 将CI状态徽章到你的仓库中\n\n- 在Azure Pipelines页面中,进入到Build页面显示pipelines的列表.\n- 选择你创建的pipelines\n- 在pipelines的上下文菜单中,选择Status badge项\n- 拷贝到Markdown中\n\n## 使用技巧\n\n## 特性分析\n\n## 相关链接","slug":"Azure-DevOps入门","published":1,"updated":"2019-01-13T07:20:48.959Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpc0000ewuocslgme1u","content":"<h1 id=\"Azure-DevOps\"><a href=\"#Azure-DevOps\" class=\"headerlink\" title=\"Azure DevOps\"></a>Azure DevOps</h1><p>Azure DevOps服务提供了开发协作工具,包括高性能管道,免费的私有Git存储库,可配置的看板,以及广泛的自动化和基于云的负载测试.</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Azure DevOps的开始使用:<br>1.使用Azure Pipelines去编辑GitHub工程<br>2.开始使用Azure DevOps</p>\n<h2 id=\"使用入门\"><a href=\"#使用入门\" class=\"headerlink\" title=\"使用入门\"></a>使用入门</h2><h3 id=\"Azure-Pipelines编译一个Github仓库\"><a href=\"#Azure-Pipelines编译一个Github仓库\" class=\"headerlink\" title=\"Azure Pipelines编译一个Github仓库\"></a>Azure Pipelines编译一个Github仓库</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ul>\n<li>一个Azure DevOps组织,如果没有可以<a href=\"https://go.microsoft.com/fwlink/?LinkId=307137\" target=\"_blank\" rel=\"noopener\">免费创建一个</a>,</li>\n<li>GitHub账号</li>\n</ul>\n<h4 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h4><h4 id=\"开始第一次的编译\"><a href=\"#开始第一次的编译\" class=\"headerlink\" title=\"开始第一次的编译\"></a>开始第一次的编译</h4><ul>\n<li>登陆Azure DevOps组织, 选中你的项目</li>\n<li>选中Piplines页,选择新建pipeline</li>\n<li>通过选择GitHub作为源代码的位置来完成向导的步骤</li>\n<li>认证GitHub账号权限</li>\n<li>当重回到Azure Pipelines页面,选择程序对应的存储库</li>\n<li>Azure Pipelines在你的仓库中分析代码.如果仓库已经包含了一个azure-pipelines.yml文件,这一步将会被跳过.否则,Azure Pipelines会基于<br>你的代码上会有一个模板</li>\n<li>最后,你需要展示出将要使用的YAML文件</li>\n<li>如果你看到Run按钮,选择它,跳到下一步.如果你看到Save and Run按钮,先选择Commit directly to the master branch,接着再选择Save and run.</li>\n<li>等待编译完成</li>\n</ul>\n<h4 id=\"将CI状态徽章到你的仓库中\"><a href=\"#将CI状态徽章到你的仓库中\" class=\"headerlink\" title=\"将CI状态徽章到你的仓库中\"></a>将CI状态徽章到你的仓库中</h4><ul>\n<li>在Azure Pipelines页面中,进入到Build页面显示pipelines的列表.</li>\n<li>选择你创建的pipelines</li>\n<li>在pipelines的上下文菜单中,选择Status badge项</li>\n<li>拷贝到Markdown中</li>\n</ul>\n<h2 id=\"使用技巧\"><a href=\"#使用技巧\" class=\"headerlink\" title=\"使用技巧\"></a>使用技巧</h2><h2 id=\"特性分析\"><a href=\"#特性分析\" class=\"headerlink\" title=\"特性分析\"></a>特性分析</h2><h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Azure-DevOps\"><a href=\"#Azure-DevOps\" class=\"headerlink\" title=\"Azure DevOps\"></a>Azure DevOps</h1><p>Azure DevOps服务提供了开发协作工具,包括高性能管道,免费的私有Git存储库,可配置的看板,以及广泛的自动化和基于云的负载测试.</p>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Azure DevOps的开始使用:<br>1.使用Azure Pipelines去编辑GitHub工程<br>2.开始使用Azure DevOps</p>\n<h2 id=\"使用入门\"><a href=\"#使用入门\" class=\"headerlink\" title=\"使用入门\"></a>使用入门</h2><h3 id=\"Azure-Pipelines编译一个Github仓库\"><a href=\"#Azure-Pipelines编译一个Github仓库\" class=\"headerlink\" title=\"Azure Pipelines编译一个Github仓库\"></a>Azure Pipelines编译一个Github仓库</h3><h4 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h4><ul>\n<li>一个Azure DevOps组织,如果没有可以<a href=\"https://go.microsoft.com/fwlink/?LinkId=307137\" target=\"_blank\" rel=\"noopener\">免费创建一个</a>,</li>\n<li>GitHub账号</li>\n</ul>\n<h4 id=\"获取源码\"><a href=\"#获取源码\" class=\"headerlink\" title=\"获取源码\"></a>获取源码</h4><h4 id=\"开始第一次的编译\"><a href=\"#开始第一次的编译\" class=\"headerlink\" title=\"开始第一次的编译\"></a>开始第一次的编译</h4><ul>\n<li>登陆Azure DevOps组织, 选中你的项目</li>\n<li>选中Piplines页,选择新建pipeline</li>\n<li>通过选择GitHub作为源代码的位置来完成向导的步骤</li>\n<li>认证GitHub账号权限</li>\n<li>当重回到Azure Pipelines页面,选择程序对应的存储库</li>\n<li>Azure Pipelines在你的仓库中分析代码.如果仓库已经包含了一个azure-pipelines.yml文件,这一步将会被跳过.否则,Azure Pipelines会基于<br>你的代码上会有一个模板</li>\n<li>最后,你需要展示出将要使用的YAML文件</li>\n<li>如果你看到Run按钮,选择它,跳到下一步.如果你看到Save and Run按钮,先选择Commit directly to the master branch,接着再选择Save and run.</li>\n<li>等待编译完成</li>\n</ul>\n<h4 id=\"将CI状态徽章到你的仓库中\"><a href=\"#将CI状态徽章到你的仓库中\" class=\"headerlink\" title=\"将CI状态徽章到你的仓库中\"></a>将CI状态徽章到你的仓库中</h4><ul>\n<li>在Azure Pipelines页面中,进入到Build页面显示pipelines的列表.</li>\n<li>选择你创建的pipelines</li>\n<li>在pipelines的上下文菜单中,选择Status badge项</li>\n<li>拷贝到Markdown中</li>\n</ul>\n<h2 id=\"使用技巧\"><a href=\"#使用技巧\" class=\"headerlink\" title=\"使用技巧\"></a>使用技巧</h2><h2 id=\"特性分析\"><a href=\"#特性分析\" class=\"headerlink\" title=\"特性分析\"></a>特性分析</h2><h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2>"},{"title":"C++系列_友元","reward":true,"date":"2018-11-30T14:25:37.000Z","description":null,"_content":"\n# C++系列_友元\n\n## 简介\n\n友元声明是在类的结构中.确保函数或者其他类有访问声明有元类中的私有和保护类的\n\n## 语法\n\nfriend function-deciaration\n\nfriend function-definition\n\nfriend elaborated-class-specifier\n\nfriend simple-type-specifier\n\nfriend typename-specifier\n\n## 描述\n\n### 1.指定一个或几个函数作为类的友元\n\n```c++\nclass Y {\n\tint data;\n    friend std::ostream& operator<<(std::ostream& out, const Y& o);\n    friend char* X::foo(int);\n    friend X::X(char), X::~X();\n};\nstd::ostream& operator<<(std::ostream& out, const Y& y)\n{\n    return out << y.data;\n}\n```\n\n2.(在非本地类定义)定义一个非成员函数,同时也让它成为这个类的友元.像这样的非成员函数也是inline方式.\n\n```c++\nclass X {\n    int a;\n    friend void friend_set(X& p, int i) {\n        p.a = i;\n    }\npublic:\n    void member_set(int i) {\n        a = i;\n    }\n};\n```\n\n","source":"_posts/C-系列-友元.md","raw":"---\ntitle: C++系列_友元\nreward: true\ndate: 2018-11-30 22:25:37\ndescription:\ncategories:\ntags:\n- friend declaration1.\n---\n\n# C++系列_友元\n\n## 简介\n\n友元声明是在类的结构中.确保函数或者其他类有访问声明有元类中的私有和保护类的\n\n## 语法\n\nfriend function-deciaration\n\nfriend function-definition\n\nfriend elaborated-class-specifier\n\nfriend simple-type-specifier\n\nfriend typename-specifier\n\n## 描述\n\n### 1.指定一个或几个函数作为类的友元\n\n```c++\nclass Y {\n\tint data;\n    friend std::ostream& operator<<(std::ostream& out, const Y& o);\n    friend char* X::foo(int);\n    friend X::X(char), X::~X();\n};\nstd::ostream& operator<<(std::ostream& out, const Y& y)\n{\n    return out << y.data;\n}\n```\n\n2.(在非本地类定义)定义一个非成员函数,同时也让它成为这个类的友元.像这样的非成员函数也是inline方式.\n\n```c++\nclass X {\n    int a;\n    friend void friend_set(X& p, int i) {\n        p.a = i;\n    }\npublic:\n    void member_set(int i) {\n        a = i;\n    }\n};\n```\n\n","slug":"C-系列-友元","published":1,"updated":"2018-11-30T15:02:26.444Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpj0002ewuotjqiql9z","content":"<h1 id=\"C-系列-友元\"><a href=\"#C-系列-友元\" class=\"headerlink\" title=\"C++系列_友元\"></a>C++系列_友元</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>友元声明是在类的结构中.确保函数或者其他类有访问声明有元类中的私有和保护类的</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>friend function-deciaration</p>\n<p>friend function-definition</p>\n<p>friend elaborated-class-specifier</p>\n<p>friend simple-type-specifier</p>\n<p>friend typename-specifier</p>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><h3 id=\"1-指定一个或几个函数作为类的友元\"><a href=\"#1-指定一个或几个函数作为类的友元\" class=\"headerlink\" title=\"1.指定一个或几个函数作为类的友元\"></a>1.指定一个或几个函数作为类的友元</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Y</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"built_in\">std</span>::ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(<span class=\"built_in\">std</span>::ostream&amp; out, <span class=\"keyword\">const</span> Y&amp; o);</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">char</span>* X::foo(<span class=\"keyword\">int</span>);</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> X::X(<span class=\"keyword\">char</span>), X::~X();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(<span class=\"built_in\">std</span>::ostream&amp; out, <span class=\"keyword\">const</span> Y&amp; y)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> out &lt;&lt; y.data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.(在非本地类定义)定义一个非成员函数,同时也让它成为这个类的友元.像这样的非成员函数也是inline方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">X</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">void</span> <span class=\"title\">friend_set</span><span class=\"params\">(X&amp; p, <span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">        p.a = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">member_set</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">        a = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-系列-友元\"><a href=\"#C-系列-友元\" class=\"headerlink\" title=\"C++系列_友元\"></a>C++系列_友元</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>友元声明是在类的结构中.确保函数或者其他类有访问声明有元类中的私有和保护类的</p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>friend function-deciaration</p>\n<p>friend function-definition</p>\n<p>friend elaborated-class-specifier</p>\n<p>friend simple-type-specifier</p>\n<p>friend typename-specifier</p>\n<h2 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h2><h3 id=\"1-指定一个或几个函数作为类的友元\"><a href=\"#1-指定一个或几个函数作为类的友元\" class=\"headerlink\" title=\"1.指定一个或几个函数作为类的友元\"></a>1.指定一个或几个函数作为类的友元</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Y</span> &#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> data;</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"built_in\">std</span>::ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(<span class=\"built_in\">std</span>::ostream&amp; out, <span class=\"keyword\">const</span> Y&amp; o);</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">char</span>* X::foo(<span class=\"keyword\">int</span>);</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> X::X(<span class=\"keyword\">char</span>), X::~X();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"built_in\">std</span>::ostream&amp; <span class=\"keyword\">operator</span>&lt;&lt;(<span class=\"built_in\">std</span>::ostream&amp; out, <span class=\"keyword\">const</span> Y&amp; y)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> out &lt;&lt; y.data;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>2.(在非本地类定义)定义一个非成员函数,同时也让它成为这个类的友元.像这样的非成员函数也是inline方式.</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">X</span> &#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> a;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">friend</span> <span class=\"keyword\">void</span> <span class=\"title\">friend_set</span><span class=\"params\">(X&amp; p, <span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">        p.a = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">member_set</span><span class=\"params\">(<span class=\"keyword\">int</span> i)</span> </span>&#123;</span><br><span class=\"line\">        a = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n"},{"title":"CMake的使用","reward":true,"date":"2018-11-08T15:53:32.000Z","description":null,"_content":"\n# CMake\n\n## 链接\n\n[官网](https://cmake.org/)\n\n[CMake入门实践](http://www.hahack.com/codes/cmake/)\n[实践](https://www.kancloud.cn/itfanr/cmake-practice/82988)\n[选项](https://zh.wikibooks.org/zh-hans/CMake_%E5%85%A5%E9%96%80/%E5%8A%A0%E5%85%A5%E7%B7%A8%E8%AD%AF%E9%81%B8%E9%A0%85)\n\n## 使用\n\n### 基础的开始设置\n\n```cmake\ncmake_minimum_required(VERSION 2.6)\nproject(cplusplus_common)\n```\n\n### 设置编译器和编译参数\n\n```cmake\nset(CXX_FLAGS\n-g\n-Wall\n-rdynamic\n)\nset(CMAKE_CXX_COMPILER \"g++\")\n# 显示编译过程参数\nset(CMAKE_VERBOSE_MAKEFILE OFF)\n```\n\n### 动态库编译\n\nadd_library(hgh_base SHARED ${base_SRCS})\ntarget_link_libraries(hgh_base pthread rt)\n\n### 静态库编译\n\nadd_library(hgh_base ${base_SRCS})\ntarget_link_libraries(hgh_base pthread rt)\n\n### 动态库和静态库同时编译\n\nset_target_properties(hgh_base_static PROPERTIES OUTPUT_NAME \"hgh_base\")\n\n### 可执行编译\n\n```cmake\nadd_executable(test SRC_LIST)\n```\n\n### 指定可执行程序的输出目录\n\n```cmake\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\n```\n\n## 扩展\n\n### 使用build.sh脚本独立编译环境\n\n```shell\n#!/bin/sh\n\nset -x\n\nSOURCE_DIR=`pwd`\nBUILD_DIR=${BUILD_DIR:-../build}\nBUILD_TYPE=${BUILD_TYPE:-debug}\nINSTALL_DIR=${INSTALL_DIR:-../${BUILD_TYPE}-install}\n\nmkdir -p $BUILD_DIR/$BUILD_TYPE \\\n    && cd $BUILD_DIR/$BUILD_TYPE \\\n    && cmake \\\n        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \\\n        $SOURCE_DIR \\\n    && make $*\n\n```\n\n","source":"_posts/CMake的使用.md","raw":"---\ntitle: CMake的使用\nreward: true\ndate: 2018-11-08 23:53:32\ndescription:\ncategories:\ntags:\n- CMake\n---\n\n# CMake\n\n## 链接\n\n[官网](https://cmake.org/)\n\n[CMake入门实践](http://www.hahack.com/codes/cmake/)\n[实践](https://www.kancloud.cn/itfanr/cmake-practice/82988)\n[选项](https://zh.wikibooks.org/zh-hans/CMake_%E5%85%A5%E9%96%80/%E5%8A%A0%E5%85%A5%E7%B7%A8%E8%AD%AF%E9%81%B8%E9%A0%85)\n\n## 使用\n\n### 基础的开始设置\n\n```cmake\ncmake_minimum_required(VERSION 2.6)\nproject(cplusplus_common)\n```\n\n### 设置编译器和编译参数\n\n```cmake\nset(CXX_FLAGS\n-g\n-Wall\n-rdynamic\n)\nset(CMAKE_CXX_COMPILER \"g++\")\n# 显示编译过程参数\nset(CMAKE_VERBOSE_MAKEFILE OFF)\n```\n\n### 动态库编译\n\nadd_library(hgh_base SHARED ${base_SRCS})\ntarget_link_libraries(hgh_base pthread rt)\n\n### 静态库编译\n\nadd_library(hgh_base ${base_SRCS})\ntarget_link_libraries(hgh_base pthread rt)\n\n### 动态库和静态库同时编译\n\nset_target_properties(hgh_base_static PROPERTIES OUTPUT_NAME \"hgh_base\")\n\n### 可执行编译\n\n```cmake\nadd_executable(test SRC_LIST)\n```\n\n### 指定可执行程序的输出目录\n\n```cmake\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\n```\n\n## 扩展\n\n### 使用build.sh脚本独立编译环境\n\n```shell\n#!/bin/sh\n\nset -x\n\nSOURCE_DIR=`pwd`\nBUILD_DIR=${BUILD_DIR:-../build}\nBUILD_TYPE=${BUILD_TYPE:-debug}\nINSTALL_DIR=${INSTALL_DIR:-../${BUILD_TYPE}-install}\n\nmkdir -p $BUILD_DIR/$BUILD_TYPE \\\n    && cd $BUILD_DIR/$BUILD_TYPE \\\n    && cmake \\\n        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \\\n        $SOURCE_DIR \\\n    && make $*\n\n```\n\n","slug":"CMake的使用","published":1,"updated":"2018-12-16T02:09:43.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpo0004ewuoa58690nt","content":"<h1 id=\"CMake\"><a href=\"#CMake\" class=\"headerlink\" title=\"CMake\"></a>CMake</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://cmake.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"http://www.hahack.com/codes/cmake/\" target=\"_blank\" rel=\"noopener\">CMake入门实践</a><br><a href=\"https://www.kancloud.cn/itfanr/cmake-practice/82988\" target=\"_blank\" rel=\"noopener\">实践</a><br><a href=\"https://zh.wikibooks.org/zh-hans/CMake_%E5%85%A5%E9%96%80/%E5%8A%A0%E5%85%A5%E7%B7%A8%E8%AD%AF%E9%81%B8%E9%A0%85\" target=\"_blank\" rel=\"noopener\">选项</a></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"基础的开始设置\"><a href=\"#基础的开始设置\" class=\"headerlink\" title=\"基础的开始设置\"></a>基础的开始设置</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.6</span>)</span><br><span class=\"line\"><span class=\"keyword\">project</span>(cplusplus_common)</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置编译器和编译参数\"><a href=\"#设置编译器和编译参数\" class=\"headerlink\" title=\"设置编译器和编译参数\"></a>设置编译器和编译参数</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(CXX_FLAGS</span><br><span class=\"line\">-g</span><br><span class=\"line\">-Wall</span><br><span class=\"line\">-rdynamic</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_COMPILER <span class=\"string\">\"g++\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 显示编译过程参数</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_VERBOSE_MAKEFILE <span class=\"keyword\">OFF</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态库编译\"><a href=\"#动态库编译\" class=\"headerlink\" title=\"动态库编译\"></a>动态库编译</h3><p>add_library(hgh_base SHARED ${base_SRCS})<br>target_link_libraries(hgh_base pthread rt)</p>\n<h3 id=\"静态库编译\"><a href=\"#静态库编译\" class=\"headerlink\" title=\"静态库编译\"></a>静态库编译</h3><p>add_library(hgh_base ${base_SRCS})<br>target_link_libraries(hgh_base pthread rt)</p>\n<h3 id=\"动态库和静态库同时编译\"><a href=\"#动态库和静态库同时编译\" class=\"headerlink\" title=\"动态库和静态库同时编译\"></a>动态库和静态库同时编译</h3><p>set_target_properties(hgh_base_static PROPERTIES OUTPUT_NAME “hgh_base”)</p>\n<h3 id=\"可执行编译\"><a href=\"#可执行编译\" class=\"headerlink\" title=\"可执行编译\"></a>可执行编译</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">add_executable</span>(<span class=\"keyword\">test</span> SRC_LIST)</span><br></pre></td></tr></table></figure>\n<h3 id=\"指定可执行程序的输出目录\"><a href=\"#指定可执行程序的输出目录\" class=\"headerlink\" title=\"指定可执行程序的输出目录\"></a>指定可执行程序的输出目录</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(EXECUTABLE_OUTPUT_PATH <span class=\"variable\">$&#123;PROJECT_BINARY_DIR&#125;</span>/bin)</span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><h3 id=\"使用build-sh脚本独立编译环境\"><a href=\"#使用build-sh脚本独立编译环境\" class=\"headerlink\" title=\"使用build.sh脚本独立编译环境\"></a>使用build.sh脚本独立编译环境</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">set -x</span><br><span class=\"line\"></span><br><span class=\"line\">SOURCE_DIR=`pwd`</span><br><span class=\"line\">BUILD_DIR=$&#123;BUILD_DIR:-../build&#125;</span><br><span class=\"line\">BUILD_TYPE=$&#123;BUILD_TYPE:-debug&#125;</span><br><span class=\"line\">INSTALL_DIR=$&#123;INSTALL_DIR:-../$&#123;BUILD_TYPE&#125;-install&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p $BUILD_DIR/$BUILD_TYPE \\</span><br><span class=\"line\">    &amp;&amp; cd $BUILD_DIR/$BUILD_TYPE \\</span><br><span class=\"line\">    &amp;&amp; cmake \\</span><br><span class=\"line\">        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\</span><br><span class=\"line\">        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \\</span><br><span class=\"line\">        $SOURCE_DIR \\</span><br><span class=\"line\">    &amp;&amp; make $*</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CMake\"><a href=\"#CMake\" class=\"headerlink\" title=\"CMake\"></a>CMake</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://cmake.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"http://www.hahack.com/codes/cmake/\" target=\"_blank\" rel=\"noopener\">CMake入门实践</a><br><a href=\"https://www.kancloud.cn/itfanr/cmake-practice/82988\" target=\"_blank\" rel=\"noopener\">实践</a><br><a href=\"https://zh.wikibooks.org/zh-hans/CMake_%E5%85%A5%E9%96%80/%E5%8A%A0%E5%85%A5%E7%B7%A8%E8%AD%AF%E9%81%B8%E9%A0%85\" target=\"_blank\" rel=\"noopener\">选项</a></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><h3 id=\"基础的开始设置\"><a href=\"#基础的开始设置\" class=\"headerlink\" title=\"基础的开始设置\"></a>基础的开始设置</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cmake_minimum_required</span>(VERSION <span class=\"number\">2.6</span>)</span><br><span class=\"line\"><span class=\"keyword\">project</span>(cplusplus_common)</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置编译器和编译参数\"><a href=\"#设置编译器和编译参数\" class=\"headerlink\" title=\"设置编译器和编译参数\"></a>设置编译器和编译参数</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(CXX_FLAGS</span><br><span class=\"line\">-g</span><br><span class=\"line\">-Wall</span><br><span class=\"line\">-rdynamic</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_CXX_COMPILER <span class=\"string\">\"g++\"</span>)</span><br><span class=\"line\"><span class=\"comment\"># 显示编译过程参数</span></span><br><span class=\"line\"><span class=\"keyword\">set</span>(CMAKE_VERBOSE_MAKEFILE <span class=\"keyword\">OFF</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态库编译\"><a href=\"#动态库编译\" class=\"headerlink\" title=\"动态库编译\"></a>动态库编译</h3><p>add_library(hgh_base SHARED ${base_SRCS})<br>target_link_libraries(hgh_base pthread rt)</p>\n<h3 id=\"静态库编译\"><a href=\"#静态库编译\" class=\"headerlink\" title=\"静态库编译\"></a>静态库编译</h3><p>add_library(hgh_base ${base_SRCS})<br>target_link_libraries(hgh_base pthread rt)</p>\n<h3 id=\"动态库和静态库同时编译\"><a href=\"#动态库和静态库同时编译\" class=\"headerlink\" title=\"动态库和静态库同时编译\"></a>动态库和静态库同时编译</h3><p>set_target_properties(hgh_base_static PROPERTIES OUTPUT_NAME “hgh_base”)</p>\n<h3 id=\"可执行编译\"><a href=\"#可执行编译\" class=\"headerlink\" title=\"可执行编译\"></a>可执行编译</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">add_executable</span>(<span class=\"keyword\">test</span> SRC_LIST)</span><br></pre></td></tr></table></figure>\n<h3 id=\"指定可执行程序的输出目录\"><a href=\"#指定可执行程序的输出目录\" class=\"headerlink\" title=\"指定可执行程序的输出目录\"></a>指定可执行程序的输出目录</h3><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span>(EXECUTABLE_OUTPUT_PATH <span class=\"variable\">$&#123;PROJECT_BINARY_DIR&#125;</span>/bin)</span><br></pre></td></tr></table></figure>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><h3 id=\"使用build-sh脚本独立编译环境\"><a href=\"#使用build-sh脚本独立编译环境\" class=\"headerlink\" title=\"使用build.sh脚本独立编译环境\"></a>使用build.sh脚本独立编译环境</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\">set -x</span><br><span class=\"line\"></span><br><span class=\"line\">SOURCE_DIR=`pwd`</span><br><span class=\"line\">BUILD_DIR=$&#123;BUILD_DIR:-../build&#125;</span><br><span class=\"line\">BUILD_TYPE=$&#123;BUILD_TYPE:-debug&#125;</span><br><span class=\"line\">INSTALL_DIR=$&#123;INSTALL_DIR:-../$&#123;BUILD_TYPE&#125;-install&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">mkdir -p $BUILD_DIR/$BUILD_TYPE \\</span><br><span class=\"line\">    &amp;&amp; cd $BUILD_DIR/$BUILD_TYPE \\</span><br><span class=\"line\">    &amp;&amp; cmake \\</span><br><span class=\"line\">        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\</span><br><span class=\"line\">        -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \\</span><br><span class=\"line\">        $SOURCE_DIR \\</span><br><span class=\"line\">    &amp;&amp; make $*</span><br></pre></td></tr></table></figure>\n"},{"title":"CMD命令","reward":true,"date":"2018-11-17T03:36:19.000Z","description":null,"_content":"\n# CMD\n\n---\n\n## 链接\n\n## 命令整理\n\n|命令|说明|使用|\n|:---:|:---:|:---:|\n| md |创建文件夹|'> md test_dir'|\n| rmdir | 删除文件夹下所有 |'> rmdir /s/q test_dir'|\n| echo=> | 创建文件 |'> echo=>test.txt'|\n","source":"_posts/CMD命令.md","raw":"---\ntitle: CMD命令\nreward: true\ndate: 2018-11-17 11:36:19\ndescription:\ncategories:\n- window\ntags:\n- cmd\n---\n\n# CMD\n\n---\n\n## 链接\n\n## 命令整理\n\n|命令|说明|使用|\n|:---:|:---:|:---:|\n| md |创建文件夹|'> md test_dir'|\n| rmdir | 删除文件夹下所有 |'> rmdir /s/q test_dir'|\n| echo=> | 创建文件 |'> echo=>test.txt'|\n","slug":"CMD命令","published":1,"updated":"2018-11-17T03:43:01.823Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpr0005ewuokvecwapd","content":"<h1 id=\"CMD\"><a href=\"#CMD\" class=\"headerlink\" title=\"CMD\"></a>CMD</h1><hr>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><h2 id=\"命令整理\"><a href=\"#命令整理\" class=\"headerlink\" title=\"命令整理\"></a>命令整理</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">使用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">md</td>\n<td style=\"text-align:center\">创建文件夹</td>\n<td style=\"text-align:center\">‘&gt; md test_dir’</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rmdir</td>\n<td style=\"text-align:center\">删除文件夹下所有</td>\n<td style=\"text-align:center\">‘&gt; rmdir /s/q test_dir’</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">echo=&gt;</td>\n<td style=\"text-align:center\">创建文件</td>\n<td style=\"text-align:center\">‘&gt; echo=&gt;test.txt’</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"CMD\"><a href=\"#CMD\" class=\"headerlink\" title=\"CMD\"></a>CMD</h1><hr>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><h2 id=\"命令整理\"><a href=\"#命令整理\" class=\"headerlink\" title=\"命令整理\"></a>命令整理</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">命令</th>\n<th style=\"text-align:center\">说明</th>\n<th style=\"text-align:center\">使用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">md</td>\n<td style=\"text-align:center\">创建文件夹</td>\n<td style=\"text-align:center\">‘&gt; md test_dir’</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">rmdir</td>\n<td style=\"text-align:center\">删除文件夹下所有</td>\n<td style=\"text-align:center\">‘&gt; rmdir /s/q test_dir’</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">echo=&gt;</td>\n<td style=\"text-align:center\">创建文件</td>\n<td style=\"text-align:center\">‘&gt; echo=&gt;test.txt’</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"Go的学习进度","reward":true,"date":"2018-12-19T14:30:09.000Z","description":null,"_content":"\n# Go的学习进度\n\n## Go的整体计划\n\n项目目标: 实现一个简易的RTSP服务器\n每日计划: 对一个开源代码的一段进行分析\n\n## 2018/12/19\n\nRTSP服务器:\n实现了一个最简单的服务监听功能,能监听554端口,发送消息和响应消息\n\n代码分析:(net中的tcpsock.go)\n\n```go\nfunc ListenTCP(network string, laddr *TCPAddr) (*TCPListener, error) {\n\tswitch network {\n\tcase \"tcp\", \"tcp4\", \"tcp6\":\n\tdefault:\n\t\treturn nil, &OpError{Op: \"listen\", Net: network, Source: nil, Addr: laddr.opAddr(), Err: UnknownNetworkError(network)}\n\t}\n\tif laddr == nil {\n\t\tladdr = &TCPAddr{}\n\t}\n\tsl := &sysListener{network: network, address: laddr.String()}\n\tln, err := sl.listenTCP(context.Background(), laddr)\n\tif err != nil {\n\t\treturn nil, &OpError{Op: \"listen\", Net: network, Source: nil, Addr: laddr.opAddr(), Err: err}\n\t}\n\treturn ln, nil\n}\n```\n\n解析:\n\n这是net中TCP监听的一段代码.\n\n1.参数检测,network必须为\"tcp\",\"tcp4\",\"tcp6\"中的一种; laddr转换\n\n2.进行监听,失败返回对于的错误信息.\n\n问题点: &OpError, &TCPAddr{}和 &sysListener的使用\n\n​\t     return 多个参数, 直接在函数定义的地方**指定返回类型**就可以了\n\n增加：\n\n2018-12-21：\n\n&sysListener是Go语言中获取地址变量的一个技巧(问题: 实现了深拷贝,浅拷贝还是其他的方式)\n\n&OpError按自己定义错误的一种使用方式(定义一个错误对象,实现错误的Error()方法)\n\n对于错误的处理,尽量就立即返回\n\n## 2018/12/20\n\nRTSP服务器:\n\n更改结构将rtsp服务功能包化\n\n代码分析:(net/http/header.go)\n\n主要用于http的header头解析和时间格式的解析\n\n```go\nfunc hasToken(v, token string) bool {\n\tif len(token) > len(v) || token == \"\" {\n\t\treturn false\n\t}\n\tif v == token {\n\t\treturn true\n\t}\n\tfor sp := 0; sp <= len(v)-len(token); sp++ {\n\t\t// Check that first character is good.\n\t\t// The token is ASCII, so checking only a single byte\n\t\t// is sufficient. We skip this potential starting\n\t\t// position if both the first byte and its potential\n\t\t// ASCII uppercase equivalent (b|0x20) don't match.\n\t\t// False positives ('^' => '~') are caught by EqualFold.\n\t\tif b := v[sp]; b != token[0] && b|0x20 != token[0] {\n\t\t\tcontinue\n\t\t}\n\t\t// Check that start pos is on a valid token boundary.\n\t\tif sp > 0 && !isTokenBoundary(v[sp-1]) {\n\t\t\tcontinue\n\t\t}\n\t\t// Check that end pos is on a valid token boundary.\n\t\tif endPos := sp + len(token); endPos != len(v) && !isTokenBoundary(v[endPos]) {\n\t\t\tcontinue\n\t\t}\n\t\tif strings.EqualFold(v[sp:sp+len(token)], token) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n```\n\n功能描述: 查看v字符串中是不是包含token.\n\n## 2018/12/21\n\nRTSP服务器:\n\n参照http模块处理http请求的流程处理RTSP的处理\n\n代码分析:\n\n```go\ntype onceCloseListener struct {\n\tnet.Listener   //隐式声明\n\tonce     sync.Once\n\tcloseErr error\n}\n```\n\n梳理http的框架结构\n\n## 2018/12/23\n\nnet/http中的ServeMux结构是一个http服务端对请求的URI做处理的一个多路复用器.\n\n","source":"_posts/Go的学习进度.md","raw":"---\ntitle: Go的学习进度\nreward: true\ndate: 2018-12-19 22:30:09\ndescription:\ncategories:\ntags:\n- Go\n---\n\n# Go的学习进度\n\n## Go的整体计划\n\n项目目标: 实现一个简易的RTSP服务器\n每日计划: 对一个开源代码的一段进行分析\n\n## 2018/12/19\n\nRTSP服务器:\n实现了一个最简单的服务监听功能,能监听554端口,发送消息和响应消息\n\n代码分析:(net中的tcpsock.go)\n\n```go\nfunc ListenTCP(network string, laddr *TCPAddr) (*TCPListener, error) {\n\tswitch network {\n\tcase \"tcp\", \"tcp4\", \"tcp6\":\n\tdefault:\n\t\treturn nil, &OpError{Op: \"listen\", Net: network, Source: nil, Addr: laddr.opAddr(), Err: UnknownNetworkError(network)}\n\t}\n\tif laddr == nil {\n\t\tladdr = &TCPAddr{}\n\t}\n\tsl := &sysListener{network: network, address: laddr.String()}\n\tln, err := sl.listenTCP(context.Background(), laddr)\n\tif err != nil {\n\t\treturn nil, &OpError{Op: \"listen\", Net: network, Source: nil, Addr: laddr.opAddr(), Err: err}\n\t}\n\treturn ln, nil\n}\n```\n\n解析:\n\n这是net中TCP监听的一段代码.\n\n1.参数检测,network必须为\"tcp\",\"tcp4\",\"tcp6\"中的一种; laddr转换\n\n2.进行监听,失败返回对于的错误信息.\n\n问题点: &OpError, &TCPAddr{}和 &sysListener的使用\n\n​\t     return 多个参数, 直接在函数定义的地方**指定返回类型**就可以了\n\n增加：\n\n2018-12-21：\n\n&sysListener是Go语言中获取地址变量的一个技巧(问题: 实现了深拷贝,浅拷贝还是其他的方式)\n\n&OpError按自己定义错误的一种使用方式(定义一个错误对象,实现错误的Error()方法)\n\n对于错误的处理,尽量就立即返回\n\n## 2018/12/20\n\nRTSP服务器:\n\n更改结构将rtsp服务功能包化\n\n代码分析:(net/http/header.go)\n\n主要用于http的header头解析和时间格式的解析\n\n```go\nfunc hasToken(v, token string) bool {\n\tif len(token) > len(v) || token == \"\" {\n\t\treturn false\n\t}\n\tif v == token {\n\t\treturn true\n\t}\n\tfor sp := 0; sp <= len(v)-len(token); sp++ {\n\t\t// Check that first character is good.\n\t\t// The token is ASCII, so checking only a single byte\n\t\t// is sufficient. We skip this potential starting\n\t\t// position if both the first byte and its potential\n\t\t// ASCII uppercase equivalent (b|0x20) don't match.\n\t\t// False positives ('^' => '~') are caught by EqualFold.\n\t\tif b := v[sp]; b != token[0] && b|0x20 != token[0] {\n\t\t\tcontinue\n\t\t}\n\t\t// Check that start pos is on a valid token boundary.\n\t\tif sp > 0 && !isTokenBoundary(v[sp-1]) {\n\t\t\tcontinue\n\t\t}\n\t\t// Check that end pos is on a valid token boundary.\n\t\tif endPos := sp + len(token); endPos != len(v) && !isTokenBoundary(v[endPos]) {\n\t\t\tcontinue\n\t\t}\n\t\tif strings.EqualFold(v[sp:sp+len(token)], token) {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n```\n\n功能描述: 查看v字符串中是不是包含token.\n\n## 2018/12/21\n\nRTSP服务器:\n\n参照http模块处理http请求的流程处理RTSP的处理\n\n代码分析:\n\n```go\ntype onceCloseListener struct {\n\tnet.Listener   //隐式声明\n\tonce     sync.Once\n\tcloseErr error\n}\n```\n\n梳理http的框架结构\n\n## 2018/12/23\n\nnet/http中的ServeMux结构是一个http服务端对请求的URI做处理的一个多路复用器.\n\n","slug":"Go的学习进度","published":1,"updated":"2018-12-23T15:03:05.259Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpt0006ewuopp20g0w4","content":"<h1 id=\"Go的学习进度\"><a href=\"#Go的学习进度\" class=\"headerlink\" title=\"Go的学习进度\"></a>Go的学习进度</h1><h2 id=\"Go的整体计划\"><a href=\"#Go的整体计划\" class=\"headerlink\" title=\"Go的整体计划\"></a>Go的整体计划</h2><p>项目目标: 实现一个简易的RTSP服务器<br>每日计划: 对一个开源代码的一段进行分析</p>\n<h2 id=\"2018-12-19\"><a href=\"#2018-12-19\" class=\"headerlink\" title=\"2018/12/19\"></a>2018/12/19</h2><p>RTSP服务器:<br>实现了一个最简单的服务监听功能,能监听554端口,发送消息和响应消息</p>\n<p>代码分析:(net中的tcpsock.go)</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ListenTCP</span><span class=\"params\">(network <span class=\"keyword\">string</span>, laddr *TCPAddr)</span> <span class=\"params\">(*TCPListener, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> network &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"string\">\"tcp\"</span>, <span class=\"string\">\"tcp4\"</span>, <span class=\"string\">\"tcp6\"</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, &amp;OpError&#123;Op: <span class=\"string\">\"listen\"</span>, Net: network, Source: <span class=\"literal\">nil</span>, Addr: laddr.opAddr(), Err: UnknownNetworkError(network)&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> laddr == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tladdr = &amp;TCPAddr&#123;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsl := &amp;sysListener&#123;network: network, address: laddr.String()&#125;</span><br><span class=\"line\">\tln, err := sl.listenTCP(context.Background(), laddr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, &amp;OpError&#123;Op: <span class=\"string\">\"listen\"</span>, Net: network, Source: <span class=\"literal\">nil</span>, Addr: laddr.opAddr(), Err: err&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ln, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>解析:</p>\n<p>这是net中TCP监听的一段代码.</p>\n<p>1.参数检测,network必须为”tcp”,”tcp4”,”tcp6”中的一种; laddr转换</p>\n<p>2.进行监听,失败返回对于的错误信息.</p>\n<p>问题点: &amp;OpError, &amp;TCPAddr{}和 &amp;sysListener的使用</p>\n<p>​         return 多个参数, 直接在函数定义的地方<strong>指定返回类型</strong>就可以了</p>\n<p>增加：</p>\n<p>2018-12-21：</p>\n<p>&amp;sysListener是Go语言中获取地址变量的一个技巧(问题: 实现了深拷贝,浅拷贝还是其他的方式)</p>\n<p>&amp;OpError按自己定义错误的一种使用方式(定义一个错误对象,实现错误的Error()方法)</p>\n<p>对于错误的处理,尽量就立即返回</p>\n<h2 id=\"2018-12-20\"><a href=\"#2018-12-20\" class=\"headerlink\" title=\"2018/12/20\"></a>2018/12/20</h2><p>RTSP服务器:</p>\n<p>更改结构将rtsp服务功能包化</p>\n<p>代码分析:(net/http/header.go)</p>\n<p>主要用于http的header头解析和时间格式的解析</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hasToken</span><span class=\"params\">(v, token <span class=\"keyword\">string</span>)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(token) &gt; <span class=\"built_in\">len</span>(v) || token == <span class=\"string\">\"\"</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == token &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> sp := <span class=\"number\">0</span>; sp &lt;= <span class=\"built_in\">len</span>(v)-<span class=\"built_in\">len</span>(token); sp++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that first character is good.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// The token is ASCII, so checking only a single byte</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// is sufficient. We skip this potential starting</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// position if both the first byte and its potential</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ASCII uppercase equivalent (b|0x20) don't match.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// False positives ('^' =&gt; '~') are caught by EqualFold.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> b := v[sp]; b != token[<span class=\"number\">0</span>] &amp;&amp; b|<span class=\"number\">0x20</span> != token[<span class=\"number\">0</span>] &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that start pos is on a valid token boundary.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> sp &gt; <span class=\"number\">0</span> &amp;&amp; !isTokenBoundary(v[sp<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that end pos is on a valid token boundary.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> endPos := sp + <span class=\"built_in\">len</span>(token); endPos != <span class=\"built_in\">len</span>(v) &amp;&amp; !isTokenBoundary(v[endPos]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> strings.EqualFold(v[sp:sp+<span class=\"built_in\">len</span>(token)], token) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>功能描述: 查看v字符串中是不是包含token.</p>\n<h2 id=\"2018-12-21\"><a href=\"#2018-12-21\" class=\"headerlink\" title=\"2018/12/21\"></a>2018/12/21</h2><p>RTSP服务器:</p>\n<p>参照http模块处理http请求的流程处理RTSP的处理</p>\n<p>代码分析:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> onceCloseListener <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tnet.Listener   <span class=\"comment\">//隐式声明</span></span><br><span class=\"line\">\tonce     sync.Once</span><br><span class=\"line\">\tcloseErr error</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>梳理http的框架结构</p>\n<h2 id=\"2018-12-23\"><a href=\"#2018-12-23\" class=\"headerlink\" title=\"2018/12/23\"></a>2018/12/23</h2><p>net/http中的ServeMux结构是一个http服务端对请求的URI做处理的一个多路复用器.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Go的学习进度\"><a href=\"#Go的学习进度\" class=\"headerlink\" title=\"Go的学习进度\"></a>Go的学习进度</h1><h2 id=\"Go的整体计划\"><a href=\"#Go的整体计划\" class=\"headerlink\" title=\"Go的整体计划\"></a>Go的整体计划</h2><p>项目目标: 实现一个简易的RTSP服务器<br>每日计划: 对一个开源代码的一段进行分析</p>\n<h2 id=\"2018-12-19\"><a href=\"#2018-12-19\" class=\"headerlink\" title=\"2018/12/19\"></a>2018/12/19</h2><p>RTSP服务器:<br>实现了一个最简单的服务监听功能,能监听554端口,发送消息和响应消息</p>\n<p>代码分析:(net中的tcpsock.go)</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">ListenTCP</span><span class=\"params\">(network <span class=\"keyword\">string</span>, laddr *TCPAddr)</span> <span class=\"params\">(*TCPListener, error)</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">switch</span> network &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"string\">\"tcp\"</span>, <span class=\"string\">\"tcp4\"</span>, <span class=\"string\">\"tcp6\"</span>:</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, &amp;OpError&#123;Op: <span class=\"string\">\"listen\"</span>, Net: network, Source: <span class=\"literal\">nil</span>, Addr: laddr.opAddr(), Err: UnknownNetworkError(network)&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> laddr == <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\tladdr = &amp;TCPAddr&#123;&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsl := &amp;sysListener&#123;network: network, address: laddr.String()&#125;</span><br><span class=\"line\">\tln, err := sl.listenTCP(context.Background(), laddr)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>, &amp;OpError&#123;Op: <span class=\"string\">\"listen\"</span>, Net: network, Source: <span class=\"literal\">nil</span>, Addr: laddr.opAddr(), Err: err&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ln, <span class=\"literal\">nil</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>解析:</p>\n<p>这是net中TCP监听的一段代码.</p>\n<p>1.参数检测,network必须为”tcp”,”tcp4”,”tcp6”中的一种; laddr转换</p>\n<p>2.进行监听,失败返回对于的错误信息.</p>\n<p>问题点: &amp;OpError, &amp;TCPAddr{}和 &amp;sysListener的使用</p>\n<p>​         return 多个参数, 直接在函数定义的地方<strong>指定返回类型</strong>就可以了</p>\n<p>增加：</p>\n<p>2018-12-21：</p>\n<p>&amp;sysListener是Go语言中获取地址变量的一个技巧(问题: 实现了深拷贝,浅拷贝还是其他的方式)</p>\n<p>&amp;OpError按自己定义错误的一种使用方式(定义一个错误对象,实现错误的Error()方法)</p>\n<p>对于错误的处理,尽量就立即返回</p>\n<h2 id=\"2018-12-20\"><a href=\"#2018-12-20\" class=\"headerlink\" title=\"2018/12/20\"></a>2018/12/20</h2><p>RTSP服务器:</p>\n<p>更改结构将rtsp服务功能包化</p>\n<p>代码分析:(net/http/header.go)</p>\n<p>主要用于http的header头解析和时间格式的解析</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">hasToken</span><span class=\"params\">(v, token <span class=\"keyword\">string</span>)</span> <span class=\"title\">bool</span></span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(token) &gt; <span class=\"built_in\">len</span>(v) || token == <span class=\"string\">\"\"</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> v == token &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> sp := <span class=\"number\">0</span>; sp &lt;= <span class=\"built_in\">len</span>(v)-<span class=\"built_in\">len</span>(token); sp++ &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that first character is good.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// The token is ASCII, so checking only a single byte</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// is sufficient. We skip this potential starting</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// position if both the first byte and its potential</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// ASCII uppercase equivalent (b|0x20) don't match.</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// False positives ('^' =&gt; '~') are caught by EqualFold.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> b := v[sp]; b != token[<span class=\"number\">0</span>] &amp;&amp; b|<span class=\"number\">0x20</span> != token[<span class=\"number\">0</span>] &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that start pos is on a valid token boundary.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> sp &gt; <span class=\"number\">0</span> &amp;&amp; !isTokenBoundary(v[sp<span class=\"number\">-1</span>]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">// Check that end pos is on a valid token boundary.</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> endPos := sp + <span class=\"built_in\">len</span>(token); endPos != <span class=\"built_in\">len</span>(v) &amp;&amp; !isTokenBoundary(v[endPos]) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">continue</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> strings.EqualFold(v[sp:sp+<span class=\"built_in\">len</span>(token)], token) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>功能描述: 查看v字符串中是不是包含token.</p>\n<h2 id=\"2018-12-21\"><a href=\"#2018-12-21\" class=\"headerlink\" title=\"2018/12/21\"></a>2018/12/21</h2><p>RTSP服务器:</p>\n<p>参照http模块处理http请求的流程处理RTSP的处理</p>\n<p>代码分析:</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">type</span> onceCloseListener <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tnet.Listener   <span class=\"comment\">//隐式声明</span></span><br><span class=\"line\">\tonce     sync.Once</span><br><span class=\"line\">\tcloseErr error</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>梳理http的框架结构</p>\n<h2 id=\"2018-12-23\"><a href=\"#2018-12-23\" class=\"headerlink\" title=\"2018/12/23\"></a>2018/12/23</h2><p>net/http中的ServeMux结构是一个http服务端对请求的URI做处理的一个多路复用器.</p>\n"},{"title":"Go环境搭建","reward":true,"date":"2018-12-13T13:53:35.000Z","description":null,"_content":"\n[TOC]\n\n\n\n## 安装\n\n## 学习\n\n2018-12-13号开始学习.\n\n区块链\n\n云服务和云存储\n\n大数据开发\n\n### 源码安装Go\n\n在树莓派上编译Go源码，查看编译完成后占用的大小\n\n1. 获取源码\n\n2. 编译源码\n\n   由两个Go的编译工具链,一个是gc,另一个是gccgo.\n\n   Go编译器支持8种指令集.\n\n3. 运行Demo\n\n### linux和Mac环境部署\n\ngo的root包存放目录 /usr/local\n\n在/etc/profile种添加PATH,GOROOT,GOPATH路径指定\n\n```go\n\nexport PATH=$PATH:/usr/loca/go/bin\n\nexport GOROOT=$(go env GOROOT)\n\nexport GOPATH=$(go env GOPATH)\n\nexport PATH=$PATH:$GOPATH/bin\n\n```\n\n\n\n### go之旅\n\ngo官网上的一个Go编程指引功能\n\n### 如何去写Go代码\n\n#### 编译类型\n\n取消调试信息\n\ngo build -ldflags \"-w\" prog.go\n\ngo编译器生成的代码包含内联函数调用和注册变量\n\n在调试的时候需要关掉它们\n\ngo build -gcflags \"-N -l\"\n\n### 编辑器和IDE工具\n\nLiteIDE\n\nVSCode\n\n### 高效Go\n\n### 诊断\n\n使用gdb调试Go\n\n### FAQ\n\nGo相关的一个共性的问题\n\n### 其他资源\n\n## 参考文档\n\n### 包文档\n\n以包的形式划分模块.\n\n### 命令文档\n\n#### godoc\n\n将代码和文档保持一致.\n\n### 语法文档\n\n#### Go的特性\n\n##### 切片\n\n入门:\n\n切片是对数组的一个升级,每个切片的元素都是不定长的,同时可以插入.\n\n##### Map\n\nMap是一个类型变量的无序集合.\n\n##### Interface\n\n把所有共性的方法定义在一起,任何其他类型只要实现这些方法就是实现这个接口.\n\n##### Channel\n\n用于goroutine上的通信.\n\n##### 并发\n\ngoroutine轻量级线程,与内核中的线程不是一个东西.\n\ngoroutine的实现机制值得研究一下.\n\n### Go的内存模型\n\n### 稳定版本的历史记录\n\n## 文章\n\n### Go的Blog\n\n## 话题\n\n","source":"_posts/Go环境搭建.md","raw":"---\ntitle: Go环境搭建\nreward: true\ndate: 2018-12-13 21:53:35\ndescription:\ncategories:\ntags:\n- GO\n---\n\n[TOC]\n\n\n\n## 安装\n\n## 学习\n\n2018-12-13号开始学习.\n\n区块链\n\n云服务和云存储\n\n大数据开发\n\n### 源码安装Go\n\n在树莓派上编译Go源码，查看编译完成后占用的大小\n\n1. 获取源码\n\n2. 编译源码\n\n   由两个Go的编译工具链,一个是gc,另一个是gccgo.\n\n   Go编译器支持8种指令集.\n\n3. 运行Demo\n\n### linux和Mac环境部署\n\ngo的root包存放目录 /usr/local\n\n在/etc/profile种添加PATH,GOROOT,GOPATH路径指定\n\n```go\n\nexport PATH=$PATH:/usr/loca/go/bin\n\nexport GOROOT=$(go env GOROOT)\n\nexport GOPATH=$(go env GOPATH)\n\nexport PATH=$PATH:$GOPATH/bin\n\n```\n\n\n\n### go之旅\n\ngo官网上的一个Go编程指引功能\n\n### 如何去写Go代码\n\n#### 编译类型\n\n取消调试信息\n\ngo build -ldflags \"-w\" prog.go\n\ngo编译器生成的代码包含内联函数调用和注册变量\n\n在调试的时候需要关掉它们\n\ngo build -gcflags \"-N -l\"\n\n### 编辑器和IDE工具\n\nLiteIDE\n\nVSCode\n\n### 高效Go\n\n### 诊断\n\n使用gdb调试Go\n\n### FAQ\n\nGo相关的一个共性的问题\n\n### 其他资源\n\n## 参考文档\n\n### 包文档\n\n以包的形式划分模块.\n\n### 命令文档\n\n#### godoc\n\n将代码和文档保持一致.\n\n### 语法文档\n\n#### Go的特性\n\n##### 切片\n\n入门:\n\n切片是对数组的一个升级,每个切片的元素都是不定长的,同时可以插入.\n\n##### Map\n\nMap是一个类型变量的无序集合.\n\n##### Interface\n\n把所有共性的方法定义在一起,任何其他类型只要实现这些方法就是实现这个接口.\n\n##### Channel\n\n用于goroutine上的通信.\n\n##### 并发\n\ngoroutine轻量级线程,与内核中的线程不是一个东西.\n\ngoroutine的实现机制值得研究一下.\n\n### Go的内存模型\n\n### 稳定版本的历史记录\n\n## 文章\n\n### Go的Blog\n\n## 话题\n\n","slug":"Go环境搭建","published":1,"updated":"2018-12-27T11:25:08.519Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpw000aewuohhpye7tr","content":"<p>[TOC]</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h2><p>2018-12-13号开始学习.</p>\n<p>区块链</p>\n<p>云服务和云存储</p>\n<p>大数据开发</p>\n<h3 id=\"源码安装Go\"><a href=\"#源码安装Go\" class=\"headerlink\" title=\"源码安装Go\"></a>源码安装Go</h3><p>在树莓派上编译Go源码，查看编译完成后占用的大小</p>\n<ol>\n<li><p>获取源码</p>\n</li>\n<li><p>编译源码</p>\n<p>由两个Go的编译工具链,一个是gc,另一个是gccgo.</p>\n<p>Go编译器支持8种指令集.</p>\n</li>\n<li><p>运行Demo</p>\n</li>\n</ol>\n<h3 id=\"linux和Mac环境部署\"><a href=\"#linux和Mac环境部署\" class=\"headerlink\" title=\"linux和Mac环境部署\"></a>linux和Mac环境部署</h3><p>go的root包存放目录 /usr/local</p>\n<p>在/etc/profile种添加PATH,GOROOT,GOPATH路径指定</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:/usr/loca/<span class=\"keyword\">go</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\">export GOROOT=$(<span class=\"keyword\">go</span> env GOROOT)</span><br><span class=\"line\"></span><br><span class=\"line\">export GOPATH=$(<span class=\"keyword\">go</span> env GOPATH)</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:$GOPATH/bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"go之旅\"><a href=\"#go之旅\" class=\"headerlink\" title=\"go之旅\"></a>go之旅</h3><p>go官网上的一个Go编程指引功能</p>\n<h3 id=\"如何去写Go代码\"><a href=\"#如何去写Go代码\" class=\"headerlink\" title=\"如何去写Go代码\"></a>如何去写Go代码</h3><h4 id=\"编译类型\"><a href=\"#编译类型\" class=\"headerlink\" title=\"编译类型\"></a>编译类型</h4><p>取消调试信息</p>\n<p>go build -ldflags “-w” prog.go</p>\n<p>go编译器生成的代码包含内联函数调用和注册变量</p>\n<p>在调试的时候需要关掉它们</p>\n<p>go build -gcflags “-N -l”</p>\n<h3 id=\"编辑器和IDE工具\"><a href=\"#编辑器和IDE工具\" class=\"headerlink\" title=\"编辑器和IDE工具\"></a>编辑器和IDE工具</h3><p>LiteIDE</p>\n<p>VSCode</p>\n<h3 id=\"高效Go\"><a href=\"#高效Go\" class=\"headerlink\" title=\"高效Go\"></a>高效Go</h3><h3 id=\"诊断\"><a href=\"#诊断\" class=\"headerlink\" title=\"诊断\"></a>诊断</h3><p>使用gdb调试Go</p>\n<h3 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h3><p>Go相关的一个共性的问题</p>\n<h3 id=\"其他资源\"><a href=\"#其他资源\" class=\"headerlink\" title=\"其他资源\"></a>其他资源</h3><h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><h3 id=\"包文档\"><a href=\"#包文档\" class=\"headerlink\" title=\"包文档\"></a>包文档</h3><p>以包的形式划分模块.</p>\n<h3 id=\"命令文档\"><a href=\"#命令文档\" class=\"headerlink\" title=\"命令文档\"></a>命令文档</h3><h4 id=\"godoc\"><a href=\"#godoc\" class=\"headerlink\" title=\"godoc\"></a>godoc</h4><p>将代码和文档保持一致.</p>\n<h3 id=\"语法文档\"><a href=\"#语法文档\" class=\"headerlink\" title=\"语法文档\"></a>语法文档</h3><h4 id=\"Go的特性\"><a href=\"#Go的特性\" class=\"headerlink\" title=\"Go的特性\"></a>Go的特性</h4><h5 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h5><p>入门:</p>\n<p>切片是对数组的一个升级,每个切片的元素都是不定长的,同时可以插入.</p>\n<h5 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h5><p>Map是一个类型变量的无序集合.</p>\n<h5 id=\"Interface\"><a href=\"#Interface\" class=\"headerlink\" title=\"Interface\"></a>Interface</h5><p>把所有共性的方法定义在一起,任何其他类型只要实现这些方法就是实现这个接口.</p>\n<h5 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h5><p>用于goroutine上的通信.</p>\n<h5 id=\"并发\"><a href=\"#并发\" class=\"headerlink\" title=\"并发\"></a>并发</h5><p>goroutine轻量级线程,与内核中的线程不是一个东西.</p>\n<p>goroutine的实现机制值得研究一下.</p>\n<h3 id=\"Go的内存模型\"><a href=\"#Go的内存模型\" class=\"headerlink\" title=\"Go的内存模型\"></a>Go的内存模型</h3><h3 id=\"稳定版本的历史记录\"><a href=\"#稳定版本的历史记录\" class=\"headerlink\" title=\"稳定版本的历史记录\"></a>稳定版本的历史记录</h3><h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><h3 id=\"Go的Blog\"><a href=\"#Go的Blog\" class=\"headerlink\" title=\"Go的Blog\"></a>Go的Blog</h3><h2 id=\"话题\"><a href=\"#话题\" class=\"headerlink\" title=\"话题\"></a>话题</h2>","site":{"data":{}},"excerpt":"","more":"<p>[TOC]</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h2 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h2><p>2018-12-13号开始学习.</p>\n<p>区块链</p>\n<p>云服务和云存储</p>\n<p>大数据开发</p>\n<h3 id=\"源码安装Go\"><a href=\"#源码安装Go\" class=\"headerlink\" title=\"源码安装Go\"></a>源码安装Go</h3><p>在树莓派上编译Go源码，查看编译完成后占用的大小</p>\n<ol>\n<li><p>获取源码</p>\n</li>\n<li><p>编译源码</p>\n<p>由两个Go的编译工具链,一个是gc,另一个是gccgo.</p>\n<p>Go编译器支持8种指令集.</p>\n</li>\n<li><p>运行Demo</p>\n</li>\n</ol>\n<h3 id=\"linux和Mac环境部署\"><a href=\"#linux和Mac环境部署\" class=\"headerlink\" title=\"linux和Mac环境部署\"></a>linux和Mac环境部署</h3><p>go的root包存放目录 /usr/local</p>\n<p>在/etc/profile种添加PATH,GOROOT,GOPATH路径指定</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:/usr/loca/<span class=\"keyword\">go</span>/bin</span><br><span class=\"line\"></span><br><span class=\"line\">export GOROOT=$(<span class=\"keyword\">go</span> env GOROOT)</span><br><span class=\"line\"></span><br><span class=\"line\">export GOPATH=$(<span class=\"keyword\">go</span> env GOPATH)</span><br><span class=\"line\"></span><br><span class=\"line\">export PATH=$PATH:$GOPATH/bin</span><br></pre></td></tr></table></figure>\n<h3 id=\"go之旅\"><a href=\"#go之旅\" class=\"headerlink\" title=\"go之旅\"></a>go之旅</h3><p>go官网上的一个Go编程指引功能</p>\n<h3 id=\"如何去写Go代码\"><a href=\"#如何去写Go代码\" class=\"headerlink\" title=\"如何去写Go代码\"></a>如何去写Go代码</h3><h4 id=\"编译类型\"><a href=\"#编译类型\" class=\"headerlink\" title=\"编译类型\"></a>编译类型</h4><p>取消调试信息</p>\n<p>go build -ldflags “-w” prog.go</p>\n<p>go编译器生成的代码包含内联函数调用和注册变量</p>\n<p>在调试的时候需要关掉它们</p>\n<p>go build -gcflags “-N -l”</p>\n<h3 id=\"编辑器和IDE工具\"><a href=\"#编辑器和IDE工具\" class=\"headerlink\" title=\"编辑器和IDE工具\"></a>编辑器和IDE工具</h3><p>LiteIDE</p>\n<p>VSCode</p>\n<h3 id=\"高效Go\"><a href=\"#高效Go\" class=\"headerlink\" title=\"高效Go\"></a>高效Go</h3><h3 id=\"诊断\"><a href=\"#诊断\" class=\"headerlink\" title=\"诊断\"></a>诊断</h3><p>使用gdb调试Go</p>\n<h3 id=\"FAQ\"><a href=\"#FAQ\" class=\"headerlink\" title=\"FAQ\"></a>FAQ</h3><p>Go相关的一个共性的问题</p>\n<h3 id=\"其他资源\"><a href=\"#其他资源\" class=\"headerlink\" title=\"其他资源\"></a>其他资源</h3><h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><h3 id=\"包文档\"><a href=\"#包文档\" class=\"headerlink\" title=\"包文档\"></a>包文档</h3><p>以包的形式划分模块.</p>\n<h3 id=\"命令文档\"><a href=\"#命令文档\" class=\"headerlink\" title=\"命令文档\"></a>命令文档</h3><h4 id=\"godoc\"><a href=\"#godoc\" class=\"headerlink\" title=\"godoc\"></a>godoc</h4><p>将代码和文档保持一致.</p>\n<h3 id=\"语法文档\"><a href=\"#语法文档\" class=\"headerlink\" title=\"语法文档\"></a>语法文档</h3><h4 id=\"Go的特性\"><a href=\"#Go的特性\" class=\"headerlink\" title=\"Go的特性\"></a>Go的特性</h4><h5 id=\"切片\"><a href=\"#切片\" class=\"headerlink\" title=\"切片\"></a>切片</h5><p>入门:</p>\n<p>切片是对数组的一个升级,每个切片的元素都是不定长的,同时可以插入.</p>\n<h5 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h5><p>Map是一个类型变量的无序集合.</p>\n<h5 id=\"Interface\"><a href=\"#Interface\" class=\"headerlink\" title=\"Interface\"></a>Interface</h5><p>把所有共性的方法定义在一起,任何其他类型只要实现这些方法就是实现这个接口.</p>\n<h5 id=\"Channel\"><a href=\"#Channel\" class=\"headerlink\" title=\"Channel\"></a>Channel</h5><p>用于goroutine上的通信.</p>\n<h5 id=\"并发\"><a href=\"#并发\" class=\"headerlink\" title=\"并发\"></a>并发</h5><p>goroutine轻量级线程,与内核中的线程不是一个东西.</p>\n<p>goroutine的实现机制值得研究一下.</p>\n<h3 id=\"Go的内存模型\"><a href=\"#Go的内存模型\" class=\"headerlink\" title=\"Go的内存模型\"></a>Go的内存模型</h3><h3 id=\"稳定版本的历史记录\"><a href=\"#稳定版本的历史记录\" class=\"headerlink\" title=\"稳定版本的历史记录\"></a>稳定版本的历史记录</h3><h2 id=\"文章\"><a href=\"#文章\" class=\"headerlink\" title=\"文章\"></a>文章</h2><h3 id=\"Go的Blog\"><a href=\"#Go的Blog\" class=\"headerlink\" title=\"Go的Blog\"></a>Go的Blog</h3><h2 id=\"话题\"><a href=\"#话题\" class=\"headerlink\" title=\"话题\"></a>话题</h2>"},{"title":"Javascript整理","reward":true,"date":"2018-11-15T15:40:38.000Z","description":null,"_content":"\n# Javascript\n\n## 链接\n\n[阮哥的ES6入门](http://es6.ruanyifeng.com/#README)\n","source":"_posts/Javascript整理.md","raw":"---\ntitle: Javascript整理\nreward: true\ndate: 2018-11-15 23:40:38\ndescription:\ncategories:\ntags:\n- Javascript\n---\n\n# Javascript\n\n## 链接\n\n[阮哥的ES6入门](http://es6.ruanyifeng.com/#README)\n","slug":"Javascript整理","published":1,"updated":"2018-11-15T15:41:36.387Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvpz000bewuo5ml6ums0","content":"<h1 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮哥的ES6入门</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Javascript\"><a href=\"#Javascript\" class=\"headerlink\" title=\"Javascript\"></a>Javascript</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://es6.ruanyifeng.com/#README\" target=\"_blank\" rel=\"noopener\">阮哥的ES6入门</a></p>\n"},{"_content":"title: Js中require和import的使用\nreward: true\ndate: 2018-11-15 23:40:38\ndescription:\ncategories:\ntags:\n\n- Javascript\n\n# Js中require和import的使用\n\n## require的使用\n\n\n\n## import的使用","source":"_posts/Js中require和import的使用.md","raw":"title: Js中require和import的使用\nreward: true\ndate: 2018-11-15 23:40:38\ndescription:\ncategories:\ntags:\n\n- Javascript\n\n# Js中require和import的使用\n\n## require的使用\n\n\n\n## import的使用","slug":"Js中require和import的使用","published":1,"date":"2019-01-23T09:14:57.874Z","updated":"2019-01-23T09:17:51.443Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq0000dewuo0775pd8m","content":"<p>title: Js中require和import的使用<br>reward: true<br>date: 2018-11-15 23:40:38<br>description:<br>categories:<br>tags:</p>\n<ul>\n<li>Javascript</li>\n</ul>\n<h1 id=\"Js中require和import的使用\"><a href=\"#Js中require和import的使用\" class=\"headerlink\" title=\"Js中require和import的使用\"></a>Js中require和import的使用</h1><h2 id=\"require的使用\"><a href=\"#require的使用\" class=\"headerlink\" title=\"require的使用\"></a>require的使用</h2><h2 id=\"import的使用\"><a href=\"#import的使用\" class=\"headerlink\" title=\"import的使用\"></a>import的使用</h2>","site":{"data":{}},"excerpt":"","more":"<p>title: Js中require和import的使用<br>reward: true<br>date: 2018-11-15 23:40:38<br>description:<br>categories:<br>tags:</p>\n<ul>\n<li>Javascript</li>\n</ul>\n<h1 id=\"Js中require和import的使用\"><a href=\"#Js中require和import的使用\" class=\"headerlink\" title=\"Js中require和import的使用\"></a>Js中require和import的使用</h1><h2 id=\"require的使用\"><a href=\"#require的使用\" class=\"headerlink\" title=\"require的使用\"></a>require的使用</h2><h2 id=\"import的使用\"><a href=\"#import的使用\" class=\"headerlink\" title=\"import的使用\"></a>import的使用</h2>"},{"title":"Linux下cmake的使用","reward":true,"date":"2018-11-02T15:44:23.000Z","description":null,"_content":"\n# Cmake\n\n## 相关链接\n\n[linux下cmake的使用](https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/index.html)","source":"_posts/Linux下cmake的使用.md","raw":"---\ntitle: Linux下cmake的使用\nreward: true\ndate: 2018-11-02 23:44:23\ndescription:\ncategories:\ntags:\n- make\n---\n\n# Cmake\n\n## 相关链接\n\n[linux下cmake的使用](https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/index.html)","slug":"Linux下cmake的使用","published":1,"updated":"2018-11-03T13:32:44.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq2000fewuojt6fpoqr","content":"<h1 id=\"Cmake\"><a href=\"#Cmake\" class=\"headerlink\" title=\"Cmake\"></a>Cmake</h1><h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><p><a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/index.html\" target=\"_blank\" rel=\"noopener\">linux下cmake的使用</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Cmake\"><a href=\"#Cmake\" class=\"headerlink\" title=\"Cmake\"></a>Cmake</h1><h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><p><a href=\"https://www.ibm.com/developerworks/cn/linux/l-cn-cmake/index.html\" target=\"_blank\" rel=\"noopener\">linux下cmake的使用</a></p>\n"},{"title":"Linux手册","reward":true,"date":"2018-11-02T15:11:33.000Z","description":null,"_content":"\n# Linux手册\n\n## 常用链接\n\n[Linux手册文档](https://linuxtools-rst.readthedocs.io/zh_CN/latest/)\n\n## 应用\n\n### 查看linux中程序依赖的库\n\n使用ldd命令查看运行所依赖的库\nldd + 程序\n\n### netstat\n\n### xz和tar压缩\n\n压缩xz格式比7z还要小\n\n","source":"_posts/Linux手册.md","raw":"---\ntitle: Linux手册\nreward: true\ndate: 2018-11-02 23:11:33\ndescription:\ncategories:\ntags:\n- linux\n---\n\n# Linux手册\n\n## 常用链接\n\n[Linux手册文档](https://linuxtools-rst.readthedocs.io/zh_CN/latest/)\n\n## 应用\n\n### 查看linux中程序依赖的库\n\n使用ldd命令查看运行所依赖的库\nldd + 程序\n\n### netstat\n\n### xz和tar压缩\n\n压缩xz格式比7z还要小\n\n","slug":"Linux手册","published":1,"updated":"2018-12-01T04:24:16.080Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq3000hewuoixfuz97i","content":"<h1 id=\"Linux手册\"><a href=\"#Linux手册\" class=\"headerlink\" title=\"Linux手册\"></a>Linux手册</h1><h2 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h2><p><a href=\"https://linuxtools-rst.readthedocs.io/zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">Linux手册文档</a></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><h3 id=\"查看linux中程序依赖的库\"><a href=\"#查看linux中程序依赖的库\" class=\"headerlink\" title=\"查看linux中程序依赖的库\"></a>查看linux中程序依赖的库</h3><p>使用ldd命令查看运行所依赖的库<br>ldd + 程序</p>\n<h3 id=\"netstat\"><a href=\"#netstat\" class=\"headerlink\" title=\"netstat\"></a>netstat</h3><h3 id=\"xz和tar压缩\"><a href=\"#xz和tar压缩\" class=\"headerlink\" title=\"xz和tar压缩\"></a>xz和tar压缩</h3><p>压缩xz格式比7z还要小</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Linux手册\"><a href=\"#Linux手册\" class=\"headerlink\" title=\"Linux手册\"></a>Linux手册</h1><h2 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h2><p><a href=\"https://linuxtools-rst.readthedocs.io/zh_CN/latest/\" target=\"_blank\" rel=\"noopener\">Linux手册文档</a></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><h3 id=\"查看linux中程序依赖的库\"><a href=\"#查看linux中程序依赖的库\" class=\"headerlink\" title=\"查看linux中程序依赖的库\"></a>查看linux中程序依赖的库</h3><p>使用ldd命令查看运行所依赖的库<br>ldd + 程序</p>\n<h3 id=\"netstat\"><a href=\"#netstat\" class=\"headerlink\" title=\"netstat\"></a>netstat</h3><h3 id=\"xz和tar压缩\"><a href=\"#xz和tar压缩\" class=\"headerlink\" title=\"xz和tar压缩\"></a>xz和tar压缩</h3><p>压缩xz格式比7z还要小</p>\n"},{"title":"RabitMQ使用","reward":true,"date":"2018-11-18T12:16:45.000Z","description":null,"_content":"\n# RabbitMQ\n\n## 链接\n\n[官网](http://www.rabbitmq.com/)\n\n## ubuntu上安装RabbitMQ\n\n1. 将RabbitMQ signing key添加到apt-key中\n\n```shell\n$apt-key adv --keyserver \"hkps.pool.sks-keyservers.net\" --recv-keys \"0x6B73A36E6026DFCA\"\n$wget -O - \"https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc\" | sudo apt-key add -\n```\n\n2. 添加到sources.list.d中\n\n```shell\n$echo \"deb https://dl.bintray.com/rabbitmq/debian bionic main\" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list\n```\n---\n\n## 插件\n\n### rabbitmq-management\n\n该插件提供基于HTTP的API,用于管理和监控RabbitMQ的节点和集群,以及基于浏览器的UI和命令行工具rabbitmqadmin.\n它定期收集和汇总有关系统许多方面的数据.这些指标在UI和监控系统中向所有操作员公开,用于长期存储,警报,可视化和图表分析.\n\n#### 入门\n\n该插件已经包含在RabbitMQ的发行版本中.\n\n```shell\n$rabbitmq-plugins enable rabbitmq_management\n```\n\n---\n\n## 配置\n\nRabbitMQ带有默认的内置配置.在一些环境下已经完全够用.在一些部署调整的环境下,还有一种代理和插件配置的方法.\n\n### 用户管理\n\n#### 创建用户\n\n```shell\n$rabbitmqctl add_user root 123789\n```\n\n#### 设置权限\n\n```shell\n$rabbitmqctl set_user_tags root administrator\n```\n\n#### 查看用户列表\n\n```shell\n$rabbitmqctl list_users\n```\n\n#### 删除用户\n\n```shell\n$rabbitmqctl delete_user root\n```\n\n#### 修改用户密码\n\n```shell\n$rabbitmqctl change_password admin 123789hgh\n```\n\n### 为用户赋权\n\n```shell\n$rabbitmqctl list_user_permissions root\n$rabbitmqctl list_permissions -p vhost1\n$rabbitmqctl clear_permissions -p vhost1 root\n$rabbtimqctl set_permissions -p vhost1 root '.*' '.*' '.*'\n```\n\n---\n\n## 编程语言支持\n\n### C/C++\n\n[RabbitMQ C client](https://github.com/alanxz/rabbitmq-c)\n[SimpleAmqpClient](https://github.com/alanxz/SimpleAmqpClient)\n[amqpcpp](https://github.com/akalend/amqpcpp)\n[AMPQ-CPP](https://github.com/CopernicaMarketingSoftware/AMQP-CPP)","source":"_posts/RabitMQ使用.md","raw":"---\ntitle: RabitMQ使用\nreward: true\ndate: 2018-11-18 20:16:45\ndescription:\ncategories:\ntags:\n- RabbitMQ\n---\n\n# RabbitMQ\n\n## 链接\n\n[官网](http://www.rabbitmq.com/)\n\n## ubuntu上安装RabbitMQ\n\n1. 将RabbitMQ signing key添加到apt-key中\n\n```shell\n$apt-key adv --keyserver \"hkps.pool.sks-keyservers.net\" --recv-keys \"0x6B73A36E6026DFCA\"\n$wget -O - \"https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc\" | sudo apt-key add -\n```\n\n2. 添加到sources.list.d中\n\n```shell\n$echo \"deb https://dl.bintray.com/rabbitmq/debian bionic main\" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list\n```\n---\n\n## 插件\n\n### rabbitmq-management\n\n该插件提供基于HTTP的API,用于管理和监控RabbitMQ的节点和集群,以及基于浏览器的UI和命令行工具rabbitmqadmin.\n它定期收集和汇总有关系统许多方面的数据.这些指标在UI和监控系统中向所有操作员公开,用于长期存储,警报,可视化和图表分析.\n\n#### 入门\n\n该插件已经包含在RabbitMQ的发行版本中.\n\n```shell\n$rabbitmq-plugins enable rabbitmq_management\n```\n\n---\n\n## 配置\n\nRabbitMQ带有默认的内置配置.在一些环境下已经完全够用.在一些部署调整的环境下,还有一种代理和插件配置的方法.\n\n### 用户管理\n\n#### 创建用户\n\n```shell\n$rabbitmqctl add_user root 123789\n```\n\n#### 设置权限\n\n```shell\n$rabbitmqctl set_user_tags root administrator\n```\n\n#### 查看用户列表\n\n```shell\n$rabbitmqctl list_users\n```\n\n#### 删除用户\n\n```shell\n$rabbitmqctl delete_user root\n```\n\n#### 修改用户密码\n\n```shell\n$rabbitmqctl change_password admin 123789hgh\n```\n\n### 为用户赋权\n\n```shell\n$rabbitmqctl list_user_permissions root\n$rabbitmqctl list_permissions -p vhost1\n$rabbitmqctl clear_permissions -p vhost1 root\n$rabbtimqctl set_permissions -p vhost1 root '.*' '.*' '.*'\n```\n\n---\n\n## 编程语言支持\n\n### C/C++\n\n[RabbitMQ C client](https://github.com/alanxz/rabbitmq-c)\n[SimpleAmqpClient](https://github.com/alanxz/SimpleAmqpClient)\n[amqpcpp](https://github.com/akalend/amqpcpp)\n[AMPQ-CPP](https://github.com/CopernicaMarketingSoftware/AMQP-CPP)","slug":"RabitMQ使用","published":1,"updated":"2018-11-19T15:17:50.291Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq4000kewuo7jno7sim","content":"<h1 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://www.rabbitmq.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h2 id=\"ubuntu上安装RabbitMQ\"><a href=\"#ubuntu上安装RabbitMQ\" class=\"headerlink\" title=\"ubuntu上安装RabbitMQ\"></a>ubuntu上安装RabbitMQ</h2><ol>\n<li>将RabbitMQ signing key添加到apt-key中</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>apt-key adv --keyserver \"hkps.pool.sks-keyservers.net\" --recv-keys \"0x6B73A36E6026DFCA\"</span><br><span class=\"line\"><span class=\"meta\">$</span>wget -O - \"https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc\" | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>添加到sources.list.d中</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>echo \"deb https://dl.bintray.com/rabbitmq/debian bionic main\" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><h3 id=\"rabbitmq-management\"><a href=\"#rabbitmq-management\" class=\"headerlink\" title=\"rabbitmq-management\"></a>rabbitmq-management</h3><p>该插件提供基于HTTP的API,用于管理和监控RabbitMQ的节点和集群,以及基于浏览器的UI和命令行工具rabbitmqadmin.<br>它定期收集和汇总有关系统许多方面的数据.这些指标在UI和监控系统中向所有操作员公开,用于长期存储,警报,可视化和图表分析.</p>\n<h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4><p>该插件已经包含在RabbitMQ的发行版本中.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>RabbitMQ带有默认的内置配置.在一些环境下已经完全够用.在一些部署调整的环境下,还有一种代理和插件配置的方法.</p>\n<h3 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h3><h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl add_user root 123789</span><br></pre></td></tr></table></figure>\n<h4 id=\"设置权限\"><a href=\"#设置权限\" class=\"headerlink\" title=\"设置权限\"></a>设置权限</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl set_user_tags root administrator</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看用户列表\"><a href=\"#查看用户列表\" class=\"headerlink\" title=\"查看用户列表\"></a>查看用户列表</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_users</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl delete_user root</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改用户密码\"><a href=\"#修改用户密码\" class=\"headerlink\" title=\"修改用户密码\"></a>修改用户密码</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl change_password admin 123789hgh</span><br></pre></td></tr></table></figure>\n<h3 id=\"为用户赋权\"><a href=\"#为用户赋权\" class=\"headerlink\" title=\"为用户赋权\"></a>为用户赋权</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_user_permissions root</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_permissions -p vhost1</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl clear_permissions -p vhost1 root</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbtimqctl set_permissions -p vhost1 root '.*' '.*' '.*'</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"编程语言支持\"><a href=\"#编程语言支持\" class=\"headerlink\" title=\"编程语言支持\"></a>编程语言支持</h2><h3 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h3><p><a href=\"https://github.com/alanxz/rabbitmq-c\" target=\"_blank\" rel=\"noopener\">RabbitMQ C client</a><br><a href=\"https://github.com/alanxz/SimpleAmqpClient\" target=\"_blank\" rel=\"noopener\">SimpleAmqpClient</a><br><a href=\"https://github.com/akalend/amqpcpp\" target=\"_blank\" rel=\"noopener\">amqpcpp</a><br><a href=\"https://github.com/CopernicaMarketingSoftware/AMQP-CPP\" target=\"_blank\" rel=\"noopener\">AMPQ-CPP</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://www.rabbitmq.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h2 id=\"ubuntu上安装RabbitMQ\"><a href=\"#ubuntu上安装RabbitMQ\" class=\"headerlink\" title=\"ubuntu上安装RabbitMQ\"></a>ubuntu上安装RabbitMQ</h2><ol>\n<li>将RabbitMQ signing key添加到apt-key中</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>apt-key adv --keyserver \"hkps.pool.sks-keyservers.net\" --recv-keys \"0x6B73A36E6026DFCA\"</span><br><span class=\"line\"><span class=\"meta\">$</span>wget -O - \"https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc\" | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>添加到sources.list.d中</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>echo \"deb https://dl.bintray.com/rabbitmq/debian bionic main\" | sudo tee /etc/apt/sources.list.d/bintray.rabbitmq.list</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"插件\"><a href=\"#插件\" class=\"headerlink\" title=\"插件\"></a>插件</h2><h3 id=\"rabbitmq-management\"><a href=\"#rabbitmq-management\" class=\"headerlink\" title=\"rabbitmq-management\"></a>rabbitmq-management</h3><p>该插件提供基于HTTP的API,用于管理和监控RabbitMQ的节点和集群,以及基于浏览器的UI和命令行工具rabbitmqadmin.<br>它定期收集和汇总有关系统许多方面的数据.这些指标在UI和监控系统中向所有操作员公开,用于长期存储,警报,可视化和图表分析.</p>\n<h4 id=\"入门\"><a href=\"#入门\" class=\"headerlink\" title=\"入门\"></a>入门</h4><p>该插件已经包含在RabbitMQ的发行版本中.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>RabbitMQ带有默认的内置配置.在一些环境下已经完全够用.在一些部署调整的环境下,还有一种代理和插件配置的方法.</p>\n<h3 id=\"用户管理\"><a href=\"#用户管理\" class=\"headerlink\" title=\"用户管理\"></a>用户管理</h3><h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl add_user root 123789</span><br></pre></td></tr></table></figure>\n<h4 id=\"设置权限\"><a href=\"#设置权限\" class=\"headerlink\" title=\"设置权限\"></a>设置权限</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl set_user_tags root administrator</span><br></pre></td></tr></table></figure>\n<h4 id=\"查看用户列表\"><a href=\"#查看用户列表\" class=\"headerlink\" title=\"查看用户列表\"></a>查看用户列表</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_users</span><br></pre></td></tr></table></figure>\n<h4 id=\"删除用户\"><a href=\"#删除用户\" class=\"headerlink\" title=\"删除用户\"></a>删除用户</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl delete_user root</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改用户密码\"><a href=\"#修改用户密码\" class=\"headerlink\" title=\"修改用户密码\"></a>修改用户密码</h4><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl change_password admin 123789hgh</span><br></pre></td></tr></table></figure>\n<h3 id=\"为用户赋权\"><a href=\"#为用户赋权\" class=\"headerlink\" title=\"为用户赋权\"></a>为用户赋权</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_user_permissions root</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl list_permissions -p vhost1</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbitmqctl clear_permissions -p vhost1 root</span><br><span class=\"line\"><span class=\"meta\">$</span>rabbtimqctl set_permissions -p vhost1 root '.*' '.*' '.*'</span><br></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"编程语言支持\"><a href=\"#编程语言支持\" class=\"headerlink\" title=\"编程语言支持\"></a>编程语言支持</h2><h3 id=\"C-C\"><a href=\"#C-C\" class=\"headerlink\" title=\"C/C++\"></a>C/C++</h3><p><a href=\"https://github.com/alanxz/rabbitmq-c\" target=\"_blank\" rel=\"noopener\">RabbitMQ C client</a><br><a href=\"https://github.com/alanxz/SimpleAmqpClient\" target=\"_blank\" rel=\"noopener\">SimpleAmqpClient</a><br><a href=\"https://github.com/akalend/amqpcpp\" target=\"_blank\" rel=\"noopener\">amqpcpp</a><br><a href=\"https://github.com/CopernicaMarketingSoftware/AMQP-CPP\" target=\"_blank\" rel=\"noopener\">AMPQ-CPP</a></p>\n"},{"title":"Kafka使用","reward":true,"date":"2018-12-24T06:13:57.000Z","description":null,"_content":"\n## 简介\n\nkafka是一个实时数据管道和流应用.特点:水平扩展,容错,极为迅速\n\n3个关键能力:\n\n1. 发布和订阅记录流\n2. 以一种容错和持久化方式来存储记录流\n3. 记录实时流\n\n4个核心APIs\n\n1. Producer API\n2. Consumer API\n3. Streams API\n4. Connector API\n\n[官网](http://kafka.apache.org/)\n\n[Kafka的界面](https://github.com/linkedin/kafka-monitor)\n\nhttps://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar","source":"_posts/Kafka使用.md","raw":"---\ntitle: Kafka使用\nreward: true\ndate: 2018-12-24 14:13:57\ndescription:\ncategories:\ntags:\n- 集群\n---\n\n## 简介\n\nkafka是一个实时数据管道和流应用.特点:水平扩展,容错,极为迅速\n\n3个关键能力:\n\n1. 发布和订阅记录流\n2. 以一种容错和持久化方式来存储记录流\n3. 记录实时流\n\n4个核心APIs\n\n1. Producer API\n2. Consumer API\n3. Streams API\n4. Connector API\n\n[官网](http://kafka.apache.org/)\n\n[Kafka的界面](https://github.com/linkedin/kafka-monitor)\n\nhttps://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar","slug":"Kafka使用","published":1,"updated":"2018-12-24T12:06:30.097Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq5000mewuor7ssr84e","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>kafka是一个实时数据管道和流应用.特点:水平扩展,容错,极为迅速</p>\n<p>3个关键能力:</p>\n<ol>\n<li>发布和订阅记录流</li>\n<li>以一种容错和持久化方式来存储记录流</li>\n<li>记录实时流</li>\n</ol>\n<p>4个核心APIs</p>\n<ol>\n<li>Producer API</li>\n<li>Consumer API</li>\n<li>Streams API</li>\n<li>Connector API</li>\n</ol>\n<p><a href=\"http://kafka.apache.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"https://github.com/linkedin/kafka-monitor\" target=\"_blank\" rel=\"noopener\">Kafka的界面</a></p>\n<p><a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>kafka是一个实时数据管道和流应用.特点:水平扩展,容错,极为迅速</p>\n<p>3个关键能力:</p>\n<ol>\n<li>发布和订阅记录流</li>\n<li>以一种容错和持久化方式来存储记录流</li>\n<li>记录实时流</li>\n</ol>\n<p>4个核心APIs</p>\n<ol>\n<li>Producer API</li>\n<li>Consumer API</li>\n<li>Streams API</li>\n<li>Connector API</li>\n</ol>\n<p><a href=\"http://kafka.apache.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"https://github.com/linkedin/kafka-monitor\" target=\"_blank\" rel=\"noopener\">Kafka的界面</a></p>\n<p><a href=\"https://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar\" target=\"_blank\" rel=\"noopener\">https://github.com/quantifind/KafkaOffsetMonitor/releases/download/v0.2.0/KafkaOffsetMonitor-assembly-0.2.0.jar</a></p>\n"},{"title":"Rapberry使用","reward":true,"date":"2018-12-26T05:45:33.000Z","description":null,"_content":"\n## 简介\n\n[主页](http://raspberrypi.github.io/)","source":"_posts/Rapberry使用.md","raw":"---\ntitle: Rapberry使用\nreward: true\ndate: 2018-12-26 13:45:33\ndescription:\ncategories:\ntags:\n- linux\n---\n\n## 简介\n\n[主页](http://raspberrypi.github.io/)","slug":"Rapberry使用","published":1,"updated":"2018-12-26T06:08:51.848Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq7000oewuozcxk096g","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"http://raspberrypi.github.io/\" target=\"_blank\" rel=\"noopener\">主页</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"http://raspberrypi.github.io/\" target=\"_blank\" rel=\"noopener\">主页</a></p>\n"},{"title":"Sphinx","reward":true,"date":"2018-11-11T01:47:55.000Z","description":null,"_content":"\n# Sphinx\n\n## 链接\n\n[官网](http://sphinxsearch.com/)\n\n## 历史\n\n## 安装\n\n```shell\n$apt-get install python3-sphinx\n$pip install -U sphinx\n```\n\n## 案例分析\n\n## 实例\n","source":"_posts/Sphinx.md","raw":"---\ntitle: Sphinx\nreward: true\ndate: 2018-11-11 09:47:55\ndescription:\ncategories:\ntags:\n- Sphinx\n---\n\n# Sphinx\n\n## 链接\n\n[官网](http://sphinxsearch.com/)\n\n## 历史\n\n## 安装\n\n```shell\n$apt-get install python3-sphinx\n$pip install -U sphinx\n```\n\n## 案例分析\n\n## 实例\n","slug":"Sphinx","published":1,"updated":"2018-11-11T02:18:19.801Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq7000pewuop1cjlb6y","content":"<h1 id=\"Sphinx\"><a href=\"#Sphinx\" class=\"headerlink\" title=\"Sphinx\"></a>Sphinx</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://sphinxsearch.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h2 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h2><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>apt-get install python3-sphinx</span><br><span class=\"line\"><span class=\"meta\">$</span>pip install -U sphinx</span><br></pre></td></tr></table></figure>\n<h2 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h2><h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Sphinx\"><a href=\"#Sphinx\" class=\"headerlink\" title=\"Sphinx\"></a>Sphinx</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://sphinxsearch.com/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h2 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h2><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>apt-get install python3-sphinx</span><br><span class=\"line\"><span class=\"meta\">$</span>pip install -U sphinx</span><br></pre></td></tr></table></figure>\n<h2 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h2><h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2>"},{"title":"Samba网络问题定位","reward":true,"date":"2018-12-25T12:34:43.000Z","description":null,"_content":"\n## 现象描述\n\nubuntu18.04在使用docker和docker-machine后出现了多个网卡,win10上的samba客户端连接不上.\n\n## 问题定位\n\n### 通讯流程跟踪\n\n#### win10客户端上的抓包\n\n![](C:\\Users\\29366\\Documents\\GIT\\huguanghui.github.io\\source\\_posts\\_Samba网络问题定位\\smbd01.png)\n\n分析:\n\n服务器返回Destination unreachable\n\n#### ubuntu服务器抓包\n\ntcpdump实时抓包分析,接收有打印.\n\n### 协议对比\n\n根据抓包分析,应该还没有到smb交互协议部分.\n\n### 结论\n\n通过对之前的操作进行分析,是安装了firewalld软件导致.卸载firewalld之后通讯流程就正常了.","source":"_posts/Samba网络问题定位.md","raw":"---\ntitle: Samba网络问题定位\nreward: true\ndate: 2018-12-25 20:34:43\ndescription:\ncategories:\ntags:\n  - bug\n---\n\n## 现象描述\n\nubuntu18.04在使用docker和docker-machine后出现了多个网卡,win10上的samba客户端连接不上.\n\n## 问题定位\n\n### 通讯流程跟踪\n\n#### win10客户端上的抓包\n\n![](C:\\Users\\29366\\Documents\\GIT\\huguanghui.github.io\\source\\_posts\\_Samba网络问题定位\\smbd01.png)\n\n分析:\n\n服务器返回Destination unreachable\n\n#### ubuntu服务器抓包\n\ntcpdump实时抓包分析,接收有打印.\n\n### 协议对比\n\n根据抓包分析,应该还没有到smb交互协议部分.\n\n### 结论\n\n通过对之前的操作进行分析,是安装了firewalld软件导致.卸载firewalld之后通讯流程就正常了.","slug":"Samba网络问题定位","published":1,"updated":"2018-12-25T14:50:15.117Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq9000sewuokkf1t05m","content":"<h2 id=\"现象描述\"><a href=\"#现象描述\" class=\"headerlink\" title=\"现象描述\"></a>现象描述</h2><p>ubuntu18.04在使用docker和docker-machine后出现了多个网卡,win10上的samba客户端连接不上.</p>\n<h2 id=\"问题定位\"><a href=\"#问题定位\" class=\"headerlink\" title=\"问题定位\"></a>问题定位</h2><h3 id=\"通讯流程跟踪\"><a href=\"#通讯流程跟踪\" class=\"headerlink\" title=\"通讯流程跟踪\"></a>通讯流程跟踪</h3><h4 id=\"win10客户端上的抓包\"><a href=\"#win10客户端上的抓包\" class=\"headerlink\" title=\"win10客户端上的抓包\"></a>win10客户端上的抓包</h4><p><img src=\"C:\\Users\\29366\\Documents\\GIT\\huguanghui.github.io\\source\\_posts\\_Samba网络问题定位\\smbd01.png\" alt=\"\"></p>\n<p>分析:</p>\n<p>服务器返回Destination unreachable</p>\n<h4 id=\"ubuntu服务器抓包\"><a href=\"#ubuntu服务器抓包\" class=\"headerlink\" title=\"ubuntu服务器抓包\"></a>ubuntu服务器抓包</h4><p>tcpdump实时抓包分析,接收有打印.</p>\n<h3 id=\"协议对比\"><a href=\"#协议对比\" class=\"headerlink\" title=\"协议对比\"></a>协议对比</h3><p>根据抓包分析,应该还没有到smb交互协议部分.</p>\n<h3 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h3><p>通过对之前的操作进行分析,是安装了firewalld软件导致.卸载firewalld之后通讯流程就正常了.</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"现象描述\"><a href=\"#现象描述\" class=\"headerlink\" title=\"现象描述\"></a>现象描述</h2><p>ubuntu18.04在使用docker和docker-machine后出现了多个网卡,win10上的samba客户端连接不上.</p>\n<h2 id=\"问题定位\"><a href=\"#问题定位\" class=\"headerlink\" title=\"问题定位\"></a>问题定位</h2><h3 id=\"通讯流程跟踪\"><a href=\"#通讯流程跟踪\" class=\"headerlink\" title=\"通讯流程跟踪\"></a>通讯流程跟踪</h3><h4 id=\"win10客户端上的抓包\"><a href=\"#win10客户端上的抓包\" class=\"headerlink\" title=\"win10客户端上的抓包\"></a>win10客户端上的抓包</h4><p><img src=\"C:\\Users\\29366\\Documents\\GIT\\huguanghui.github.io\\source\\_posts\\_Samba网络问题定位\\smbd01.png\" alt=\"\"></p>\n<p>分析:</p>\n<p>服务器返回Destination unreachable</p>\n<h4 id=\"ubuntu服务器抓包\"><a href=\"#ubuntu服务器抓包\" class=\"headerlink\" title=\"ubuntu服务器抓包\"></a>ubuntu服务器抓包</h4><p>tcpdump实时抓包分析,接收有打印.</p>\n<h3 id=\"协议对比\"><a href=\"#协议对比\" class=\"headerlink\" title=\"协议对比\"></a>协议对比</h3><p>根据抓包分析,应该还没有到smb交互协议部分.</p>\n<h3 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a>结论</h3><p>通过对之前的操作进行分析,是安装了firewalld软件导致.卸载firewalld之后通讯流程就正常了.</p>\n"},{"title":"TravisCI使用","reward":true,"date":"2018-12-24T03:37:33.000Z","description":null,"_content":"\n## 简介\n\nTravis CI是开源持续集成构建项目.可以直接使用github登陆.支持的语言nodejs,Go.\n\n[官网](https://travis-ci.org/)\n\n[阮一峰的Travis CI教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n\n\n\n## 配置文件\n\n### Go语言\n\n```yaml\nlanguage: go\n\ngo:\n  - \"1.10.x\"\n  - \"1.11.x\"\nservices:\n  - redis-server\n  - mysql\n  - postgresql\n  - memcached\nenv:\n  - ORM_DRIVER=sqlite3   ORM_SOURCE=$TRAVIS_BUILD_DIR/orm_test.db\n  - ORM_DRIVER=postgres ORM_SOURCE=\"user=postgres dbname=orm_test sslmode=disable\"\nbefore_install:\n - git clone git://github.com/ideawu/ssdb.git\n - cd ssdb\n - make\n - cd ..\ninstall:\n  - go get github.com/lib/pq\n  - go get github.com/go-sql-driver/mysql\n  - go get github.com/mattn/go-sqlite3\n  - go get github.com/bradfitz/gomemcache/memcache\n  - go get github.com/gomodule/redigo/redis\n  - go get github.com/beego/x2j\n  - go get github.com/couchbase/go-couchbase\n  - go get github.com/beego/goyaml2\n  - go get gopkg.in/yaml.v2\n  - go get github.com/belogik/goes\n  - go get github.com/siddontang/ledisdb/config\n  - go get github.com/siddontang/ledisdb/ledis\n  - go get github.com/ssdb/gossdb/ssdb\n  - go get github.com/cloudflare/golz4\n  - go get github.com/gogo/protobuf/proto\n  - go get github.com/Knetic/govaluate\n  - go get github.com/casbin/casbin\n  - go get github.com/elazarl/go-bindata-assetfs\n  - go get -u honnef.co/go/tools/cmd/gosimple\n  - go get -u github.com/mdempsky/unconvert\n  - go get -u github.com/gordonklaus/ineffassign\n  - go get -u github.com/golang/lint/golint\n  - go get -u github.com/go-redis/redis\nbefore_script:\n  - psql --version\n  - sh -c \"if [ '$ORM_DRIVER' = 'postgres' ]; then psql -c 'create database orm_test;' -U postgres; fi\"\n  - sh -c \"if [ '$ORM_DRIVER' = 'mysql' ]; then mysql -u root -e 'create database orm_test;'; fi\"\n  - sh -c \"if [ '$ORM_DRIVER' = 'sqlite' ]; then touch $TRAVIS_BUILD_DIR/orm_test.db; fi\"\n  - sh -c \"go get github.com/golang/lint/golint; golint ./...;\"\n  - sh -c \"go list ./... | grep -v vendor | xargs go vet -v\"\n  - mkdir -p res/var\n  - ./ssdb/ssdb-server ./ssdb/ssdb.conf -d\nafter_script:\n  - killall -w ssdb-server\n  - rm -rf ./res/var/*\nscript:\n  - go test -v ./...\n  - gosimple -ignore \"$(cat .gosimpleignore)\" $(go list ./... | grep -v /vendor/)\n  - unconvert $(go list ./... | grep -v /vendor/)\n  - ineffassign .\n  - find . ! \\( -path './vendor' -prune \\) -type f -name '*.go' -print0 | xargs -0 gofmt -l -s\n  - golint ./...\naddons:\n  postgresql: \"9.6\"\n```\n\n","source":"_posts/TravisCI使用.md","raw":"---\ntitle: TravisCI使用\nreward: true\ndate: 2018-12-24 11:37:33\ndescription:\ncategories:\ntags:\t\n- 项目管理\n---\n\n## 简介\n\nTravis CI是开源持续集成构建项目.可以直接使用github登陆.支持的语言nodejs,Go.\n\n[官网](https://travis-ci.org/)\n\n[阮一峰的Travis CI教程](http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html)\n\n\n\n## 配置文件\n\n### Go语言\n\n```yaml\nlanguage: go\n\ngo:\n  - \"1.10.x\"\n  - \"1.11.x\"\nservices:\n  - redis-server\n  - mysql\n  - postgresql\n  - memcached\nenv:\n  - ORM_DRIVER=sqlite3   ORM_SOURCE=$TRAVIS_BUILD_DIR/orm_test.db\n  - ORM_DRIVER=postgres ORM_SOURCE=\"user=postgres dbname=orm_test sslmode=disable\"\nbefore_install:\n - git clone git://github.com/ideawu/ssdb.git\n - cd ssdb\n - make\n - cd ..\ninstall:\n  - go get github.com/lib/pq\n  - go get github.com/go-sql-driver/mysql\n  - go get github.com/mattn/go-sqlite3\n  - go get github.com/bradfitz/gomemcache/memcache\n  - go get github.com/gomodule/redigo/redis\n  - go get github.com/beego/x2j\n  - go get github.com/couchbase/go-couchbase\n  - go get github.com/beego/goyaml2\n  - go get gopkg.in/yaml.v2\n  - go get github.com/belogik/goes\n  - go get github.com/siddontang/ledisdb/config\n  - go get github.com/siddontang/ledisdb/ledis\n  - go get github.com/ssdb/gossdb/ssdb\n  - go get github.com/cloudflare/golz4\n  - go get github.com/gogo/protobuf/proto\n  - go get github.com/Knetic/govaluate\n  - go get github.com/casbin/casbin\n  - go get github.com/elazarl/go-bindata-assetfs\n  - go get -u honnef.co/go/tools/cmd/gosimple\n  - go get -u github.com/mdempsky/unconvert\n  - go get -u github.com/gordonklaus/ineffassign\n  - go get -u github.com/golang/lint/golint\n  - go get -u github.com/go-redis/redis\nbefore_script:\n  - psql --version\n  - sh -c \"if [ '$ORM_DRIVER' = 'postgres' ]; then psql -c 'create database orm_test;' -U postgres; fi\"\n  - sh -c \"if [ '$ORM_DRIVER' = 'mysql' ]; then mysql -u root -e 'create database orm_test;'; fi\"\n  - sh -c \"if [ '$ORM_DRIVER' = 'sqlite' ]; then touch $TRAVIS_BUILD_DIR/orm_test.db; fi\"\n  - sh -c \"go get github.com/golang/lint/golint; golint ./...;\"\n  - sh -c \"go list ./... | grep -v vendor | xargs go vet -v\"\n  - mkdir -p res/var\n  - ./ssdb/ssdb-server ./ssdb/ssdb.conf -d\nafter_script:\n  - killall -w ssdb-server\n  - rm -rf ./res/var/*\nscript:\n  - go test -v ./...\n  - gosimple -ignore \"$(cat .gosimpleignore)\" $(go list ./... | grep -v /vendor/)\n  - unconvert $(go list ./... | grep -v /vendor/)\n  - ineffassign .\n  - find . ! \\( -path './vendor' -prune \\) -type f -name '*.go' -print0 | xargs -0 gofmt -l -s\n  - golint ./...\naddons:\n  postgresql: \"9.6\"\n```\n\n","slug":"TravisCI使用","published":1,"updated":"2018-12-24T05:58:10.246Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvq9000tewuog04fnyu0","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Travis CI是开源持续集成构建项目.可以直接使用github登陆.支持的语言nodejs,Go.</p>\n<p><a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\" rel=\"noopener\">阮一峰的Travis CI教程</a></p>\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><h3 id=\"Go语言\"><a href=\"#Go语言\" class=\"headerlink\" title=\"Go语言\"></a>Go语言</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">go</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">go:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">\"1.10.x\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">\"1.11.x\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">redis-server</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">postgresql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">memcached</span></span><br><span class=\"line\"><span class=\"attr\">env:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ORM_DRIVER=sqlite3</span>   <span class=\"string\">ORM_SOURCE=$TRAVIS_BUILD_DIR/orm_test.db</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ORM_DRIVER=postgres</span> <span class=\"string\">ORM_SOURCE=\"user=postgres</span> <span class=\"string\">dbname=orm_test</span> <span class=\"string\">sslmode=disable\"</span></span><br><span class=\"line\"><span class=\"attr\">before_install:</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">git</span> <span class=\"string\">clone</span> <span class=\"attr\">git://github.com/ideawu/ssdb.git</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">cd</span> <span class=\"string\">ssdb</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">make</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">cd</span> <span class=\"string\">..</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/lib/pq</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/go-sql-driver/mysql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/mattn/go-sqlite3</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/bradfitz/gomemcache/memcache</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/gomodule/redigo/redis</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/beego/x2j</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/couchbase/go-couchbase</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/beego/goyaml2</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">gopkg.in/yaml.v2</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/belogik/goes</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/siddontang/ledisdb/config</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/siddontang/ledisdb/ledis</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/ssdb/gossdb/ssdb</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/cloudflare/golz4</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/gogo/protobuf/proto</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/Knetic/govaluate</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/casbin/casbin</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/elazarl/go-bindata-assetfs</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">honnef.co/go/tools/cmd/gosimple</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/mdempsky/unconvert</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/gordonklaus/ineffassign</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/golang/lint/golint</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/go-redis/redis</span></span><br><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">psql</span> <span class=\"bullet\">--version</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'postgres' ]; then psql -c 'create database orm_test;' -U postgres; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'mysql' ]; then mysql -u root -e 'create database orm_test;'; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'sqlite' ]; then touch $TRAVIS_BUILD_DIR/orm_test.db; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"go get github.com/golang/lint/golint; golint ./...;\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"go list ./... | grep -v vendor | xargs go vet -v\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mkdir</span> <span class=\"bullet\">-p</span> <span class=\"string\">res/var</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">./ssdb/ssdb-server</span> <span class=\"string\">./ssdb/ssdb.conf</span> <span class=\"bullet\">-d</span></span><br><span class=\"line\"><span class=\"attr\">after_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">killall</span> <span class=\"bullet\">-w</span> <span class=\"string\">ssdb-server</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">rm</span> <span class=\"bullet\">-rf</span> <span class=\"string\">./res/var/*</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">test</span> <span class=\"bullet\">-v</span> <span class=\"string\">./...</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">gosimple</span> <span class=\"bullet\">-ignore</span> <span class=\"string\">\"$(cat .gosimpleignore)\"</span> <span class=\"string\">$(go</span> <span class=\"string\">list</span> <span class=\"string\">./...</span> <span class=\"string\">| grep -v /vendor/)</span></span><br><span class=\"line\"><span class=\"string\">  - unconvert $(go list ./... | grep -v /vendor/)</span></span><br><span class=\"line\"><span class=\"string\">  - ineffassign .</span></span><br><span class=\"line\"><span class=\"string\">  - find . ! \\( -path './vendor' -prune \\) -type f -name '*.go' -print0 | xargs -0 gofmt -l -s</span></span><br><span class=\"line\"><span class=\"string\">  - golint ./...</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">addons:</span></span><br><span class=\"line\"><span class=\"attr\">  postgresql:</span> <span class=\"string\">\"9.6\"</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Travis CI是开源持续集成构建项目.可以直接使用github登陆.支持的语言nodejs,Go.</p>\n<p><a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<p><a href=\"http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html\" target=\"_blank\" rel=\"noopener\">阮一峰的Travis CI教程</a></p>\n<h2 id=\"配置文件\"><a href=\"#配置文件\" class=\"headerlink\" title=\"配置文件\"></a>配置文件</h2><h3 id=\"Go语言\"><a href=\"#Go语言\" class=\"headerlink\" title=\"Go语言\"></a>Go语言</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">go</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">go:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">\"1.10.x\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">\"1.11.x\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">redis-server</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mysql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">postgresql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">memcached</span></span><br><span class=\"line\"><span class=\"attr\">env:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ORM_DRIVER=sqlite3</span>   <span class=\"string\">ORM_SOURCE=$TRAVIS_BUILD_DIR/orm_test.db</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">ORM_DRIVER=postgres</span> <span class=\"string\">ORM_SOURCE=\"user=postgres</span> <span class=\"string\">dbname=orm_test</span> <span class=\"string\">sslmode=disable\"</span></span><br><span class=\"line\"><span class=\"attr\">before_install:</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">git</span> <span class=\"string\">clone</span> <span class=\"attr\">git://github.com/ideawu/ssdb.git</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">cd</span> <span class=\"string\">ssdb</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">make</span></span><br><span class=\"line\"><span class=\"bullet\"> -</span> <span class=\"string\">cd</span> <span class=\"string\">..</span></span><br><span class=\"line\"><span class=\"attr\">install:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/lib/pq</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/go-sql-driver/mysql</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/mattn/go-sqlite3</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/bradfitz/gomemcache/memcache</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/gomodule/redigo/redis</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/beego/x2j</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/couchbase/go-couchbase</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/beego/goyaml2</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">gopkg.in/yaml.v2</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/belogik/goes</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/siddontang/ledisdb/config</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/siddontang/ledisdb/ledis</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/ssdb/gossdb/ssdb</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/cloudflare/golz4</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/gogo/protobuf/proto</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/Knetic/govaluate</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/casbin/casbin</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"string\">github.com/elazarl/go-bindata-assetfs</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">honnef.co/go/tools/cmd/gosimple</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/mdempsky/unconvert</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/gordonklaus/ineffassign</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/golang/lint/golint</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">get</span> <span class=\"bullet\">-u</span> <span class=\"string\">github.com/go-redis/redis</span></span><br><span class=\"line\"><span class=\"attr\">before_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">psql</span> <span class=\"bullet\">--version</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'postgres' ]; then psql -c 'create database orm_test;' -U postgres; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'mysql' ]; then mysql -u root -e 'create database orm_test;'; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"if [ '$ORM_DRIVER' = 'sqlite' ]; then touch $TRAVIS_BUILD_DIR/orm_test.db; fi\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"go get github.com/golang/lint/golint; golint ./...;\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">sh</span> <span class=\"bullet\">-c</span> <span class=\"string\">\"go list ./... | grep -v vendor | xargs go vet -v\"</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">mkdir</span> <span class=\"bullet\">-p</span> <span class=\"string\">res/var</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">./ssdb/ssdb-server</span> <span class=\"string\">./ssdb/ssdb.conf</span> <span class=\"bullet\">-d</span></span><br><span class=\"line\"><span class=\"attr\">after_script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">killall</span> <span class=\"bullet\">-w</span> <span class=\"string\">ssdb-server</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">rm</span> <span class=\"bullet\">-rf</span> <span class=\"string\">./res/var/*</span></span><br><span class=\"line\"><span class=\"attr\">script:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">go</span> <span class=\"string\">test</span> <span class=\"bullet\">-v</span> <span class=\"string\">./...</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">gosimple</span> <span class=\"bullet\">-ignore</span> <span class=\"string\">\"$(cat .gosimpleignore)\"</span> <span class=\"string\">$(go</span> <span class=\"string\">list</span> <span class=\"string\">./...</span> <span class=\"string\">| grep -v /vendor/)</span></span><br><span class=\"line\"><span class=\"string\">  - unconvert $(go list ./... | grep -v /vendor/)</span></span><br><span class=\"line\"><span class=\"string\">  - ineffassign .</span></span><br><span class=\"line\"><span class=\"string\">  - find . ! \\( -path './vendor' -prune \\) -type f -name '*.go' -print0 | xargs -0 gofmt -l -s</span></span><br><span class=\"line\"><span class=\"string\">  - golint ./...</span></span><br><span class=\"line\"><span class=\"string\"></span><span class=\"attr\">addons:</span></span><br><span class=\"line\"><span class=\"attr\">  postgresql:</span> <span class=\"string\">\"9.6\"</span></span><br></pre></td></tr></table></figure>\n"},{"title":"UML使用","reward":true,"date":"2018-11-25T04:59:41.000Z","description":null,"_content":"\n# UML使用\n\n---\n\n[TOC]\n\n## 链接\n\n[StarUML的逆向思维](https://blog.csdn.net/qq_20480611/article/details/51287038)\n\n[starUML图类划分](https://blog.csdn.net/xuepan1994/article/details/51482956)\n\n[StarUML](http://staruml.io/)\n\n[图分类](https://www.uml-diagrams.org/class-diagrams-overview.html)\n\n---\n\n## 软件工程\n\n开发前先做好详细设计,再按照详细设计进行开发,就是正向开发\n\n先完成代码开发,再补充文档是逆向思维\n\n\n\n## 使用样例\n\n### 为一个类添加一个构造和析构方法\n\n构造函数之前要加上<<create>>，在析构函数之前要加上<<destory>>，或者使用上图属性对话框中的Steorotype添加<<create>>和<<destroy>>\n\n## Live555的源码逆向导入\n\n","source":"_posts/UML使用.md","raw":"---\ntitle: UML使用\nreward: true\ndate: 2018-11-25 12:59:41\ndescription:\ncategories:\n- 软件工程\ntags:\n- UML\n---\n\n# UML使用\n\n---\n\n[TOC]\n\n## 链接\n\n[StarUML的逆向思维](https://blog.csdn.net/qq_20480611/article/details/51287038)\n\n[starUML图类划分](https://blog.csdn.net/xuepan1994/article/details/51482956)\n\n[StarUML](http://staruml.io/)\n\n[图分类](https://www.uml-diagrams.org/class-diagrams-overview.html)\n\n---\n\n## 软件工程\n\n开发前先做好详细设计,再按照详细设计进行开发,就是正向开发\n\n先完成代码开发,再补充文档是逆向思维\n\n\n\n## 使用样例\n\n### 为一个类添加一个构造和析构方法\n\n构造函数之前要加上<<create>>，在析构函数之前要加上<<destory>>，或者使用上图属性对话框中的Steorotype添加<<create>>和<<destroy>>\n\n## Live555的源码逆向导入\n\n","slug":"UML使用","published":1,"updated":"2018-11-25T10:12:08.009Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqa000vewuoe6uz06u8","content":"<h1 id=\"UML使用\"><a href=\"#UML使用\" class=\"headerlink\" title=\"UML使用\"></a>UML使用</h1><hr>\n<p>[TOC]</p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://blog.csdn.net/qq_20480611/article/details/51287038\" target=\"_blank\" rel=\"noopener\">StarUML的逆向思维</a></p>\n<p><a href=\"https://blog.csdn.net/xuepan1994/article/details/51482956\" target=\"_blank\" rel=\"noopener\">starUML图类划分</a></p>\n<p><a href=\"http://staruml.io/\" target=\"_blank\" rel=\"noopener\">StarUML</a></p>\n<p><a href=\"https://www.uml-diagrams.org/class-diagrams-overview.html\" target=\"_blank\" rel=\"noopener\">图分类</a></p>\n<hr>\n<h2 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h2><p>开发前先做好详细设计,再按照详细设计进行开发,就是正向开发</p>\n<p>先完成代码开发,再补充文档是逆向思维</p>\n<h2 id=\"使用样例\"><a href=\"#使用样例\" class=\"headerlink\" title=\"使用样例\"></a>使用样例</h2><h3 id=\"为一个类添加一个构造和析构方法\"><a href=\"#为一个类添加一个构造和析构方法\" class=\"headerlink\" title=\"为一个类添加一个构造和析构方法\"></a>为一个类添加一个构造和析构方法</h3><p>构造函数之前要加上&lt;<create>&gt;，在析构函数之前要加上&lt;<destory>&gt;，或者使用上图属性对话框中的Steorotype添加&lt;<create>&gt;和&lt;<destroy>&gt;</destroy></create></destory></create></p>\n<h2 id=\"Live555的源码逆向导入\"><a href=\"#Live555的源码逆向导入\" class=\"headerlink\" title=\"Live555的源码逆向导入\"></a>Live555的源码逆向导入</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"UML使用\"><a href=\"#UML使用\" class=\"headerlink\" title=\"UML使用\"></a>UML使用</h1><hr>\n<p>[TOC]</p>\n<h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://blog.csdn.net/qq_20480611/article/details/51287038\" target=\"_blank\" rel=\"noopener\">StarUML的逆向思维</a></p>\n<p><a href=\"https://blog.csdn.net/xuepan1994/article/details/51482956\" target=\"_blank\" rel=\"noopener\">starUML图类划分</a></p>\n<p><a href=\"http://staruml.io/\" target=\"_blank\" rel=\"noopener\">StarUML</a></p>\n<p><a href=\"https://www.uml-diagrams.org/class-diagrams-overview.html\" target=\"_blank\" rel=\"noopener\">图分类</a></p>\n<hr>\n<h2 id=\"软件工程\"><a href=\"#软件工程\" class=\"headerlink\" title=\"软件工程\"></a>软件工程</h2><p>开发前先做好详细设计,再按照详细设计进行开发,就是正向开发</p>\n<p>先完成代码开发,再补充文档是逆向思维</p>\n<h2 id=\"使用样例\"><a href=\"#使用样例\" class=\"headerlink\" title=\"使用样例\"></a>使用样例</h2><h3 id=\"为一个类添加一个构造和析构方法\"><a href=\"#为一个类添加一个构造和析构方法\" class=\"headerlink\" title=\"为一个类添加一个构造和析构方法\"></a>为一个类添加一个构造和析构方法</h3><p>构造函数之前要加上&lt;<create>&gt;，在析构函数之前要加上&lt;<destory>&gt;，或者使用上图属性对话框中的Steorotype添加&lt;<create>&gt;和&lt;<destroy>&gt;</destroy></create></destory></create></p>\n<h2 id=\"Live555的源码逆向导入\"><a href=\"#Live555的源码逆向导入\" class=\"headerlink\" title=\"Live555的源码逆向导入\"></a>Live555的源码逆向导入</h2>"},{"title":"acl开源库的使用","date":"2018-10-14T14:07:15.000Z","description":null,"reward":true,"_content":"\n# 来历\n\n# 使用\n\n## queue_file\n\n队列文件\n\n属性:\nm_fp                文件流对象\nm_filePath          相对于根目录的全部路径\nm_home              根目录路径\nm_queueName         队列名称\nm_queueSub          队列下的子目录\nm_partName          队列文件名\nm_extName           扩展名\nm_locker            锁\nm_bLocked           锁否\nm_bLockerOpened     文件锁开否\nnwriten_            写入文件尺寸\n\n\n# 优缺点分析","source":"_posts/acl开源库的使用.md","raw":"---\ntitle: acl开源库的使用\ndate: 2018-10-14 22:07:15\ndescription:\ncategories:\n- 开源代码\ntags:\n- acl\nreward: true\n---\n\n# 来历\n\n# 使用\n\n## queue_file\n\n队列文件\n\n属性:\nm_fp                文件流对象\nm_filePath          相对于根目录的全部路径\nm_home              根目录路径\nm_queueName         队列名称\nm_queueSub          队列下的子目录\nm_partName          队列文件名\nm_extName           扩展名\nm_locker            锁\nm_bLocked           锁否\nm_bLockerOpened     文件锁开否\nnwriten_            写入文件尺寸\n\n\n# 优缺点分析","slug":"acl开源库的使用","published":1,"updated":"2018-11-03T13:32:44.567Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqb000xewuo7g9pzesr","content":"<h1 id=\"来历\"><a href=\"#来历\" class=\"headerlink\" title=\"来历\"></a>来历</h1><h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"queue-file\"><a href=\"#queue-file\" class=\"headerlink\" title=\"queue_file\"></a>queue_file</h2><p>队列文件</p>\n<p>属性:<br>m_fp                文件流对象<br>m_filePath          相对于根目录的全部路径<br>m_home              根目录路径<br>m_queueName         队列名称<br>m_queueSub          队列下的子目录<br>m_partName          队列文件名<br>m_extName           扩展名<br>m_locker            锁<br>m_bLocked           锁否<br>m_bLockerOpened     文件锁开否<br>nwriten_            写入文件尺寸</p>\n<h1 id=\"优缺点分析\"><a href=\"#优缺点分析\" class=\"headerlink\" title=\"优缺点分析\"></a>优缺点分析</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"来历\"><a href=\"#来历\" class=\"headerlink\" title=\"来历\"></a>来历</h1><h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><h2 id=\"queue-file\"><a href=\"#queue-file\" class=\"headerlink\" title=\"queue_file\"></a>queue_file</h2><p>队列文件</p>\n<p>属性:<br>m_fp                文件流对象<br>m_filePath          相对于根目录的全部路径<br>m_home              根目录路径<br>m_queueName         队列名称<br>m_queueSub          队列下的子目录<br>m_partName          队列文件名<br>m_extName           扩展名<br>m_locker            锁<br>m_bLocked           锁否<br>m_bLockerOpened     文件锁开否<br>nwriten_            写入文件尺寸</p>\n<h1 id=\"优缺点分析\"><a href=\"#优缺点分析\" class=\"headerlink\" title=\"优缺点分析\"></a>优缺点分析</h1>"},{"title":"VSCode更新记录","reward":true,"date":"2018-11-19T13:33:40.000Z","description":null,"_content":"\n# VSCode\n\n## VSCode使用\n\n### cmd中文乱码\n\n暂时解决的办法:\n\nchcp 65001\n\n通过配置解决\n\n打开“文件”--“首选项”--“用户设置”，然后在setting.json中设置：\n\nterminal.integrated.shellArgs.windows\n\n```json\n{\n    \"editor.fontSize\": 18,\n    \"terminal.integrated.shellArgs.windows\": [\"/K chcp 65001 >nul\"],\n    \"terminal.integrated.fontFamily\": \"Lucida Console\",\n}\n```\n\n\n\n## VSCode更新日志\n\n### 10月版本\n\n1.29.1\n\n关键的亮点:\n1.多行搜索\n2.IntelliSense中的文件图标\n3.可折叠堆栈框架\n4.改进已加载脚本视图\n5.更新了扩展示例\n6.CI配方扩展\n7.预览列出所有扩展","source":"_posts/VSCode更新记录.md","raw":"---\ntitle: VSCode更新记录\nreward: true\ndate: 2018-11-19 21:33:40\ndescription:\ncategories:\ntags:\n- VSCode\n---\n\n# VSCode\n\n## VSCode使用\n\n### cmd中文乱码\n\n暂时解决的办法:\n\nchcp 65001\n\n通过配置解决\n\n打开“文件”--“首选项”--“用户设置”，然后在setting.json中设置：\n\nterminal.integrated.shellArgs.windows\n\n```json\n{\n    \"editor.fontSize\": 18,\n    \"terminal.integrated.shellArgs.windows\": [\"/K chcp 65001 >nul\"],\n    \"terminal.integrated.fontFamily\": \"Lucida Console\",\n}\n```\n\n\n\n## VSCode更新日志\n\n### 10月版本\n\n1.29.1\n\n关键的亮点:\n1.多行搜索\n2.IntelliSense中的文件图标\n3.可折叠堆栈框架\n4.改进已加载脚本视图\n5.更新了扩展示例\n6.CI配方扩展\n7.预览列出所有扩展","slug":"VSCode更新记录","published":1,"updated":"2019-01-20T07:12:06.915Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqc0010ewuoxhmy6xr2","content":"<h1 id=\"VSCode\"><a href=\"#VSCode\" class=\"headerlink\" title=\"VSCode\"></a>VSCode</h1><h2 id=\"VSCode使用\"><a href=\"#VSCode使用\" class=\"headerlink\" title=\"VSCode使用\"></a>VSCode使用</h2><h3 id=\"cmd中文乱码\"><a href=\"#cmd中文乱码\" class=\"headerlink\" title=\"cmd中文乱码\"></a>cmd中文乱码</h3><p>暂时解决的办法:</p>\n<p>chcp 65001</p>\n<p>通过配置解决</p>\n<p>打开“文件”–“首选项”–“用户设置”，然后在setting.json中设置：</p>\n<p>terminal.integrated.shellArgs.windows</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontSize\"</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.shellArgs.windows\"</span>: [<span class=\"string\">\"/K chcp 65001 &gt;nul\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.fontFamily\"</span>: <span class=\"string\">\"Lucida Console\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"VSCode更新日志\"><a href=\"#VSCode更新日志\" class=\"headerlink\" title=\"VSCode更新日志\"></a>VSCode更新日志</h2><h3 id=\"10月版本\"><a href=\"#10月版本\" class=\"headerlink\" title=\"10月版本\"></a>10月版本</h3><p>1.29.1</p>\n<p>关键的亮点:<br>1.多行搜索<br>2.IntelliSense中的文件图标<br>3.可折叠堆栈框架<br>4.改进已加载脚本视图<br>5.更新了扩展示例<br>6.CI配方扩展<br>7.预览列出所有扩展</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"VSCode\"><a href=\"#VSCode\" class=\"headerlink\" title=\"VSCode\"></a>VSCode</h1><h2 id=\"VSCode使用\"><a href=\"#VSCode使用\" class=\"headerlink\" title=\"VSCode使用\"></a>VSCode使用</h2><h3 id=\"cmd中文乱码\"><a href=\"#cmd中文乱码\" class=\"headerlink\" title=\"cmd中文乱码\"></a>cmd中文乱码</h3><p>暂时解决的办法:</p>\n<p>chcp 65001</p>\n<p>通过配置解决</p>\n<p>打开“文件”–“首选项”–“用户设置”，然后在setting.json中设置：</p>\n<p>terminal.integrated.shellArgs.windows</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"editor.fontSize\"</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.shellArgs.windows\"</span>: [<span class=\"string\">\"/K chcp 65001 &gt;nul\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"terminal.integrated.fontFamily\"</span>: <span class=\"string\">\"Lucida Console\"</span>,</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"VSCode更新日志\"><a href=\"#VSCode更新日志\" class=\"headerlink\" title=\"VSCode更新日志\"></a>VSCode更新日志</h2><h3 id=\"10月版本\"><a href=\"#10月版本\" class=\"headerlink\" title=\"10月版本\"></a>10月版本</h3><p>1.29.1</p>\n<p>关键的亮点:<br>1.多行搜索<br>2.IntelliSense中的文件图标<br>3.可折叠堆栈框架<br>4.改进已加载脚本视图<br>5.更新了扩展示例<br>6.CI配方扩展<br>7.预览列出所有扩展</p>\n"},{"title":"acl模块之singleton","reward":true,"date":"2018-10-15T14:40:50.000Z","description":null,"_content":"\n# acl模块之singleton\n\n## \n","source":"_posts/acl模块之singleton.md","raw":"---\ntitle: acl模块之singleton\nreward: true\ndate: 2018-10-15 22:40:50\ndescription:\ncategories:\ntags:\n- acl\n- singleton\n---\n\n# acl模块之singleton\n\n## \n","slug":"acl模块之singleton","published":1,"updated":"2018-11-03T13:32:44.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqd0012ewuo6kbdayws","content":"<h1 id=\"acl模块之singleton\"><a href=\"#acl模块之singleton\" class=\"headerlink\" title=\"acl模块之singleton\"></a>acl模块之singleton</h1><p>## </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"acl模块之singleton\"><a href=\"#acl模块之singleton\" class=\"headerlink\" title=\"acl模块之singleton\"></a>acl模块之singleton</h1><p>## </p>\n"},{"title":"docker入门","reward":true,"date":"2018-12-24T12:06:03.000Z","description":null,"_content":"\n## 简介\n\nDocker 是世界领先的软件容器平台。开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题。运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。\n\n[中文官网](http://www.docker-cn.com/)\n\n[DockerHub](https://hub.docker.com/)\n\n## 安装\n\n### Ubuntu上的安装\n```shell\n// 卸载旧版本\n$apt-get remove docker docker-engine docker.io\n// 使用存储库进行安装\n$ apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n// 添加Docker的官方GPG密钥\n$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\n// 添加Docker软件源\n$ sudo add-apt-repository \\\n    \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\\n    $(lsb_release -cs) \\\n    stable\"\n$sudo apt-get install docker-ce\n// 运行hello-world\n$docker run hello-world\n// 以非root用户身份运行docker\n$sudo groupadd docker\n$sudo usermod -aG docker $USER\n```\n\n## 使用\n\n[部署](https://juejin.im/post/5a4858235188257d6a7ee393)\n\n### 使用中国的官方镜像加速\n\n```shell\n// 守护进程传参\n$ docker --registry-mirror=https://registry.docker-cn.com daemon\n// 通过配置项来修改 /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n```\n\n### docker远程仓库的使用\n\n```shell\n$docker tag local-image:tagname new-repo:tagname\n$docker push new-repo:ragname\n```\n\n### 构建应用\n\n创建Dockerfile, app.py, requirements.txt\n\n```shell\n$docker build -t friendlyhello .\n```\n\n### 运行应用\n\n-d 后台运行\n\n-p 内外端口映射\n\n```shell\n$docker run -d -p 4000:80 friendlyhello\n```\n\n停止服务\n\n```shell\n$docker ps\n$docker stop ${CONTAINER ID}\n```\n\n### 服务\n\n```yaml\n# docker-compose.yml\nversion: \"3\"\nservices:\n  web:\n    # 将 username/repo:tag 替换为您的名称和镜像详细信息\n    image: username/repository:tag\n    deploy:\n      replicas: 5\n      resources:\n        limits:\n          cpus: \"0.1\"\n          memory:50M\n      restart_policy:\n        condition: on-failure\n    ports:\n      - \"80:80\"\n    networks:\n      - webnet\nnetworks:\n  webnet:\n```\n\n运行新的应用\n\n```shell\n$docker swarm init\n// 部署应用\n$docker stack deploy -c docker-compose.yml getstartedlab\n// 查看服务容器列表\n$docker stack ps getstartedlab\n// 修改docker-compose.yml参数再部署应用就是更新\n```\n\n清除应用\n\n```shell\n// 删除应用\n$docker stack rm getstartedlab\n// 清除swarm\n$docker swarm leave --force\n```\n\n### swarm集群\n\n利用Virtualbox来创建\n\n[VirtualBox安装](https://www.virtualbox.org/wiki/Downloads)\n\n```shell\n$wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -\n```\n\n[docker-machine安装](https://www.cnblogs.com/sparkdev/p/7044950.html)\n\n```shell\nhttps://github.com/docker/machine/releases/\n```\n\n```shell\n// 创建一对VM\ndocker-machine create --driver virtualbox myvm1\ndocker-machine create --driver virtualbox myvm2\n```\n\nmyvm1发送命令\n\n```shell\n$docker-machine ssh myvm1 \"docker swarm init\"\n// --advertise-addr错误的解决\n$docker-machine ssh myvm1 \"docker swarm init --advertise-addr 192.168.99.100:2377\"\n```\n\n### 技术栈\n\n```yaml\nversion: \"3\"\nservices:\n  web:\n    # 将 username/repo:tag 替换为您的名称和镜像详细信息\n    image: huguanghui/helltest:latest\n    deploy:\n      replicas: 5\n      resources:\n        limits:\n          cpus: \"0.1\"\n          memory: 50M\n      restart_policy:\n        condition: on-failure\n    ports:\n      - \"80:80\"\n    networks:\n      - webnet\n  visualizer:\n    image: dockersamples/visualizer:stable\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n    networks:\n      - webnet\nnetworks:\n  webnet:\n```\n\n","source":"_posts/docker入门.md","raw":"---\ntitle: docker入门\nreward: true\ndate: 2018-12-24 20:06:03\ndescription:\ncategories:\ntags:\n- 容器\n---\n\n## 简介\n\nDocker 是世界领先的软件容器平台。开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题。运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。\n\n[中文官网](http://www.docker-cn.com/)\n\n[DockerHub](https://hub.docker.com/)\n\n## 安装\n\n### Ubuntu上的安装\n```shell\n// 卸载旧版本\n$apt-get remove docker docker-engine docker.io\n// 使用存储库进行安装\n$ apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    software-properties-common\n// 添加Docker的官方GPG密钥\n$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -\n// 添加Docker软件源\n$ sudo add-apt-repository \\\n    \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\\n    $(lsb_release -cs) \\\n    stable\"\n$sudo apt-get install docker-ce\n// 运行hello-world\n$docker run hello-world\n// 以非root用户身份运行docker\n$sudo groupadd docker\n$sudo usermod -aG docker $USER\n```\n\n## 使用\n\n[部署](https://juejin.im/post/5a4858235188257d6a7ee393)\n\n### 使用中国的官方镜像加速\n\n```shell\n// 守护进程传参\n$ docker --registry-mirror=https://registry.docker-cn.com daemon\n// 通过配置项来修改 /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]\n}\n```\n\n### docker远程仓库的使用\n\n```shell\n$docker tag local-image:tagname new-repo:tagname\n$docker push new-repo:ragname\n```\n\n### 构建应用\n\n创建Dockerfile, app.py, requirements.txt\n\n```shell\n$docker build -t friendlyhello .\n```\n\n### 运行应用\n\n-d 后台运行\n\n-p 内外端口映射\n\n```shell\n$docker run -d -p 4000:80 friendlyhello\n```\n\n停止服务\n\n```shell\n$docker ps\n$docker stop ${CONTAINER ID}\n```\n\n### 服务\n\n```yaml\n# docker-compose.yml\nversion: \"3\"\nservices:\n  web:\n    # 将 username/repo:tag 替换为您的名称和镜像详细信息\n    image: username/repository:tag\n    deploy:\n      replicas: 5\n      resources:\n        limits:\n          cpus: \"0.1\"\n          memory:50M\n      restart_policy:\n        condition: on-failure\n    ports:\n      - \"80:80\"\n    networks:\n      - webnet\nnetworks:\n  webnet:\n```\n\n运行新的应用\n\n```shell\n$docker swarm init\n// 部署应用\n$docker stack deploy -c docker-compose.yml getstartedlab\n// 查看服务容器列表\n$docker stack ps getstartedlab\n// 修改docker-compose.yml参数再部署应用就是更新\n```\n\n清除应用\n\n```shell\n// 删除应用\n$docker stack rm getstartedlab\n// 清除swarm\n$docker swarm leave --force\n```\n\n### swarm集群\n\n利用Virtualbox来创建\n\n[VirtualBox安装](https://www.virtualbox.org/wiki/Downloads)\n\n```shell\n$wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -\n```\n\n[docker-machine安装](https://www.cnblogs.com/sparkdev/p/7044950.html)\n\n```shell\nhttps://github.com/docker/machine/releases/\n```\n\n```shell\n// 创建一对VM\ndocker-machine create --driver virtualbox myvm1\ndocker-machine create --driver virtualbox myvm2\n```\n\nmyvm1发送命令\n\n```shell\n$docker-machine ssh myvm1 \"docker swarm init\"\n// --advertise-addr错误的解决\n$docker-machine ssh myvm1 \"docker swarm init --advertise-addr 192.168.99.100:2377\"\n```\n\n### 技术栈\n\n```yaml\nversion: \"3\"\nservices:\n  web:\n    # 将 username/repo:tag 替换为您的名称和镜像详细信息\n    image: huguanghui/helltest:latest\n    deploy:\n      replicas: 5\n      resources:\n        limits:\n          cpus: \"0.1\"\n          memory: 50M\n      restart_policy:\n        condition: on-failure\n    ports:\n      - \"80:80\"\n    networks:\n      - webnet\n  visualizer:\n    image: dockersamples/visualizer:stable\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - \"/var/run/docker.sock:/var/run/docker.sock\"\n    deploy:\n      placement:\n        constraints: [node.role == manager]\n    networks:\n      - webnet\nnetworks:\n  webnet:\n```\n\n","slug":"docker入门","published":1,"updated":"2018-12-26T03:32:27.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqe0014ewuooheuyeo9","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Docker 是世界领先的软件容器平台。开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题。运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。</p>\n<p><a href=\"http://www.docker-cn.com/\" target=\"_blank\" rel=\"noopener\">中文官网</a></p>\n<p><a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"noopener\">DockerHub</a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"Ubuntu上的安装\"><a href=\"#Ubuntu上的安装\" class=\"headerlink\" title=\"Ubuntu上的安装\"></a>Ubuntu上的安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 卸载旧版本</span><br><span class=\"line\"><span class=\"meta\">$</span>apt-get remove docker docker-engine docker.io</span><br><span class=\"line\">// 使用存储库进行安装</span><br><span class=\"line\"><span class=\"meta\">$</span> apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    software-properties-common</span><br><span class=\"line\">// 添加Docker的官方GPG密钥</span><br><span class=\"line\"><span class=\"meta\">$</span> curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\">// 添加Docker软件源</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo add-apt-repository \\</span><br><span class=\"line\">    \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\</span><br><span class=\"line\">    $(lsb_release -cs) \\</span><br><span class=\"line\">    stable\"</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo apt-get install docker-ce</span><br><span class=\"line\">// 运行hello-world</span><br><span class=\"line\"><span class=\"meta\">$</span>docker run hello-world</span><br><span class=\"line\">// 以非root用户身份运行docker</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo groupadd docker</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p><a href=\"https://juejin.im/post/5a4858235188257d6a7ee393\" target=\"_blank\" rel=\"noopener\">部署</a></p>\n<h3 id=\"使用中国的官方镜像加速\"><a href=\"#使用中国的官方镜像加速\" class=\"headerlink\" title=\"使用中国的官方镜像加速\"></a>使用中国的官方镜像加速</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 守护进程传参</span><br><span class=\"line\"><span class=\"meta\">$</span> docker --registry-mirror=https://registry.docker-cn.com daemon</span><br><span class=\"line\">// 通过配置项来修改 /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker远程仓库的使用\"><a href=\"#docker远程仓库的使用\" class=\"headerlink\" title=\"docker远程仓库的使用\"></a>docker远程仓库的使用</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker tag local-image:tagname new-repo:tagname</span><br><span class=\"line\"><span class=\"meta\">$</span>docker push new-repo:ragname</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建应用\"><a href=\"#构建应用\" class=\"headerlink\" title=\"构建应用\"></a>构建应用</h3><p>创建Dockerfile, app.py, requirements.txt</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker build -t friendlyhello .</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行应用\"><a href=\"#运行应用\" class=\"headerlink\" title=\"运行应用\"></a>运行应用</h3><p>-d 后台运行</p>\n<p>-p 内外端口映射</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker run -d -p 4000:80 friendlyhello</span><br></pre></td></tr></table></figure>\n<p>停止服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker ps</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stop $&#123;CONTAINER ID&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker-compose.yml</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  web:</span></span><br><span class=\"line\">    <span class=\"comment\"># 将 username/repo:tag 替换为您的名称和镜像详细信息</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">username/repository:tag</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      replicas:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        limits:</span></span><br><span class=\"line\"><span class=\"attr\">          cpus:</span> <span class=\"string\">\"0.1\"</span></span><br><span class=\"line\"><span class=\"attr\">          memory:</span><span class=\"number\">50</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">      restart_policy:</span></span><br><span class=\"line\"><span class=\"attr\">        condition:</span> <span class=\"string\">on-failure</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"80:80\"</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\"><span class=\"attr\">  webnet:</span></span><br></pre></td></tr></table></figure>\n<p>运行新的应用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker swarm init</span><br><span class=\"line\">// 部署应用</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack deploy -c docker-compose.yml getstartedlab</span><br><span class=\"line\">// 查看服务容器列表</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack ps getstartedlab</span><br><span class=\"line\">// 修改docker-compose.yml参数再部署应用就是更新</span><br></pre></td></tr></table></figure>\n<p>清除应用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 删除应用</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack rm getstartedlab</span><br><span class=\"line\">// 清除swarm</span><br><span class=\"line\"><span class=\"meta\">$</span>docker swarm leave --force</span><br></pre></td></tr></table></figure>\n<h3 id=\"swarm集群\"><a href=\"#swarm集群\" class=\"headerlink\" title=\"swarm集群\"></a>swarm集群</h3><p>利用Virtualbox来创建</p>\n<p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">VirtualBox安装</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.cnblogs.com/sparkdev/p/7044950.html\" target=\"_blank\" rel=\"noopener\">docker-machine安装</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/docker/machine/releases/</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 创建一对VM</span><br><span class=\"line\">docker-machine create --driver virtualbox myvm1</span><br><span class=\"line\">docker-machine create --driver virtualbox myvm2</span><br></pre></td></tr></table></figure>\n<p>myvm1发送命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker-machine ssh myvm1 \"docker swarm init\"</span><br><span class=\"line\">// --advertise-addr错误的解决</span><br><span class=\"line\"><span class=\"meta\">$</span>docker-machine ssh myvm1 \"docker swarm init --advertise-addr 192.168.99.100:2377\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  web:</span></span><br><span class=\"line\">    <span class=\"comment\"># 将 username/repo:tag 替换为您的名称和镜像详细信息</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">huguanghui/helltest:latest</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      replicas:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        limits:</span></span><br><span class=\"line\"><span class=\"attr\">          cpus:</span> <span class=\"string\">\"0.1\"</span></span><br><span class=\"line\"><span class=\"attr\">          memory:</span> <span class=\"number\">50</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">      restart_policy:</span></span><br><span class=\"line\"><span class=\"attr\">        condition:</span> <span class=\"string\">on-failure</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"80:80\"</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">  visualizer:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">dockersamples/visualizer:stable</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"8080:8080\"</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"/var/run/docker.sock:/var/run/docker.sock\"</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      placement:</span></span><br><span class=\"line\"><span class=\"attr\">        constraints:</span> <span class=\"string\">[node.role</span> <span class=\"string\">==</span> <span class=\"string\">manager]</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\"><span class=\"attr\">  webnet:</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>Docker 是世界领先的软件容器平台。开发人员利用 Docker 可以消除协作编码时“在我的机器上可正常工作”的问题。运维人员利用 Docker 可以在隔离容器中并行运行和管理应用，获得更好的计算密度。企业利用 Docker 可以构建敏捷的软件交付管道，以更快的速度、更高的安全性和可靠的信誉为 Linux 和 Windows Server 应用发布新功能。</p>\n<p><a href=\"http://www.docker-cn.com/\" target=\"_blank\" rel=\"noopener\">中文官网</a></p>\n<p><a href=\"https://hub.docker.com/\" target=\"_blank\" rel=\"noopener\">DockerHub</a></p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><h3 id=\"Ubuntu上的安装\"><a href=\"#Ubuntu上的安装\" class=\"headerlink\" title=\"Ubuntu上的安装\"></a>Ubuntu上的安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 卸载旧版本</span><br><span class=\"line\"><span class=\"meta\">$</span>apt-get remove docker docker-engine docker.io</span><br><span class=\"line\">// 使用存储库进行安装</span><br><span class=\"line\"><span class=\"meta\">$</span> apt-get install \\</span><br><span class=\"line\">    apt-transport-https \\</span><br><span class=\"line\">    ca-certificates \\</span><br><span class=\"line\">    curl \\</span><br><span class=\"line\">    software-properties-common</span><br><span class=\"line\">// 添加Docker的官方GPG密钥</span><br><span class=\"line\"><span class=\"meta\">$</span> curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class=\"line\">// 添加Docker软件源</span><br><span class=\"line\"><span class=\"meta\">$</span> sudo add-apt-repository \\</span><br><span class=\"line\">    \"deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \\</span><br><span class=\"line\">    $(lsb_release -cs) \\</span><br><span class=\"line\">    stable\"</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo apt-get install docker-ce</span><br><span class=\"line\">// 运行hello-world</span><br><span class=\"line\"><span class=\"meta\">$</span>docker run hello-world</span><br><span class=\"line\">// 以非root用户身份运行docker</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo groupadd docker</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p><a href=\"https://juejin.im/post/5a4858235188257d6a7ee393\" target=\"_blank\" rel=\"noopener\">部署</a></p>\n<h3 id=\"使用中国的官方镜像加速\"><a href=\"#使用中国的官方镜像加速\" class=\"headerlink\" title=\"使用中国的官方镜像加速\"></a>使用中国的官方镜像加速</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 守护进程传参</span><br><span class=\"line\"><span class=\"meta\">$</span> docker --registry-mirror=https://registry.docker-cn.com daemon</span><br><span class=\"line\">// 通过配置项来修改 /etc/docker/daemon.json</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  \"registry-mirrors\": [\"https://registry.docker-cn.com\"]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"docker远程仓库的使用\"><a href=\"#docker远程仓库的使用\" class=\"headerlink\" title=\"docker远程仓库的使用\"></a>docker远程仓库的使用</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker tag local-image:tagname new-repo:tagname</span><br><span class=\"line\"><span class=\"meta\">$</span>docker push new-repo:ragname</span><br></pre></td></tr></table></figure>\n<h3 id=\"构建应用\"><a href=\"#构建应用\" class=\"headerlink\" title=\"构建应用\"></a>构建应用</h3><p>创建Dockerfile, app.py, requirements.txt</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker build -t friendlyhello .</span><br></pre></td></tr></table></figure>\n<h3 id=\"运行应用\"><a href=\"#运行应用\" class=\"headerlink\" title=\"运行应用\"></a>运行应用</h3><p>-d 后台运行</p>\n<p>-p 内外端口映射</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker run -d -p 4000:80 friendlyhello</span><br></pre></td></tr></table></figure>\n<p>停止服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker ps</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stop $&#123;CONTAINER ID&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># docker-compose.yml</span></span><br><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  web:</span></span><br><span class=\"line\">    <span class=\"comment\"># 将 username/repo:tag 替换为您的名称和镜像详细信息</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">username/repository:tag</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      replicas:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        limits:</span></span><br><span class=\"line\"><span class=\"attr\">          cpus:</span> <span class=\"string\">\"0.1\"</span></span><br><span class=\"line\"><span class=\"attr\">          memory:</span><span class=\"number\">50</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">      restart_policy:</span></span><br><span class=\"line\"><span class=\"attr\">        condition:</span> <span class=\"string\">on-failure</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"80:80\"</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\"><span class=\"attr\">  webnet:</span></span><br></pre></td></tr></table></figure>\n<p>运行新的应用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker swarm init</span><br><span class=\"line\">// 部署应用</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack deploy -c docker-compose.yml getstartedlab</span><br><span class=\"line\">// 查看服务容器列表</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack ps getstartedlab</span><br><span class=\"line\">// 修改docker-compose.yml参数再部署应用就是更新</span><br></pre></td></tr></table></figure>\n<p>清除应用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 删除应用</span><br><span class=\"line\"><span class=\"meta\">$</span>docker stack rm getstartedlab</span><br><span class=\"line\">// 清除swarm</span><br><span class=\"line\"><span class=\"meta\">$</span>docker swarm leave --force</span><br></pre></td></tr></table></figure>\n<h3 id=\"swarm集群\"><a href=\"#swarm集群\" class=\"headerlink\" title=\"swarm集群\"></a>swarm集群</h3><p>利用Virtualbox来创建</p>\n<p><a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\" rel=\"noopener\">VirtualBox安装</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.cnblogs.com/sparkdev/p/7044950.html\" target=\"_blank\" rel=\"noopener\">docker-machine安装</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://github.com/docker/machine/releases/</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 创建一对VM</span><br><span class=\"line\">docker-machine create --driver virtualbox myvm1</span><br><span class=\"line\">docker-machine create --driver virtualbox myvm2</span><br></pre></td></tr></table></figure>\n<p>myvm1发送命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>docker-machine ssh myvm1 \"docker swarm init\"</span><br><span class=\"line\">// --advertise-addr错误的解决</span><br><span class=\"line\"><span class=\"meta\">$</span>docker-machine ssh myvm1 \"docker swarm init --advertise-addr 192.168.99.100:2377\"</span><br></pre></td></tr></table></figure>\n<h3 id=\"技术栈\"><a href=\"#技术栈\" class=\"headerlink\" title=\"技术栈\"></a>技术栈</h3><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3\"</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  web:</span></span><br><span class=\"line\">    <span class=\"comment\"># 将 username/repo:tag 替换为您的名称和镜像详细信息</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">huguanghui/helltest:latest</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      replicas:</span> <span class=\"number\">5</span></span><br><span class=\"line\"><span class=\"attr\">      resources:</span></span><br><span class=\"line\"><span class=\"attr\">        limits:</span></span><br><span class=\"line\"><span class=\"attr\">          cpus:</span> <span class=\"string\">\"0.1\"</span></span><br><span class=\"line\"><span class=\"attr\">          memory:</span> <span class=\"number\">50</span><span class=\"string\">M</span></span><br><span class=\"line\"><span class=\"attr\">      restart_policy:</span></span><br><span class=\"line\"><span class=\"attr\">        condition:</span> <span class=\"string\">on-failure</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"80:80\"</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">  visualizer:</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">dockersamples/visualizer:stable</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"8080:8080\"</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">\"/var/run/docker.sock:/var/run/docker.sock\"</span></span><br><span class=\"line\"><span class=\"attr\">    deploy:</span></span><br><span class=\"line\"><span class=\"attr\">      placement:</span></span><br><span class=\"line\"><span class=\"attr\">        constraints:</span> <span class=\"string\">[node.role</span> <span class=\"string\">==</span> <span class=\"string\">manager]</span></span><br><span class=\"line\"><span class=\"attr\">    networks:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">webnet</span></span><br><span class=\"line\"><span class=\"attr\">networks:</span></span><br><span class=\"line\"><span class=\"attr\">  webnet:</span></span><br></pre></td></tr></table></figure>\n"},{"title":"boost版本","reward":true,"date":"2018-11-04T00:08:30.000Z","description":null,"_content":"\n# Boost\n\n## 链接\n\n[API](https://www.boost.org/doc/libs/1_65_1/)\n[指针容器: boost::ptr_vector ptr_container](https://blog.csdn.net/rain_qingtian/article/details/11385519)\n[linux下nanosleep() & sleep()的区别](https://www.jb51.net/LINUXjishu/109403.html)\n\n## 指针容器\n\nboost c++库中提供了指针容器专门来管理动态分配的对象.\n","source":"_posts/boost版本.md","raw":"---\ntitle: boost版本\nreward: true\ndate: 2018-11-04 08:08:30\ndescription:\ncategories:\ntags:\n- linux\n---\n\n# Boost\n\n## 链接\n\n[API](https://www.boost.org/doc/libs/1_65_1/)\n[指针容器: boost::ptr_vector ptr_container](https://blog.csdn.net/rain_qingtian/article/details/11385519)\n[linux下nanosleep() & sleep()的区别](https://www.jb51.net/LINUXjishu/109403.html)\n\n## 指针容器\n\nboost c++库中提供了指针容器专门来管理动态分配的对象.\n","slug":"boost版本","published":1,"updated":"2018-11-04T08:39:15.883Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqf0017ewuoqkmbb70g","content":"<h1 id=\"Boost\"><a href=\"#Boost\" class=\"headerlink\" title=\"Boost\"></a>Boost</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://www.boost.org/doc/libs/1_65_1/\" target=\"_blank\" rel=\"noopener\">API</a><br><a href=\"https://blog.csdn.net/rain_qingtian/article/details/11385519\" target=\"_blank\" rel=\"noopener\">指针容器: boost::ptr_vector ptr_container</a><br><a href=\"https://www.jb51.net/LINUXjishu/109403.html\" target=\"_blank\" rel=\"noopener\">linux下nanosleep() &amp; sleep()的区别</a></p>\n<h2 id=\"指针容器\"><a href=\"#指针容器\" class=\"headerlink\" title=\"指针容器\"></a>指针容器</h2><p>boost c++库中提供了指针容器专门来管理动态分配的对象.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Boost\"><a href=\"#Boost\" class=\"headerlink\" title=\"Boost\"></a>Boost</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://www.boost.org/doc/libs/1_65_1/\" target=\"_blank\" rel=\"noopener\">API</a><br><a href=\"https://blog.csdn.net/rain_qingtian/article/details/11385519\" target=\"_blank\" rel=\"noopener\">指针容器: boost::ptr_vector ptr_container</a><br><a href=\"https://www.jb51.net/LINUXjishu/109403.html\" target=\"_blank\" rel=\"noopener\">linux下nanosleep() &amp; sleep()的区别</a></p>\n<h2 id=\"指针容器\"><a href=\"#指针容器\" class=\"headerlink\" title=\"指针容器\"></a>指针容器</h2><p>boost c++库中提供了指针容器专门来管理动态分配的对象.</p>\n"},{"title":"gulp入门","reward":true,"date":"2019-01-14T12:17:54.000Z","description":null,"_content":"\n# gulp入门\n\n## 简介\n\n自动化构建工具\n\n## 使用\n\n1. 全局安装\n\n   ```shell\n   $ npm install --global gulp\n   ```\n\n   \n\n2. 项目依赖安装\n\n   ```shell\n   $ npm install --save-dev gulp\n   ```\n\n   \n\n3. 在根目录下创建一个名为gulpfile.js的文件\n\n   ```js\n   var gulp = require('gulp');\n   \n   gulp.task('default', function() {\n       // 将默认的任务代码放到这里\n   });\n   ```\n\n   \n\n4. 运行gulp\n\n```shell\n$ gulp\n```\n\n","source":"_posts/gulp入门.md","raw":"---\ntitle: gulp入门\nreward: true\ndate: 2019-01-14 20:17:54\ndescription:\ncategories:\ntags:\n- gulp\n---\n\n# gulp入门\n\n## 简介\n\n自动化构建工具\n\n## 使用\n\n1. 全局安装\n\n   ```shell\n   $ npm install --global gulp\n   ```\n\n   \n\n2. 项目依赖安装\n\n   ```shell\n   $ npm install --save-dev gulp\n   ```\n\n   \n\n3. 在根目录下创建一个名为gulpfile.js的文件\n\n   ```js\n   var gulp = require('gulp');\n   \n   gulp.task('default', function() {\n       // 将默认的任务代码放到这里\n   });\n   ```\n\n   \n\n4. 运行gulp\n\n```shell\n$ gulp\n```\n\n","slug":"gulp入门","published":1,"updated":"2019-01-15T04:53:38.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqg0018ewuoy81lma2a","content":"<h1 id=\"gulp入门\"><a href=\"#gulp入门\" class=\"headerlink\" title=\"gulp入门\"></a>gulp入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>自动化构建工具</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li><p>全局安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --global gulp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>项目依赖安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --save-dev gulp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>在根目录下创建一个名为gulpfile.js的文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将默认的任务代码放到这里</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"4\">\n<li>运行gulp</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> gulp</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"gulp入门\"><a href=\"#gulp入门\" class=\"headerlink\" title=\"gulp入门\"></a>gulp入门</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>自动化构建工具</p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><ol>\n<li><p>全局安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --global gulp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>项目依赖安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> npm install --save-dev gulp</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"3\">\n<li><p>在根目录下创建一个名为gulpfile.js的文件</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 将默认的任务代码放到这里</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol start=\"4\">\n<li>运行gulp</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span> gulp</span><br></pre></td></tr></table></figure>\n"},{"title":"kernel学习","reward":true,"date":"2018-12-12T04:19:14.000Z","description":null,"_content":"\n\n\n## 简介\n[git仓库](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/)\n\n[github仓库](https://github.com/torvalds/linux)\n\n[文档](https://www.kernel.org/doc/html/latest/)\n\n[wikis](https://www.wiki.kernel.org/)\n\n## 编译\n\n通过git获取源代码\n\n查看当前系统的内核配置文件\n\n```shell\n/boot/config-$(uname -r)\n```\n\n|     名称     |            解释            |\n| :----------: | :------------------------: |\n|  defconfig   |          默认配置          |\n| allnoconfig  |    尽可能多的选项都关闭    |\n| allyesconfig |    尽可能多的选项都开启    |\n| allmodconfig | 尽可能多的选项作为模块启动 |\n\n```shell\n$make ARCH=arm64 defconfig\n$make -j8\n```\n\n编译出错\n\n```shell\nkernel/built-in.o：在函数‘update_wall_time’中：\n(.text+0x293ee)：对‘____ilog2_NaN’未定义的引用\nMakefile:949: recipe for target 'vmlinux' failed\nmake: *** [vmlinux] Error 1\n```\n\n处理方法:\n\n[补丁包处理](https://blog.csdn.net/wlj1012/article/details/81626669)\n\n## 构建虚拟内存盘(initrd)\n\n### busybox\n\n[官网](https://busybox.net/)\n\n\n\n### 目录部署\n\n## 前期准备\n\n#### 汇编整理\n\n```\n$gcc –S –o main.s main.c -m32\n```\n\n### 最简易根文件系统镜像\n\n[github](https://github.com/mengning/menu)\n\nfind . | cpio -o -Hnewc |gzip -9 > ../rootfs.img\n\n## 内核运行\n\n使用gdb调试\n\n```shell\n$gdb -q\n$> file linux_*/vmlinux\n$> target remote:1234\n$> break start_kernel\n```\n\n\n\n## 相关资料\n\n[linux-insides](https://0xax.gitbooks.io/linux-insides/content/index.html)\n\n[中文翻译](https://xinqiu.gitbooks.io/linux-insides-cn/content/CONTRIBUTORS.html)\n\n","source":"_posts/kernel学习.md","raw":"---\ntitle: kernel学习\nreward: true\ndate: 2018-12-12 12:19:14\ndescription:\ncategories:\ntags:\n- linux\n---\n\n\n\n## 简介\n[git仓库](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/)\n\n[github仓库](https://github.com/torvalds/linux)\n\n[文档](https://www.kernel.org/doc/html/latest/)\n\n[wikis](https://www.wiki.kernel.org/)\n\n## 编译\n\n通过git获取源代码\n\n查看当前系统的内核配置文件\n\n```shell\n/boot/config-$(uname -r)\n```\n\n|     名称     |            解释            |\n| :----------: | :------------------------: |\n|  defconfig   |          默认配置          |\n| allnoconfig  |    尽可能多的选项都关闭    |\n| allyesconfig |    尽可能多的选项都开启    |\n| allmodconfig | 尽可能多的选项作为模块启动 |\n\n```shell\n$make ARCH=arm64 defconfig\n$make -j8\n```\n\n编译出错\n\n```shell\nkernel/built-in.o：在函数‘update_wall_time’中：\n(.text+0x293ee)：对‘____ilog2_NaN’未定义的引用\nMakefile:949: recipe for target 'vmlinux' failed\nmake: *** [vmlinux] Error 1\n```\n\n处理方法:\n\n[补丁包处理](https://blog.csdn.net/wlj1012/article/details/81626669)\n\n## 构建虚拟内存盘(initrd)\n\n### busybox\n\n[官网](https://busybox.net/)\n\n\n\n### 目录部署\n\n## 前期准备\n\n#### 汇编整理\n\n```\n$gcc –S –o main.s main.c -m32\n```\n\n### 最简易根文件系统镜像\n\n[github](https://github.com/mengning/menu)\n\nfind . | cpio -o -Hnewc |gzip -9 > ../rootfs.img\n\n## 内核运行\n\n使用gdb调试\n\n```shell\n$gdb -q\n$> file linux_*/vmlinux\n$> target remote:1234\n$> break start_kernel\n```\n\n\n\n## 相关资料\n\n[linux-insides](https://0xax.gitbooks.io/linux-insides/content/index.html)\n\n[中文翻译](https://xinqiu.gitbooks.io/linux-insides-cn/content/CONTRIBUTORS.html)\n\n","slug":"kernel学习","published":1,"updated":"2018-12-26T12:02:15.987Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqh001cewuokphuudw1","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/\" target=\"_blank\" rel=\"noopener\">git仓库</a></p>\n<p><a href=\"https://github.com/torvalds/linux\" target=\"_blank\" rel=\"noopener\">github仓库</a></p>\n<p><a href=\"https://www.kernel.org/doc/html/latest/\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p><a href=\"https://www.wiki.kernel.org/\" target=\"_blank\" rel=\"noopener\">wikis</a></p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>通过git获取源代码</p>\n<p>查看当前系统的内核配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/boot/config-$(uname -r)</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">defconfig</td>\n<td style=\"text-align:center\">默认配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allnoconfig</td>\n<td style=\"text-align:center\">尽可能多的选项都关闭</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allyesconfig</td>\n<td style=\"text-align:center\">尽可能多的选项都开启</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allmodconfig</td>\n<td style=\"text-align:center\">尽可能多的选项作为模块启动</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>make ARCH=arm64 defconfig</span><br><span class=\"line\"><span class=\"meta\">$</span>make -j8</span><br></pre></td></tr></table></figure>\n<p>编译出错</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kernel/built-in.o：在函数‘update_wall_time’中：</span><br><span class=\"line\">(.text+0x293ee)：对‘____ilog2_NaN’未定义的引用</span><br><span class=\"line\">Makefile:949: recipe for target 'vmlinux' failed</span><br><span class=\"line\">make: *** [vmlinux] Error 1</span><br></pre></td></tr></table></figure>\n<p>处理方法:</p>\n<p><a href=\"https://blog.csdn.net/wlj1012/article/details/81626669\" target=\"_blank\" rel=\"noopener\">补丁包处理</a></p>\n<h2 id=\"构建虚拟内存盘-initrd\"><a href=\"#构建虚拟内存盘-initrd\" class=\"headerlink\" title=\"构建虚拟内存盘(initrd)\"></a>构建虚拟内存盘(initrd)</h2><h3 id=\"busybox\"><a href=\"#busybox\" class=\"headerlink\" title=\"busybox\"></a>busybox</h3><p><a href=\"https://busybox.net/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h3 id=\"目录部署\"><a href=\"#目录部署\" class=\"headerlink\" title=\"目录部署\"></a>目录部署</h3><h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><h4 id=\"汇编整理\"><a href=\"#汇编整理\" class=\"headerlink\" title=\"汇编整理\"></a>汇编整理</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$gcc –S –o main.s main.c -m32</span><br></pre></td></tr></table></figure>\n<h3 id=\"最简易根文件系统镜像\"><a href=\"#最简易根文件系统镜像\" class=\"headerlink\" title=\"最简易根文件系统镜像\"></a>最简易根文件系统镜像</h3><p><a href=\"https://github.com/mengning/menu\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<p>find . | cpio -o -Hnewc |gzip -9 &gt; ../rootfs.img</p>\n<h2 id=\"内核运行\"><a href=\"#内核运行\" class=\"headerlink\" title=\"内核运行\"></a>内核运行</h2><p>使用gdb调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>gdb -q</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; file linux_*/vmlinux</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; target remote:1234</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; break start_kernel</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关资料\"><a href=\"#相关资料\" class=\"headerlink\" title=\"相关资料\"></a>相关资料</h2><p><a href=\"https://0xax.gitbooks.io/linux-insides/content/index.html\" target=\"_blank\" rel=\"noopener\">linux-insides</a></p>\n<p><a href=\"https://xinqiu.gitbooks.io/linux-insides-cn/content/CONTRIBUTORS.html\" target=\"_blank\" rel=\"noopener\">中文翻译</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/\" target=\"_blank\" rel=\"noopener\">git仓库</a></p>\n<p><a href=\"https://github.com/torvalds/linux\" target=\"_blank\" rel=\"noopener\">github仓库</a></p>\n<p><a href=\"https://www.kernel.org/doc/html/latest/\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p><a href=\"https://www.wiki.kernel.org/\" target=\"_blank\" rel=\"noopener\">wikis</a></p>\n<h2 id=\"编译\"><a href=\"#编译\" class=\"headerlink\" title=\"编译\"></a>编译</h2><p>通过git获取源代码</p>\n<p>查看当前系统的内核配置文件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/boot/config-$(uname -r)</span><br></pre></td></tr></table></figure>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">defconfig</td>\n<td style=\"text-align:center\">默认配置</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allnoconfig</td>\n<td style=\"text-align:center\">尽可能多的选项都关闭</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allyesconfig</td>\n<td style=\"text-align:center\">尽可能多的选项都开启</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">allmodconfig</td>\n<td style=\"text-align:center\">尽可能多的选项作为模块启动</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>make ARCH=arm64 defconfig</span><br><span class=\"line\"><span class=\"meta\">$</span>make -j8</span><br></pre></td></tr></table></figure>\n<p>编译出错</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kernel/built-in.o：在函数‘update_wall_time’中：</span><br><span class=\"line\">(.text+0x293ee)：对‘____ilog2_NaN’未定义的引用</span><br><span class=\"line\">Makefile:949: recipe for target 'vmlinux' failed</span><br><span class=\"line\">make: *** [vmlinux] Error 1</span><br></pre></td></tr></table></figure>\n<p>处理方法:</p>\n<p><a href=\"https://blog.csdn.net/wlj1012/article/details/81626669\" target=\"_blank\" rel=\"noopener\">补丁包处理</a></p>\n<h2 id=\"构建虚拟内存盘-initrd\"><a href=\"#构建虚拟内存盘-initrd\" class=\"headerlink\" title=\"构建虚拟内存盘(initrd)\"></a>构建虚拟内存盘(initrd)</h2><h3 id=\"busybox\"><a href=\"#busybox\" class=\"headerlink\" title=\"busybox\"></a>busybox</h3><p><a href=\"https://busybox.net/\" target=\"_blank\" rel=\"noopener\">官网</a></p>\n<h3 id=\"目录部署\"><a href=\"#目录部署\" class=\"headerlink\" title=\"目录部署\"></a>目录部署</h3><h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><h4 id=\"汇编整理\"><a href=\"#汇编整理\" class=\"headerlink\" title=\"汇编整理\"></a>汇编整理</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$gcc –S –o main.s main.c -m32</span><br></pre></td></tr></table></figure>\n<h3 id=\"最简易根文件系统镜像\"><a href=\"#最简易根文件系统镜像\" class=\"headerlink\" title=\"最简易根文件系统镜像\"></a>最简易根文件系统镜像</h3><p><a href=\"https://github.com/mengning/menu\" target=\"_blank\" rel=\"noopener\">github</a></p>\n<p>find . | cpio -o -Hnewc |gzip -9 &gt; ../rootfs.img</p>\n<h2 id=\"内核运行\"><a href=\"#内核运行\" class=\"headerlink\" title=\"内核运行\"></a>内核运行</h2><p>使用gdb调试</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>gdb -q</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; file linux_*/vmlinux</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; target remote:1234</span><br><span class=\"line\"><span class=\"meta\">$</span>&gt; break start_kernel</span><br></pre></td></tr></table></figure>\n<h2 id=\"相关资料\"><a href=\"#相关资料\" class=\"headerlink\" title=\"相关资料\"></a>相关资料</h2><p><a href=\"https://0xax.gitbooks.io/linux-insides/content/index.html\" target=\"_blank\" rel=\"noopener\">linux-insides</a></p>\n<p><a href=\"https://xinqiu.gitbooks.io/linux-insides-cn/content/CONTRIBUTORS.html\" target=\"_blank\" rel=\"noopener\">中文翻译</a></p>\n"},{"title":"linux上安装gcc","reward":true,"date":"2018-12-01T02:05:27.000Z","description":null,"_content":"\n# linux上 安装gcc\n\n## 简介\n\n### [官网](https://gcc.gnu.org/)\n\n### 部署环境\n\nwin10微软商店中的ubuntu18.04\n\n### gcc的历史版本\n\n|  版本   | 简介 |\n| :-----: | :--: |\n| GCC 5.5 |      |\n| GCC 6.4 |      |\n| GCC 6.5 |      |\n| GCC 7.2 |      |\n| GCC 7.3 |      |\n| GCC 8.1 |      |\n| GCC 8.2 |      |\n| GCC 9.0 |      |\n\n## 编译安装GCC 7.3\n\n### 下载\n\n```shell\n$wget ftp://ftp.gwdg.de/pub/misc/gcc/releases/gcc-7.3.0/gcc-7.3.0.tar.xz\n```\n\n### 解压\n\n```shell\n$xz -d gcc-7.3.0.tar.xz\n$tar -xvf gcc-7.3.0.tar\n```\n\n下载,配置,安装需要的依赖库\n\n```shell\n$./contrib/download_prerequisites\n$mkdir gcc-build-7.3.0 // 建立编译输出目录\n$../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib\n$make\n$卸载 旧版本gcc和g++\n$sudo make install\n```\n\n## *.cpp->exe\n\n![](.\\_linux上安装gcc\\buildexe.png)\n\n## 汇编片段\n\n通用寄存器:AX、BX、CX、DX\nAX:累加寄存器，BX:基地址寄存器，CX:计数寄存器，DX:数据寄存器\n\n变址寄存器:SI、DI\n\n堆叠、基底暂存器:SP、BP\nSP:堆叠指标暂存器，BP:基底指标暂存器  \n\nE前缀表示32位系统\n\nesp: 寄存器存放当前线程的栈顶指针\n\nebp:寄存器存放当前线程的栈底指针\n\neip:下一个CPU指令的存放位置\n\nebx: $?的返回\n\n![](.\\_linux上安装gcc\\寻址方式.png)\n\n### mov\n\n寄存器赋值\n\nb,w,l,q代表8位,16位,32位,64位\n\n### push\n\n入栈指令\n\npush %eax\n\nsubl $4,%esp\n\nmovl %eax\t,(%esp)\n\n### pop\n\n出栈指令\n\npopl %eax\n\nmovl (%esp), %eax\n\naddl $4,%esp\n\n### leave\n\n相当于mov+pop\n\n### call\n\ncall 0x12345\n\npush %eip*\n\nmovl 0x12345,%eip* \n\n### ret\n\npopl %eip*\n\n### enter\n\npushl %ebp\n\nmovl %esp,%ebp\n\n### leave\n\nmovl %ebp,%esp\n\npopl %ebp\n\n## objdump二进制文件分析\n\n### 查看当前系统是大端模式或小端模式\n\n```shell\n$objdump -i\n```\n\n### 反汇编\n\n```shell\n$objdump -S main\n# 或\n$objdump -d main\n```\n\n### 显示符号表入口\n\n```shell\n$objdump -t main\n```\n\n## readelf elf文件格式分析\n\n```shell\n$readelf -S a.out\n```\n\n0x0000 5555 5555 4610","source":"_posts/linux上安装gcc.md","raw":"---\ntitle: linux上安装gcc\nreward: true\ndate: 2018-12-01 10:05:27\ndescription:\ncategories:\ntags:\n- linux\n---\n\n# linux上 安装gcc\n\n## 简介\n\n### [官网](https://gcc.gnu.org/)\n\n### 部署环境\n\nwin10微软商店中的ubuntu18.04\n\n### gcc的历史版本\n\n|  版本   | 简介 |\n| :-----: | :--: |\n| GCC 5.5 |      |\n| GCC 6.4 |      |\n| GCC 6.5 |      |\n| GCC 7.2 |      |\n| GCC 7.3 |      |\n| GCC 8.1 |      |\n| GCC 8.2 |      |\n| GCC 9.0 |      |\n\n## 编译安装GCC 7.3\n\n### 下载\n\n```shell\n$wget ftp://ftp.gwdg.de/pub/misc/gcc/releases/gcc-7.3.0/gcc-7.3.0.tar.xz\n```\n\n### 解压\n\n```shell\n$xz -d gcc-7.3.0.tar.xz\n$tar -xvf gcc-7.3.0.tar\n```\n\n下载,配置,安装需要的依赖库\n\n```shell\n$./contrib/download_prerequisites\n$mkdir gcc-build-7.3.0 // 建立编译输出目录\n$../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib\n$make\n$卸载 旧版本gcc和g++\n$sudo make install\n```\n\n## *.cpp->exe\n\n![](.\\_linux上安装gcc\\buildexe.png)\n\n## 汇编片段\n\n通用寄存器:AX、BX、CX、DX\nAX:累加寄存器，BX:基地址寄存器，CX:计数寄存器，DX:数据寄存器\n\n变址寄存器:SI、DI\n\n堆叠、基底暂存器:SP、BP\nSP:堆叠指标暂存器，BP:基底指标暂存器  \n\nE前缀表示32位系统\n\nesp: 寄存器存放当前线程的栈顶指针\n\nebp:寄存器存放当前线程的栈底指针\n\neip:下一个CPU指令的存放位置\n\nebx: $?的返回\n\n![](.\\_linux上安装gcc\\寻址方式.png)\n\n### mov\n\n寄存器赋值\n\nb,w,l,q代表8位,16位,32位,64位\n\n### push\n\n入栈指令\n\npush %eax\n\nsubl $4,%esp\n\nmovl %eax\t,(%esp)\n\n### pop\n\n出栈指令\n\npopl %eax\n\nmovl (%esp), %eax\n\naddl $4,%esp\n\n### leave\n\n相当于mov+pop\n\n### call\n\ncall 0x12345\n\npush %eip*\n\nmovl 0x12345,%eip* \n\n### ret\n\npopl %eip*\n\n### enter\n\npushl %ebp\n\nmovl %esp,%ebp\n\n### leave\n\nmovl %ebp,%esp\n\npopl %ebp\n\n## objdump二进制文件分析\n\n### 查看当前系统是大端模式或小端模式\n\n```shell\n$objdump -i\n```\n\n### 反汇编\n\n```shell\n$objdump -S main\n# 或\n$objdump -d main\n```\n\n### 显示符号表入口\n\n```shell\n$objdump -t main\n```\n\n## readelf elf文件格式分析\n\n```shell\n$readelf -S a.out\n```\n\n0x0000 5555 5555 4610","slug":"linux上安装gcc","published":1,"updated":"2018-12-27T05:25:14.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqi001eewuoft6tze5g","content":"<h1 id=\"linux上-安装gcc\"><a href=\"#linux上-安装gcc\" class=\"headerlink\" title=\"linux上 安装gcc\"></a>linux上 安装gcc</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">官网</a></h3><h3 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h3><p>win10微软商店中的ubuntu18.04</p>\n<h3 id=\"gcc的历史版本\"><a href=\"#gcc的历史版本\" class=\"headerlink\" title=\"gcc的历史版本\"></a>gcc的历史版本</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">版本</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GCC 5.5</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 6.4</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 6.5</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 7.2</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 7.3</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 8.1</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 8.2</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 9.0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"编译安装GCC-7-3\"><a href=\"#编译安装GCC-7-3\" class=\"headerlink\" title=\"编译安装GCC 7.3\"></a>编译安装GCC 7.3</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>wget ftp://ftp.gwdg.de/pub/misc/gcc/releases/gcc-7.3.0/gcc-7.3.0.tar.xz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>xz -d gcc-7.3.0.tar.xz</span><br><span class=\"line\"><span class=\"meta\">$</span>tar -xvf gcc-7.3.0.tar</span><br></pre></td></tr></table></figure>\n<p>下载,配置,安装需要的依赖库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>./contrib/download_prerequisites</span><br><span class=\"line\"><span class=\"meta\">$</span>mkdir gcc-build-7.3.0 // 建立编译输出目录</span><br><span class=\"line\"><span class=\"meta\">$</span>../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib</span><br><span class=\"line\"><span class=\"meta\">$</span>make</span><br><span class=\"line\"><span class=\"meta\">$</span>卸载 旧版本gcc和g++</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"cpp-gt-exe\"><a href=\"#cpp-gt-exe\" class=\"headerlink\" title=\"*.cpp-&gt;exe\"></a>*.cpp-&gt;exe</h2><p><img src=\".\\_linux上安装gcc\\buildexe.png\" alt=\"\"></p>\n<h2 id=\"汇编片段\"><a href=\"#汇编片段\" class=\"headerlink\" title=\"汇编片段\"></a>汇编片段</h2><p>通用寄存器:AX、BX、CX、DX<br>AX:累加寄存器，BX:基地址寄存器，CX:计数寄存器，DX:数据寄存器</p>\n<p>变址寄存器:SI、DI</p>\n<p>堆叠、基底暂存器:SP、BP<br>SP:堆叠指标暂存器，BP:基底指标暂存器  </p>\n<p>E前缀表示32位系统</p>\n<p>esp: 寄存器存放当前线程的栈顶指针</p>\n<p>ebp:寄存器存放当前线程的栈底指针</p>\n<p>eip:下一个CPU指令的存放位置</p>\n<p>ebx: $?的返回</p>\n<p><img src=\".\\_linux上安装gcc\\寻址方式.png\" alt=\"\"></p>\n<h3 id=\"mov\"><a href=\"#mov\" class=\"headerlink\" title=\"mov\"></a>mov</h3><p>寄存器赋值</p>\n<p>b,w,l,q代表8位,16位,32位,64位</p>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p>入栈指令</p>\n<p>push %eax</p>\n<p>subl $4,%esp</p>\n<p>movl %eax    ,(%esp)</p>\n<h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop\"></a>pop</h3><p>出栈指令</p>\n<p>popl %eax</p>\n<p>movl (%esp), %eax</p>\n<p>addl $4,%esp</p>\n<h3 id=\"leave\"><a href=\"#leave\" class=\"headerlink\" title=\"leave\"></a>leave</h3><p>相当于mov+pop</p>\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call\"></a>call</h3><p>call 0x12345</p>\n<p>push %eip*</p>\n<p>movl 0x12345,%eip* </p>\n<h3 id=\"ret\"><a href=\"#ret\" class=\"headerlink\" title=\"ret\"></a>ret</h3><p>popl %eip*</p>\n<h3 id=\"enter\"><a href=\"#enter\" class=\"headerlink\" title=\"enter\"></a>enter</h3><p>pushl %ebp</p>\n<p>movl %esp,%ebp</p>\n<h3 id=\"leave-1\"><a href=\"#leave-1\" class=\"headerlink\" title=\"leave\"></a>leave</h3><p>movl %ebp,%esp</p>\n<p>popl %ebp</p>\n<h2 id=\"objdump二进制文件分析\"><a href=\"#objdump二进制文件分析\" class=\"headerlink\" title=\"objdump二进制文件分析\"></a>objdump二进制文件分析</h2><h3 id=\"查看当前系统是大端模式或小端模式\"><a href=\"#查看当前系统是大端模式或小端模式\" class=\"headerlink\" title=\"查看当前系统是大端模式或小端模式\"></a>查看当前系统是大端模式或小端模式</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -i</span><br></pre></td></tr></table></figure>\n<h3 id=\"反汇编\"><a href=\"#反汇编\" class=\"headerlink\" title=\"反汇编\"></a>反汇编</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -S main</span><br><span class=\"line\"><span class=\"meta\">#</span> 或</span><br><span class=\"line\"><span class=\"meta\">$</span>objdump -d main</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示符号表入口\"><a href=\"#显示符号表入口\" class=\"headerlink\" title=\"显示符号表入口\"></a>显示符号表入口</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -t main</span><br></pre></td></tr></table></figure>\n<h2 id=\"readelf-elf文件格式分析\"><a href=\"#readelf-elf文件格式分析\" class=\"headerlink\" title=\"readelf elf文件格式分析\"></a>readelf elf文件格式分析</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>readelf -S a.out</span><br></pre></td></tr></table></figure>\n<p>0x0000 5555 5555 4610</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"linux上-安装gcc\"><a href=\"#linux上-安装gcc\" class=\"headerlink\" title=\"linux上 安装gcc\"></a>linux上 安装gcc</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"官网\"><a href=\"#官网\" class=\"headerlink\" title=\"官网\"></a><a href=\"https://gcc.gnu.org/\" target=\"_blank\" rel=\"noopener\">官网</a></h3><h3 id=\"部署环境\"><a href=\"#部署环境\" class=\"headerlink\" title=\"部署环境\"></a>部署环境</h3><p>win10微软商店中的ubuntu18.04</p>\n<h3 id=\"gcc的历史版本\"><a href=\"#gcc的历史版本\" class=\"headerlink\" title=\"gcc的历史版本\"></a>gcc的历史版本</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">版本</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">GCC 5.5</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 6.4</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 6.5</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 7.2</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 7.3</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 8.1</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 8.2</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">GCC 9.0</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"编译安装GCC-7-3\"><a href=\"#编译安装GCC-7-3\" class=\"headerlink\" title=\"编译安装GCC 7.3\"></a>编译安装GCC 7.3</h2><h3 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>wget ftp://ftp.gwdg.de/pub/misc/gcc/releases/gcc-7.3.0/gcc-7.3.0.tar.xz</span><br></pre></td></tr></table></figure>\n<h3 id=\"解压\"><a href=\"#解压\" class=\"headerlink\" title=\"解压\"></a>解压</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>xz -d gcc-7.3.0.tar.xz</span><br><span class=\"line\"><span class=\"meta\">$</span>tar -xvf gcc-7.3.0.tar</span><br></pre></td></tr></table></figure>\n<p>下载,配置,安装需要的依赖库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>./contrib/download_prerequisites</span><br><span class=\"line\"><span class=\"meta\">$</span>mkdir gcc-build-7.3.0 // 建立编译输出目录</span><br><span class=\"line\"><span class=\"meta\">$</span>../configure --enable-checking=release --enable-languages=c,c++ --disable-multilib</span><br><span class=\"line\"><span class=\"meta\">$</span>make</span><br><span class=\"line\"><span class=\"meta\">$</span>卸载 旧版本gcc和g++</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo make install</span><br></pre></td></tr></table></figure>\n<h2 id=\"cpp-gt-exe\"><a href=\"#cpp-gt-exe\" class=\"headerlink\" title=\"*.cpp-&gt;exe\"></a>*.cpp-&gt;exe</h2><p><img src=\".\\_linux上安装gcc\\buildexe.png\" alt=\"\"></p>\n<h2 id=\"汇编片段\"><a href=\"#汇编片段\" class=\"headerlink\" title=\"汇编片段\"></a>汇编片段</h2><p>通用寄存器:AX、BX、CX、DX<br>AX:累加寄存器，BX:基地址寄存器，CX:计数寄存器，DX:数据寄存器</p>\n<p>变址寄存器:SI、DI</p>\n<p>堆叠、基底暂存器:SP、BP<br>SP:堆叠指标暂存器，BP:基底指标暂存器  </p>\n<p>E前缀表示32位系统</p>\n<p>esp: 寄存器存放当前线程的栈顶指针</p>\n<p>ebp:寄存器存放当前线程的栈底指针</p>\n<p>eip:下一个CPU指令的存放位置</p>\n<p>ebx: $?的返回</p>\n<p><img src=\".\\_linux上安装gcc\\寻址方式.png\" alt=\"\"></p>\n<h3 id=\"mov\"><a href=\"#mov\" class=\"headerlink\" title=\"mov\"></a>mov</h3><p>寄存器赋值</p>\n<p>b,w,l,q代表8位,16位,32位,64位</p>\n<h3 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h3><p>入栈指令</p>\n<p>push %eax</p>\n<p>subl $4,%esp</p>\n<p>movl %eax    ,(%esp)</p>\n<h3 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop\"></a>pop</h3><p>出栈指令</p>\n<p>popl %eax</p>\n<p>movl (%esp), %eax</p>\n<p>addl $4,%esp</p>\n<h3 id=\"leave\"><a href=\"#leave\" class=\"headerlink\" title=\"leave\"></a>leave</h3><p>相当于mov+pop</p>\n<h3 id=\"call\"><a href=\"#call\" class=\"headerlink\" title=\"call\"></a>call</h3><p>call 0x12345</p>\n<p>push %eip*</p>\n<p>movl 0x12345,%eip* </p>\n<h3 id=\"ret\"><a href=\"#ret\" class=\"headerlink\" title=\"ret\"></a>ret</h3><p>popl %eip*</p>\n<h3 id=\"enter\"><a href=\"#enter\" class=\"headerlink\" title=\"enter\"></a>enter</h3><p>pushl %ebp</p>\n<p>movl %esp,%ebp</p>\n<h3 id=\"leave-1\"><a href=\"#leave-1\" class=\"headerlink\" title=\"leave\"></a>leave</h3><p>movl %ebp,%esp</p>\n<p>popl %ebp</p>\n<h2 id=\"objdump二进制文件分析\"><a href=\"#objdump二进制文件分析\" class=\"headerlink\" title=\"objdump二进制文件分析\"></a>objdump二进制文件分析</h2><h3 id=\"查看当前系统是大端模式或小端模式\"><a href=\"#查看当前系统是大端模式或小端模式\" class=\"headerlink\" title=\"查看当前系统是大端模式或小端模式\"></a>查看当前系统是大端模式或小端模式</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -i</span><br></pre></td></tr></table></figure>\n<h3 id=\"反汇编\"><a href=\"#反汇编\" class=\"headerlink\" title=\"反汇编\"></a>反汇编</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -S main</span><br><span class=\"line\"><span class=\"meta\">#</span> 或</span><br><span class=\"line\"><span class=\"meta\">$</span>objdump -d main</span><br></pre></td></tr></table></figure>\n<h3 id=\"显示符号表入口\"><a href=\"#显示符号表入口\" class=\"headerlink\" title=\"显示符号表入口\"></a>显示符号表入口</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>objdump -t main</span><br></pre></td></tr></table></figure>\n<h2 id=\"readelf-elf文件格式分析\"><a href=\"#readelf-elf文件格式分析\" class=\"headerlink\" title=\"readelf elf文件格式分析\"></a>readelf elf文件格式分析</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>readelf -S a.out</span><br></pre></td></tr></table></figure>\n<p>0x0000 5555 5555 4610</p>\n"},{"title":"python整理","reward":true,"date":"2018-12-27T05:24:38.000Z","description":null,"_content":"\n","source":"_posts/python整理.md","raw":"---\ntitle: python整理\nreward: true\ndate: 2018-12-27 13:24:38\ndescription:\ncategories:\ntags:\n- python\n---\n\n","slug":"python整理","published":1,"updated":"2018-12-27T06:13:17.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqk001iewuohydwfx95","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"qemu简介","reward":true,"date":"2018-12-23T01:34:02.000Z","description":null,"_content":"\n## 简介\n\nqemu是一个通用和开源的机器仿真器和虚拟器.\n\n三种使用:\n\nFull-system emulation 可以在所有支持的架构的机器上运行操作系统\n\nUser-mode emulation 在所有支持的架构上运行Linux/BSD程序\n\nVirtualization 运行接近本机性能的KVM和Xen虚拟机\n\n[git仓库](https://git.qemu.org/git/qemu.git/)\n\n[wiki](https://wiki.qemu.org/Main_Page)\n\n## 源码安装\n\n```shell\n$git clone https://git.qemu.org/git/qemu.git\n$cd qemu\n$git submodule init\n$git submodule update --recursive\n$./configure\n$make\n$sudo make install\n```\n\n\n\n安装过程中遇到的问题:\n\n1.glib缺少\n\nsudo apt-get install libglib2.0-dev\n\n2.ERROR: pixman >= 0.21.8 not present.\n​       Please install the pixman devel package.\n\n解决办法:\n\napt-cache search pixman\n\nsudo apt install libpixman-1-dev\n\n## 系统仿真\n\n只出现VNC server running on 127.0.0.1:5901\n\n原因是缺少libsdl开发库\n\n```shell\n$sudo apt-get install libsdl2-dev\n```\n\n","source":"_posts/qemu简介.md","raw":"---\n\ntitle: qemu简介\nreward: true\ndate: 2018-12-23 09:34:02\ndescription:\ncategories:\ntags:\n - 工具\n---\n\n## 简介\n\nqemu是一个通用和开源的机器仿真器和虚拟器.\n\n三种使用:\n\nFull-system emulation 可以在所有支持的架构的机器上运行操作系统\n\nUser-mode emulation 在所有支持的架构上运行Linux/BSD程序\n\nVirtualization 运行接近本机性能的KVM和Xen虚拟机\n\n[git仓库](https://git.qemu.org/git/qemu.git/)\n\n[wiki](https://wiki.qemu.org/Main_Page)\n\n## 源码安装\n\n```shell\n$git clone https://git.qemu.org/git/qemu.git\n$cd qemu\n$git submodule init\n$git submodule update --recursive\n$./configure\n$make\n$sudo make install\n```\n\n\n\n安装过程中遇到的问题:\n\n1.glib缺少\n\nsudo apt-get install libglib2.0-dev\n\n2.ERROR: pixman >= 0.21.8 not present.\n​       Please install the pixman devel package.\n\n解决办法:\n\napt-cache search pixman\n\nsudo apt install libpixman-1-dev\n\n## 系统仿真\n\n只出现VNC server running on 127.0.0.1:5901\n\n原因是缺少libsdl开发库\n\n```shell\n$sudo apt-get install libsdl2-dev\n```\n\n","slug":"qemu简介","published":1,"updated":"2018-12-23T13:02:58.090Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqk001kewuosart2t4r","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>qemu是一个通用和开源的机器仿真器和虚拟器.</p>\n<p>三种使用:</p>\n<p>Full-system emulation 可以在所有支持的架构的机器上运行操作系统</p>\n<p>User-mode emulation 在所有支持的架构上运行Linux/BSD程序</p>\n<p>Virtualization 运行接近本机性能的KVM和Xen虚拟机</p>\n<p><a href=\"https://git.qemu.org/git/qemu.git/\" target=\"_blank\" rel=\"noopener\">git仓库</a></p>\n<p><a href=\"https://wiki.qemu.org/Main_Page\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<h2 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>git clone https://git.qemu.org/git/qemu.git</span><br><span class=\"line\"><span class=\"meta\">$</span>cd qemu</span><br><span class=\"line\"><span class=\"meta\">$</span>git submodule init</span><br><span class=\"line\"><span class=\"meta\">$</span>git submodule update --recursive</span><br><span class=\"line\"><span class=\"meta\">$</span>./configure</span><br><span class=\"line\"><span class=\"meta\">$</span>make</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo make install</span><br></pre></td></tr></table></figure>\n<p>安装过程中遇到的问题:</p>\n<p>1.glib缺少</p>\n<p>sudo apt-get install libglib2.0-dev</p>\n<p>2.ERROR: pixman &gt;= 0.21.8 not present.<br>​       Please install the pixman devel package.</p>\n<p>解决办法:</p>\n<p>apt-cache search pixman</p>\n<p>sudo apt install libpixman-1-dev</p>\n<h2 id=\"系统仿真\"><a href=\"#系统仿真\" class=\"headerlink\" title=\"系统仿真\"></a>系统仿真</h2><p>只出现VNC server running on 127.0.0.1:5901</p>\n<p>原因是缺少libsdl开发库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>sudo apt-get install libsdl2-dev</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>qemu是一个通用和开源的机器仿真器和虚拟器.</p>\n<p>三种使用:</p>\n<p>Full-system emulation 可以在所有支持的架构的机器上运行操作系统</p>\n<p>User-mode emulation 在所有支持的架构上运行Linux/BSD程序</p>\n<p>Virtualization 运行接近本机性能的KVM和Xen虚拟机</p>\n<p><a href=\"https://git.qemu.org/git/qemu.git/\" target=\"_blank\" rel=\"noopener\">git仓库</a></p>\n<p><a href=\"https://wiki.qemu.org/Main_Page\" target=\"_blank\" rel=\"noopener\">wiki</a></p>\n<h2 id=\"源码安装\"><a href=\"#源码安装\" class=\"headerlink\" title=\"源码安装\"></a>源码安装</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>git clone https://git.qemu.org/git/qemu.git</span><br><span class=\"line\"><span class=\"meta\">$</span>cd qemu</span><br><span class=\"line\"><span class=\"meta\">$</span>git submodule init</span><br><span class=\"line\"><span class=\"meta\">$</span>git submodule update --recursive</span><br><span class=\"line\"><span class=\"meta\">$</span>./configure</span><br><span class=\"line\"><span class=\"meta\">$</span>make</span><br><span class=\"line\"><span class=\"meta\">$</span>sudo make install</span><br></pre></td></tr></table></figure>\n<p>安装过程中遇到的问题:</p>\n<p>1.glib缺少</p>\n<p>sudo apt-get install libglib2.0-dev</p>\n<p>2.ERROR: pixman &gt;= 0.21.8 not present.<br>​       Please install the pixman devel package.</p>\n<p>解决办法:</p>\n<p>apt-cache search pixman</p>\n<p>sudo apt install libpixman-1-dev</p>\n<h2 id=\"系统仿真\"><a href=\"#系统仿真\" class=\"headerlink\" title=\"系统仿真\"></a>系统仿真</h2><p>只出现VNC server running on 127.0.0.1:5901</p>\n<p>原因是缺少libsdl开发库</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">$</span>sudo apt-get install libsdl2-dev</span><br></pre></td></tr></table></figure>\n"},{"title":"muduo的使用入门","reward":true,"date":"2018-11-03T13:54:05.000Z","description":null,"_content":"\n# muduo\n\n## muduo简介\n\n依赖boost开源库.\n\n## muduo的使用\n\n### muduo_base的使用\n\n#### 异步打印-Asynclogging\n","source":"_posts/muduo的使用入门.md","raw":"---\ntitle: muduo的使用入门\nreward: true\ndate: 2018-11-03 21:54:05\ndescription:\ncategories:\ntags:\n- c++\n---\n\n# muduo\n\n## muduo简介\n\n依赖boost开源库.\n\n## muduo的使用\n\n### muduo_base的使用\n\n#### 异步打印-Asynclogging\n","slug":"muduo的使用入门","published":1,"updated":"2018-11-03T15:46:05.329Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqm001newuotmnpe2nb","content":"<h1 id=\"muduo\"><a href=\"#muduo\" class=\"headerlink\" title=\"muduo\"></a>muduo</h1><h2 id=\"muduo简介\"><a href=\"#muduo简介\" class=\"headerlink\" title=\"muduo简介\"></a>muduo简介</h2><p>依赖boost开源库.</p>\n<h2 id=\"muduo的使用\"><a href=\"#muduo的使用\" class=\"headerlink\" title=\"muduo的使用\"></a>muduo的使用</h2><h3 id=\"muduo-base的使用\"><a href=\"#muduo-base的使用\" class=\"headerlink\" title=\"muduo_base的使用\"></a>muduo_base的使用</h3><h4 id=\"异步打印-Asynclogging\"><a href=\"#异步打印-Asynclogging\" class=\"headerlink\" title=\"异步打印-Asynclogging\"></a>异步打印-Asynclogging</h4>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"muduo\"><a href=\"#muduo\" class=\"headerlink\" title=\"muduo\"></a>muduo</h1><h2 id=\"muduo简介\"><a href=\"#muduo简介\" class=\"headerlink\" title=\"muduo简介\"></a>muduo简介</h2><p>依赖boost开源库.</p>\n<h2 id=\"muduo的使用\"><a href=\"#muduo的使用\" class=\"headerlink\" title=\"muduo的使用\"></a>muduo的使用</h2><h3 id=\"muduo-base的使用\"><a href=\"#muduo-base的使用\" class=\"headerlink\" title=\"muduo_base的使用\"></a>muduo_base的使用</h3><h4 id=\"异步打印-Asynclogging\"><a href=\"#异步打印-Asynclogging\" class=\"headerlink\" title=\"异步打印-Asynclogging\"></a>异步打印-Asynclogging</h4>"},{"title":"svn使用","reward":true,"date":"2018-11-04T14:43:51.000Z","description":null,"_content":"\n# SVN\n\n## 链接\n\n[SVN官网](https://tortoisesvn.net/index.zh.html)\n[ubuntu下svn的搭建](http://www.cnblogs.com/ximu/articles/2119136.html)\n[google的svn服务器](https://blog.csdn.net/kky2010_110/article/details/4802564)\n[SVN命令设置过滤文件](https://segmentfault.com/a/1190000007756678)\n\n## SVN服务器搭建\n\n","source":"_posts/svn使用.md","raw":"---\ntitle: svn使用\nreward: true\ndate: 2018-11-04 22:43:51\ndescription:\ncategories:\n- 版本管理\ntags:\n- svn\n---\n\n# SVN\n\n## 链接\n\n[SVN官网](https://tortoisesvn.net/index.zh.html)\n[ubuntu下svn的搭建](http://www.cnblogs.com/ximu/articles/2119136.html)\n[google的svn服务器](https://blog.csdn.net/kky2010_110/article/details/4802564)\n[SVN命令设置过滤文件](https://segmentfault.com/a/1190000007756678)\n\n## SVN服务器搭建\n\n","slug":"svn使用","published":1,"updated":"2018-11-08T15:23:22.612Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqn001pewuof9ck6hpw","content":"<h1 id=\"SVN\"><a href=\"#SVN\" class=\"headerlink\" title=\"SVN\"></a>SVN</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://tortoisesvn.net/index.zh.html\" target=\"_blank\" rel=\"noopener\">SVN官网</a><br><a href=\"http://www.cnblogs.com/ximu/articles/2119136.html\" target=\"_blank\" rel=\"noopener\">ubuntu下svn的搭建</a><br><a href=\"https://blog.csdn.net/kky2010_110/article/details/4802564\" target=\"_blank\" rel=\"noopener\">google的svn服务器</a><br><a href=\"https://segmentfault.com/a/1190000007756678\" target=\"_blank\" rel=\"noopener\">SVN命令设置过滤文件</a></p>\n<h2 id=\"SVN服务器搭建\"><a href=\"#SVN服务器搭建\" class=\"headerlink\" title=\"SVN服务器搭建\"></a>SVN服务器搭建</h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"SVN\"><a href=\"#SVN\" class=\"headerlink\" title=\"SVN\"></a>SVN</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://tortoisesvn.net/index.zh.html\" target=\"_blank\" rel=\"noopener\">SVN官网</a><br><a href=\"http://www.cnblogs.com/ximu/articles/2119136.html\" target=\"_blank\" rel=\"noopener\">ubuntu下svn的搭建</a><br><a href=\"https://blog.csdn.net/kky2010_110/article/details/4802564\" target=\"_blank\" rel=\"noopener\">google的svn服务器</a><br><a href=\"https://segmentfault.com/a/1190000007756678\" target=\"_blank\" rel=\"noopener\">SVN命令设置过滤文件</a></p>\n<h2 id=\"SVN服务器搭建\"><a href=\"#SVN服务器搭建\" class=\"headerlink\" title=\"SVN服务器搭建\"></a>SVN服务器搭建</h2>"},{"title":"typora+pandoc使用","reward":true,"date":"2018-11-22T15:18:26.000Z","description":null,"_content":"","source":"_posts/typora-pandoc使用.md","raw":"---\ntitle: typora+pandoc使用\nreward: true\ndate: 2018-11-22 23:18:26\ndescription:\ncategories:\ntags:\n---\n","slug":"typora-pandoc使用","published":1,"updated":"2018-11-22T15:18:26.701Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqo001rewuo308to2wn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"redis安装和使用","reward":true,"date":"2018-10-15T13:38:44.000Z","description":null,"_content":"\n# 安装\n\n[官网](https://redis.io/)\n[v5.0](https://github.com/antirez/redis/archive/5.0-rc6.tar.gz)\n\n---\n\n## redis结构\n\n|名称|描述|\n|:---:|:---:|\n|redis-server||\n|redis-cli||\n|redis-benchmark||\n|redis-check-aof||\n|redis-check-rdb||\n\n## redis页面\n\n[redis页面](https://blog.csdn.net/loveer0/article/details/82016644)\n\n## redis-desktop-manager工具下载\n\n[下载地址](https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe)\n\n## redis.conf配置\n\n让其他设备能访问到方法\n1.将bind 127.0.0.1注释掉\n2.将protected-mode设为no\n\n## navicat破解\n\n[navicat破解](https://blog.csdn.net/qq_38698632/article/details/80577938)","source":"_posts/redis安装和使用.md","raw":"---\ntitle: redis安装和使用\nreward: true\ndate: 2018-10-15 21:38:44\ndescription:\ncategories:\ntags:\n- redis\n---\n\n# 安装\n\n[官网](https://redis.io/)\n[v5.0](https://github.com/antirez/redis/archive/5.0-rc6.tar.gz)\n\n---\n\n## redis结构\n\n|名称|描述|\n|:---:|:---:|\n|redis-server||\n|redis-cli||\n|redis-benchmark||\n|redis-check-aof||\n|redis-check-rdb||\n\n## redis页面\n\n[redis页面](https://blog.csdn.net/loveer0/article/details/82016644)\n\n## redis-desktop-manager工具下载\n\n[下载地址](https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe)\n\n## redis.conf配置\n\n让其他设备能访问到方法\n1.将bind 127.0.0.1注释掉\n2.将protected-mode设为no\n\n## navicat破解\n\n[navicat破解](https://blog.csdn.net/qq_38698632/article/details/80577938)","slug":"redis安装和使用","published":1,"updated":"2018-11-18T08:21:37.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqp001uewuo5vqm7n81","content":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">官网</a><br><a href=\"https://github.com/antirez/redis/archive/5.0-rc6.tar.gz\" target=\"_blank\" rel=\"noopener\">v5.0</a></p>\n<hr>\n<h2 id=\"redis结构\"><a href=\"#redis结构\" class=\"headerlink\" title=\"redis结构\"></a>redis结构</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">redis-server</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-cli</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-benchmark</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-check-aof</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-check-rdb</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"redis页面\"><a href=\"#redis页面\" class=\"headerlink\" title=\"redis页面\"></a>redis页面</h2><p><a href=\"https://blog.csdn.net/loveer0/article/details/82016644\" target=\"_blank\" rel=\"noopener\">redis页面</a></p>\n<h2 id=\"redis-desktop-manager工具下载\"><a href=\"#redis-desktop-manager工具下载\" class=\"headerlink\" title=\"redis-desktop-manager工具下载\"></a>redis-desktop-manager工具下载</h2><p><a href=\"https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<h2 id=\"redis-conf配置\"><a href=\"#redis-conf配置\" class=\"headerlink\" title=\"redis.conf配置\"></a>redis.conf配置</h2><p>让其他设备能访问到方法<br>1.将bind 127.0.0.1注释掉<br>2.将protected-mode设为no</p>\n<h2 id=\"navicat破解\"><a href=\"#navicat破解\" class=\"headerlink\" title=\"navicat破解\"></a>navicat破解</h2><p><a href=\"https://blog.csdn.net/qq_38698632/article/details/80577938\" target=\"_blank\" rel=\"noopener\">navicat破解</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p><a href=\"https://redis.io/\" target=\"_blank\" rel=\"noopener\">官网</a><br><a href=\"https://github.com/antirez/redis/archive/5.0-rc6.tar.gz\" target=\"_blank\" rel=\"noopener\">v5.0</a></p>\n<hr>\n<h2 id=\"redis结构\"><a href=\"#redis结构\" class=\"headerlink\" title=\"redis结构\"></a>redis结构</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">redis-server</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-cli</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-benchmark</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-check-aof</td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">redis-check-rdb</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"redis页面\"><a href=\"#redis页面\" class=\"headerlink\" title=\"redis页面\"></a>redis页面</h2><p><a href=\"https://blog.csdn.net/loveer0/article/details/82016644\" target=\"_blank\" rel=\"noopener\">redis页面</a></p>\n<h2 id=\"redis-desktop-manager工具下载\"><a href=\"#redis-desktop-manager工具下载\" class=\"headerlink\" title=\"redis-desktop-manager工具下载\"></a>redis-desktop-manager工具下载</h2><p><a href=\"https://github.com/uglide/RedisDesktopManager/releases/download/0.8.8/redis-desktop-manager-0.8.8.384.exe\" target=\"_blank\" rel=\"noopener\">下载地址</a></p>\n<h2 id=\"redis-conf配置\"><a href=\"#redis-conf配置\" class=\"headerlink\" title=\"redis.conf配置\"></a>redis.conf配置</h2><p>让其他设备能访问到方法<br>1.将bind 127.0.0.1注释掉<br>2.将protected-mode设为no</p>\n<h2 id=\"navicat破解\"><a href=\"#navicat破解\" class=\"headerlink\" title=\"navicat破解\"></a>navicat破解</h2><p><a href=\"https://blog.csdn.net/qq_38698632/article/details/80577938\" target=\"_blank\" rel=\"noopener\">navicat破解</a></p>\n"},{"title":"yarn入门","reward":true,"date":"2019-01-14T12:17:54.000Z","description":null,"_content":"\n# Yarn\n\n## 简介\n\n[Yarn](https://yarn.org.cn/) 是一个快速,可靠,安全的依赖管理.\n\n- 极速   缓存它下载的每个包,不重复下载.还可以并行化操作以最大化资源利用率\n- 超级安全  在每个安装包执行前使用校验码验证包的完整性\n- 超级可靠    使用一个格式详尽但简洁的lockfile和一个精确的算法来安装,能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上\n\n## 与npm的区别\n\nYarn 是由Facebook, Google, Exponent和Tilde联合推出了一个新的JS包管理工具,据官方描述, Yarn是为了弥补npm的一些缺陷而出现的.\n\nnpm缺点: npm install安装慢,无法保证一致性\n\n## Yarn和npm命令对比\n\n|              npm              |         yarn         |\n| :---------------------------: | :------------------: |\n|          npm install          |         yarn         |\n|   npm install react --save    |    yarn add react    |\n|  npm uninstall react --save   |  yarn remove react   |\n| npm install react  --save-dev | yarn add react --dev |\n|       npm update --save       |     yarn upgrade     |\n\n## npm未来: npm5.0\n\nnpm后续的改进\n\n- 添加了类似yarn.lock的package-lock.json\n- git依赖支持优化\n- 文件依赖优化","source":"_posts/yarn入门.md","raw":"---\ntitle: yarn入门\nreward: true\ndate: 2019-01-14 20:17:54\ndescription:\ncategories:\ntags:\n- yarn\n---\n\n# Yarn\n\n## 简介\n\n[Yarn](https://yarn.org.cn/) 是一个快速,可靠,安全的依赖管理.\n\n- 极速   缓存它下载的每个包,不重复下载.还可以并行化操作以最大化资源利用率\n- 超级安全  在每个安装包执行前使用校验码验证包的完整性\n- 超级可靠    使用一个格式详尽但简洁的lockfile和一个精确的算法来安装,能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上\n\n## 与npm的区别\n\nYarn 是由Facebook, Google, Exponent和Tilde联合推出了一个新的JS包管理工具,据官方描述, Yarn是为了弥补npm的一些缺陷而出现的.\n\nnpm缺点: npm install安装慢,无法保证一致性\n\n## Yarn和npm命令对比\n\n|              npm              |         yarn         |\n| :---------------------------: | :------------------: |\n|          npm install          |         yarn         |\n|   npm install react --save    |    yarn add react    |\n|  npm uninstall react --save   |  yarn remove react   |\n| npm install react  --save-dev | yarn add react --dev |\n|       npm update --save       |     yarn upgrade     |\n\n## npm未来: npm5.0\n\nnpm后续的改进\n\n- 添加了类似yarn.lock的package-lock.json\n- git依赖支持优化\n- 文件依赖优化","slug":"yarn入门","published":1,"updated":"2019-01-15T04:20:14.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqq001wewuo6viyu5pb","content":"<h1 id=\"Yarn\"><a href=\"#Yarn\" class=\"headerlink\" title=\"Yarn\"></a>Yarn</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://yarn.org.cn/\" target=\"_blank\" rel=\"noopener\">Yarn</a> 是一个快速,可靠,安全的依赖管理.</p>\n<ul>\n<li>极速   缓存它下载的每个包,不重复下载.还可以并行化操作以最大化资源利用率</li>\n<li>超级安全  在每个安装包执行前使用校验码验证包的完整性</li>\n<li>超级可靠    使用一个格式详尽但简洁的lockfile和一个精确的算法来安装,能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上</li>\n</ul>\n<h2 id=\"与npm的区别\"><a href=\"#与npm的区别\" class=\"headerlink\" title=\"与npm的区别\"></a>与npm的区别</h2><p>Yarn 是由Facebook, Google, Exponent和Tilde联合推出了一个新的JS包管理工具,据官方描述, Yarn是为了弥补npm的一些缺陷而出现的.</p>\n<p>npm缺点: npm install安装慢,无法保证一致性</p>\n<h2 id=\"Yarn和npm命令对比\"><a href=\"#Yarn和npm命令对比\" class=\"headerlink\" title=\"Yarn和npm命令对比\"></a>Yarn和npm命令对比</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">npm</th>\n<th style=\"text-align:center\">yarn</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">npm install</td>\n<td style=\"text-align:center\">yarn</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm install react –save</td>\n<td style=\"text-align:center\">yarn add react</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm uninstall react –save</td>\n<td style=\"text-align:center\">yarn remove react</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm install react  –save-dev</td>\n<td style=\"text-align:center\">yarn add react –dev</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm update –save</td>\n<td style=\"text-align:center\">yarn upgrade</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"npm未来-npm5-0\"><a href=\"#npm未来-npm5-0\" class=\"headerlink\" title=\"npm未来: npm5.0\"></a>npm未来: npm5.0</h2><p>npm后续的改进</p>\n<ul>\n<li>添加了类似yarn.lock的package-lock.json</li>\n<li>git依赖支持优化</li>\n<li>文件依赖优化</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Yarn\"><a href=\"#Yarn\" class=\"headerlink\" title=\"Yarn\"></a>Yarn</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><a href=\"https://yarn.org.cn/\" target=\"_blank\" rel=\"noopener\">Yarn</a> 是一个快速,可靠,安全的依赖管理.</p>\n<ul>\n<li>极速   缓存它下载的每个包,不重复下载.还可以并行化操作以最大化资源利用率</li>\n<li>超级安全  在每个安装包执行前使用校验码验证包的完整性</li>\n<li>超级可靠    使用一个格式详尽但简洁的lockfile和一个精确的算法来安装,能够保证在一个系统上的运行的安装过程也会以同样的方式运行在其他系统上</li>\n</ul>\n<h2 id=\"与npm的区别\"><a href=\"#与npm的区别\" class=\"headerlink\" title=\"与npm的区别\"></a>与npm的区别</h2><p>Yarn 是由Facebook, Google, Exponent和Tilde联合推出了一个新的JS包管理工具,据官方描述, Yarn是为了弥补npm的一些缺陷而出现的.</p>\n<p>npm缺点: npm install安装慢,无法保证一致性</p>\n<h2 id=\"Yarn和npm命令对比\"><a href=\"#Yarn和npm命令对比\" class=\"headerlink\" title=\"Yarn和npm命令对比\"></a>Yarn和npm命令对比</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">npm</th>\n<th style=\"text-align:center\">yarn</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">npm install</td>\n<td style=\"text-align:center\">yarn</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm install react –save</td>\n<td style=\"text-align:center\">yarn add react</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm uninstall react –save</td>\n<td style=\"text-align:center\">yarn remove react</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm install react  –save-dev</td>\n<td style=\"text-align:center\">yarn add react –dev</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">npm update –save</td>\n<td style=\"text-align:center\">yarn upgrade</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"npm未来-npm5-0\"><a href=\"#npm未来-npm5-0\" class=\"headerlink\" title=\"npm未来: npm5.0\"></a>npm未来: npm5.0</h2><p>npm后续的改进</p>\n<ul>\n<li>添加了类似yarn.lock的package-lock.json</li>\n<li>git依赖支持优化</li>\n<li>文件依赖优化</li>\n</ul>\n"},{"title":"valgrind使用","reward":true,"date":"2018-11-04T16:23:43.000Z","description":null,"_content":"\n# Valgrind\n\n## 链接\n\n[下载地址](http://www.valgrind.org/downloads/valgrind-3.14.0.tar.bz2)\n[使用](https://www.cnblogs.com/AndyStudy/p/6409287.html)","source":"_posts/valgrind使用.md","raw":"---\ntitle: valgrind使用\nreward: true\ndate: 2018-11-05 00:23:43\ndescription:\ncategories:\ntags:\n- valgrind\n---\n\n# Valgrind\n\n## 链接\n\n[下载地址](http://www.valgrind.org/downloads/valgrind-3.14.0.tar.bz2)\n[使用](https://www.cnblogs.com/AndyStudy/p/6409287.html)","slug":"valgrind使用","published":1,"updated":"2018-11-08T15:23:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqr001yewuoirwx1itj","content":"<h1 id=\"Valgrind\"><a href=\"#Valgrind\" class=\"headerlink\" title=\"Valgrind\"></a>Valgrind</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://www.valgrind.org/downloads/valgrind-3.14.0.tar.bz2\" target=\"_blank\" rel=\"noopener\">下载地址</a><br><a href=\"https://www.cnblogs.com/AndyStudy/p/6409287.html\" target=\"_blank\" rel=\"noopener\">使用</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Valgrind\"><a href=\"#Valgrind\" class=\"headerlink\" title=\"Valgrind\"></a>Valgrind</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"http://www.valgrind.org/downloads/valgrind-3.14.0.tar.bz2\" target=\"_blank\" rel=\"noopener\">下载地址</a><br><a href=\"https://www.cnblogs.com/AndyStudy/p/6409287.html\" target=\"_blank\" rel=\"noopener\">使用</a></p>\n"},{"title":"使用acl实现websocket","reward":true,"date":"2018-10-15T14:25:08.000Z","description":null,"_content":"\n# 使用acl实现websocket的结构分析\n\n## 相关模块分析\n\n- acl::singleton2的使用\n- master结构","source":"_posts/使用acl实现websocket.md","raw":"---\ntitle: 使用acl实现websocket\nreward: true\ndate: 2018-10-15 22:25:08\ndescription:\ncategories:\ntags:\n- acl\n---\n\n# 使用acl实现websocket的结构分析\n\n## 相关模块分析\n\n- acl::singleton2的使用\n- master结构","slug":"使用acl实现websocket","published":1,"updated":"2018-11-03T13:32:44.569Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqs001zewuokqhzhxem","content":"<h1 id=\"使用acl实现websocket的结构分析\"><a href=\"#使用acl实现websocket的结构分析\" class=\"headerlink\" title=\"使用acl实现websocket的结构分析\"></a>使用acl实现websocket的结构分析</h1><h2 id=\"相关模块分析\"><a href=\"#相关模块分析\" class=\"headerlink\" title=\"相关模块分析\"></a>相关模块分析</h2><ul>\n<li>acl::singleton2的使用</li>\n<li>master结构</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"使用acl实现websocket的结构分析\"><a href=\"#使用acl实现websocket的结构分析\" class=\"headerlink\" title=\"使用acl实现websocket的结构分析\"></a>使用acl实现websocket的结构分析</h1><h2 id=\"相关模块分析\"><a href=\"#相关模块分析\" class=\"headerlink\" title=\"相关模块分析\"></a>相关模块分析</h2><ul>\n<li>acl::singleton2的使用</li>\n<li>master结构</li>\n</ul>\n"},{"title":"前端基础常识","reward":true,"date":"2018-11-17T03:57:30.000Z","description":null,"_content":"\n# 前端常识\n\n---\n\n## 前端引擎\n\nview - 视图引擎\n分为ejs|hbs|hjs|jade|pug|twig|vash\n\ncss - 样式表引擎\n分为less|stylus|compass|sass\n\n## node模块\n\nchalk  -  颜色模块\nora    -  编译过程显示\nrimraf - 删除目录\n\n## html标签\n\n### nav 导航链接标签\n","source":"_posts/前端基础常识.md","raw":"---\ntitle: 前端基础常识\nreward: true\ndate: 2018-11-17 11:57:30\ndescription:\ncategories:\n- 前端\ntags:\n- 前端常识\n---\n\n# 前端常识\n\n---\n\n## 前端引擎\n\nview - 视图引擎\n分为ejs|hbs|hjs|jade|pug|twig|vash\n\ncss - 样式表引擎\n分为less|stylus|compass|sass\n\n## node模块\n\nchalk  -  颜色模块\nora    -  编译过程显示\nrimraf - 删除目录\n\n## html标签\n\n### nav 导航链接标签\n","slug":"前端基础常识","published":1,"updated":"2018-11-17T12:42:31.272Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqt0022ewuomd1yc9f6","content":"<h1 id=\"前端常识\"><a href=\"#前端常识\" class=\"headerlink\" title=\"前端常识\"></a>前端常识</h1><hr>\n<h2 id=\"前端引擎\"><a href=\"#前端引擎\" class=\"headerlink\" title=\"前端引擎\"></a>前端引擎</h2><p>view - 视图引擎<br>分为ejs|hbs|hjs|jade|pug|twig|vash</p>\n<p>css - 样式表引擎<br>分为less|stylus|compass|sass</p>\n<h2 id=\"node模块\"><a href=\"#node模块\" class=\"headerlink\" title=\"node模块\"></a>node模块</h2><p>chalk  -  颜色模块<br>ora    -  编译过程显示<br>rimraf - 删除目录</p>\n<h2 id=\"html标签\"><a href=\"#html标签\" class=\"headerlink\" title=\"html标签\"></a>html标签</h2><h3 id=\"nav-导航链接标签\"><a href=\"#nav-导航链接标签\" class=\"headerlink\" title=\"nav 导航链接标签\"></a>nav 导航链接标签</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前端常识\"><a href=\"#前端常识\" class=\"headerlink\" title=\"前端常识\"></a>前端常识</h1><hr>\n<h2 id=\"前端引擎\"><a href=\"#前端引擎\" class=\"headerlink\" title=\"前端引擎\"></a>前端引擎</h2><p>view - 视图引擎<br>分为ejs|hbs|hjs|jade|pug|twig|vash</p>\n<p>css - 样式表引擎<br>分为less|stylus|compass|sass</p>\n<h2 id=\"node模块\"><a href=\"#node模块\" class=\"headerlink\" title=\"node模块\"></a>node模块</h2><p>chalk  -  颜色模块<br>ora    -  编译过程显示<br>rimraf - 删除目录</p>\n<h2 id=\"html标签\"><a href=\"#html标签\" class=\"headerlink\" title=\"html标签\"></a>html标签</h2><h3 id=\"nav-导航链接标签\"><a href=\"#nav-导航链接标签\" class=\"headerlink\" title=\"nav 导航链接标签\"></a>nav 导航链接标签</h3>"},{"title":"类之间的关系","reward":true,"date":"2018-11-25T13:44:55.000Z","description":null,"_content":"\n\n\n# 类之间的关系\n\n## 关系描述\n\n### 继承\n\n泛化:  继承非抽象类\n\n实现:  继承抽象类\n\n聚合:\n\n组合:\n\n关联:\n\n依赖:","source":"_posts/类之间的关系.md","raw":"---\ntitle: 类之间的关系\nreward: true\ndate: 2018-11-25 21:44:55\ndescription:\ncategories:\ntags:\n- Class\n---\n\n\n\n# 类之间的关系\n\n## 关系描述\n\n### 继承\n\n泛化:  继承非抽象类\n\n实现:  继承抽象类\n\n聚合:\n\n组合:\n\n关联:\n\n依赖:","slug":"类之间的关系","published":1,"updated":"2018-11-30T14:25:59.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqu0024ewuo3b2naka9","content":"<h1 id=\"类之间的关系\"><a href=\"#类之间的关系\" class=\"headerlink\" title=\"类之间的关系\"></a>类之间的关系</h1><h2 id=\"关系描述\"><a href=\"#关系描述\" class=\"headerlink\" title=\"关系描述\"></a>关系描述</h2><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>泛化:  继承非抽象类</p>\n<p>实现:  继承抽象类</p>\n<p>聚合:</p>\n<p>组合:</p>\n<p>关联:</p>\n<p>依赖:</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"类之间的关系\"><a href=\"#类之间的关系\" class=\"headerlink\" title=\"类之间的关系\"></a>类之间的关系</h1><h2 id=\"关系描述\"><a href=\"#关系描述\" class=\"headerlink\" title=\"关系描述\"></a>关系描述</h2><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>泛化:  继承非抽象类</p>\n<p>实现:  继承抽象类</p>\n<p>聚合:</p>\n<p>组合:</p>\n<p>关联:</p>\n<p>依赖:</p>\n"},{"title":"脚本使用","reward":true,"date":"2018-11-02T15:05:18.000Z","description":null,"_content":"\n# google的编程风格\n[google的shell风格](https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/contents/)\n\n```shell\n#!/bin/sh\n\n# 如果调用失败就退出,set +e相反\nset -e\n```\n\n\n\n# 常用命令使用\n\n## 常用匹配符\n\n| 匹配符 |           作用           |\n| :----: | :----------------------: |\n|   .    | 匹配除换行之外的任意字符 |\n|   \\w   |  匹配字母,数字或下划线   |\n|   \\s   |      匹配任意的空白      |\n|   \\d   |         匹配数字         |\n|   \\D   |      匹配非数字字符      |\n|   \\b   |   匹配单词的开始或结束   |\n|   ^    |      匹配字符串开始      |\n|   &    |      匹配字符串结束      |\n\n## 命令使用\n\n### grep\n\n| 选项 |    作用    |\n| :--: | :--------: |\n|  -i  | 忽略大小写 |\n|      |            |\n|      |            |\n\n### cut\n\n|   选项    |     作用     |\n| :-------: | :----------: |\n|    指定单位     | -b以字节为单位,-c以字符为单位,-f以字段为单位 |\n| N-,-M,N-M |   取值范围   |\n|    -d     |  指定定界符  |\n\n### xargs\n\n命令行参数转换\n\n|   选项    |       作用       |\n| :-------: | :--------------: |\n|    -d     |    指定分割符    |\n| -n  [Num] | 指定一行的字段数 |\n\n### wc\n\n| 选项 |    作用    |\n| :--: | :--------: |\n|  -l  |  统计行数  |\n|  -w  | 统计单词数 |\n|  -c  | 统计字符数 |\n\n### #*,##*,#*,##*,% *,%% *的含义及用法\n\n作用可以在${}分别替换得到不同的值,很有意思的一个地方,#在$的左边,%在$的右边\n\n```shell\nfile=/dir1/dir2/dir3/myfile.txt\n\n# 删掉第一个/及其左边的字符串\n${file#*/}\n# 删掉最后一个/及其左边的字符串\n${file##*/}\n# 删掉第一个.及其左边的字符串\n${file#*.}\n# 删掉最后一个.及其左边的字符串\n${file##*.}\n# 删掉最后一个/及其右边的字符串\n${file%/*}\n# 删除第一个/及其右边的字符串,‘.’类似\n${file%%/*}\n# 提取最左边的5个字节\n${file:0:5}\n# 提取第5个字节的连续5个字节\n${file:5:5}\n# 对变量的值做替换,替换第一个\n${file/dir/path}\n# 对变量的值做替换,替换所有\n${file//dir/path}\n```\n\n# windows的bat脚本使用\n\n## setlocal和endlocal的作用\n\n让中间程序对于系统变量的改变只在程序内起作用\n\n## pushd和popd的作用\n\npushd保存当前目录供popd使用,然后改到指定目录\n\n## %~dp0%含义\n\n当前批处理文件所在的路径\n\n## :: 注释\n\n## for命令\n\n```Dos\nfor /f \"tokens=2,3,4 delims=/ \" %%a in ('date /t') do @echo %%c-%%a-%%b \n```\n\n## findstr在文件中查找字符串\n\n[findstr使用](https://blog.csdn.net/holandstone/article/details/8271369)","source":"_posts/脚本使用.md","raw":"---\ntitle: 脚本使用\nreward: true\ndate: 2018-11-02 23:05:18\ndescription:\ncategories:\ntags:\n- shell\n---\n\n# google的编程风格\n[google的shell风格](https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/contents/)\n\n```shell\n#!/bin/sh\n\n# 如果调用失败就退出,set +e相反\nset -e\n```\n\n\n\n# 常用命令使用\n\n## 常用匹配符\n\n| 匹配符 |           作用           |\n| :----: | :----------------------: |\n|   .    | 匹配除换行之外的任意字符 |\n|   \\w   |  匹配字母,数字或下划线   |\n|   \\s   |      匹配任意的空白      |\n|   \\d   |         匹配数字         |\n|   \\D   |      匹配非数字字符      |\n|   \\b   |   匹配单词的开始或结束   |\n|   ^    |      匹配字符串开始      |\n|   &    |      匹配字符串结束      |\n\n## 命令使用\n\n### grep\n\n| 选项 |    作用    |\n| :--: | :--------: |\n|  -i  | 忽略大小写 |\n|      |            |\n|      |            |\n\n### cut\n\n|   选项    |     作用     |\n| :-------: | :----------: |\n|    指定单位     | -b以字节为单位,-c以字符为单位,-f以字段为单位 |\n| N-,-M,N-M |   取值范围   |\n|    -d     |  指定定界符  |\n\n### xargs\n\n命令行参数转换\n\n|   选项    |       作用       |\n| :-------: | :--------------: |\n|    -d     |    指定分割符    |\n| -n  [Num] | 指定一行的字段数 |\n\n### wc\n\n| 选项 |    作用    |\n| :--: | :--------: |\n|  -l  |  统计行数  |\n|  -w  | 统计单词数 |\n|  -c  | 统计字符数 |\n\n### #*,##*,#*,##*,% *,%% *的含义及用法\n\n作用可以在${}分别替换得到不同的值,很有意思的一个地方,#在$的左边,%在$的右边\n\n```shell\nfile=/dir1/dir2/dir3/myfile.txt\n\n# 删掉第一个/及其左边的字符串\n${file#*/}\n# 删掉最后一个/及其左边的字符串\n${file##*/}\n# 删掉第一个.及其左边的字符串\n${file#*.}\n# 删掉最后一个.及其左边的字符串\n${file##*.}\n# 删掉最后一个/及其右边的字符串\n${file%/*}\n# 删除第一个/及其右边的字符串,‘.’类似\n${file%%/*}\n# 提取最左边的5个字节\n${file:0:5}\n# 提取第5个字节的连续5个字节\n${file:5:5}\n# 对变量的值做替换,替换第一个\n${file/dir/path}\n# 对变量的值做替换,替换所有\n${file//dir/path}\n```\n\n# windows的bat脚本使用\n\n## setlocal和endlocal的作用\n\n让中间程序对于系统变量的改变只在程序内起作用\n\n## pushd和popd的作用\n\npushd保存当前目录供popd使用,然后改到指定目录\n\n## %~dp0%含义\n\n当前批处理文件所在的路径\n\n## :: 注释\n\n## for命令\n\n```Dos\nfor /f \"tokens=2,3,4 delims=/ \" %%a in ('date /t') do @echo %%c-%%a-%%b \n```\n\n## findstr在文件中查找字符串\n\n[findstr使用](https://blog.csdn.net/holandstone/article/details/8271369)","slug":"脚本使用","published":1,"updated":"2019-01-15T07:25:51.613Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqw0027ewuozi40isl6","content":"<h1 id=\"google的编程风格\"><a href=\"#google的编程风格\" class=\"headerlink\" title=\"google的编程风格\"></a>google的编程风格</h1><p><a href=\"https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/contents/\" target=\"_blank\" rel=\"noopener\">google的shell风格</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 如果调用失败就退出,set +e相反</span><br><span class=\"line\">set -e</span><br></pre></td></tr></table></figure>\n<h1 id=\"常用命令使用\"><a href=\"#常用命令使用\" class=\"headerlink\" title=\"常用命令使用\"></a>常用命令使用</h1><h2 id=\"常用匹配符\"><a href=\"#常用匹配符\" class=\"headerlink\" title=\"常用匹配符\"></a>常用匹配符</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">匹配符</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">匹配除换行之外的任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\w</td>\n<td style=\"text-align:center\">匹配字母,数字或下划线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\s</td>\n<td style=\"text-align:center\">匹配任意的空白</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\d</td>\n<td style=\"text-align:center\">匹配数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\D</td>\n<td style=\"text-align:center\">匹配非数字字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\b</td>\n<td style=\"text-align:center\">匹配单词的开始或结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">匹配字符串开始</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">匹配字符串结束</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"命令使用\"><a href=\"#命令使用\" class=\"headerlink\" title=\"命令使用\"></a>命令使用</h2><h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-i</td>\n<td style=\"text-align:center\">忽略大小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">指定单位</td>\n<td style=\"text-align:center\">-b以字节为单位,-c以字符为单位,-f以字段为单位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">N-,-M,N-M</td>\n<td style=\"text-align:center\">取值范围</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d</td>\n<td style=\"text-align:center\">指定定界符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h3><p>命令行参数转换</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-d</td>\n<td style=\"text-align:center\">指定分割符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n  [Num]</td>\n<td style=\"text-align:center\">指定一行的字段数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"wc\"><a href=\"#wc\" class=\"headerlink\" title=\"wc\"></a>wc</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">统计行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w</td>\n<td style=\"text-align:center\">统计单词数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-c</td>\n<td style=\"text-align:center\">统计字符数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"的含义及用法\"><a href=\"#的含义及用法\" class=\"headerlink\" title=\"#,##,#,##,% ,%% 的含义及用法\"></a>#<em>,##</em>,#<em>,##</em>,% <em>,%% </em>的含义及用法</h3><p>作用可以在${}分别替换得到不同的值,很有意思的一个地方,#在$的左边,%在$的右边</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=/dir1/dir2/dir3/myfile.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉第一个/及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file#*/&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个/及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file##*/&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉第一个.及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file#*.&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个.及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file##*.&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个/及其右边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file%/*&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删除第一个/及其右边的字符串,‘.’类似</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file%%/*&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 提取最左边的5个字节</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file:0:5&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 提取第5个字节的连续5个字节</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file:5:5&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 对变量的值做替换,替换第一个</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file/dir/path&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 对变量的值做替换,替换所有</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file//dir/path&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"windows的bat脚本使用\"><a href=\"#windows的bat脚本使用\" class=\"headerlink\" title=\"windows的bat脚本使用\"></a>windows的bat脚本使用</h1><h2 id=\"setlocal和endlocal的作用\"><a href=\"#setlocal和endlocal的作用\" class=\"headerlink\" title=\"setlocal和endlocal的作用\"></a>setlocal和endlocal的作用</h2><p>让中间程序对于系统变量的改变只在程序内起作用</p>\n<h2 id=\"pushd和popd的作用\"><a href=\"#pushd和popd的作用\" class=\"headerlink\" title=\"pushd和popd的作用\"></a>pushd和popd的作用</h2><p>pushd保存当前目录供popd使用,然后改到指定目录</p>\n<h2 id=\"dp0-含义\"><a href=\"#dp0-含义\" class=\"headerlink\" title=\"%~dp0%含义\"></a>%~dp0%含义</h2><p>当前批处理文件所在的路径</p>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\":: 注释\"></a>:: 注释</h2><h2 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h2><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> delims=/ \" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">date</span> /t') <span class=\"keyword\">do</span> @<span class=\"built_in\">echo</span> <span class=\"variable\">%%c</span>-<span class=\"variable\">%%a</span>-<span class=\"variable\">%%b</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"findstr在文件中查找字符串\"><a href=\"#findstr在文件中查找字符串\" class=\"headerlink\" title=\"findstr在文件中查找字符串\"></a>findstr在文件中查找字符串</h2><p><a href=\"https://blog.csdn.net/holandstone/article/details/8271369\" target=\"_blank\" rel=\"noopener\">findstr使用</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"google的编程风格\"><a href=\"#google的编程风格\" class=\"headerlink\" title=\"google的编程风格\"></a>google的编程风格</h1><p><a href=\"https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/contents/\" target=\"_blank\" rel=\"noopener\">google的shell风格</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>!/bin/sh</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 如果调用失败就退出,set +e相反</span><br><span class=\"line\">set -e</span><br></pre></td></tr></table></figure>\n<h1 id=\"常用命令使用\"><a href=\"#常用命令使用\" class=\"headerlink\" title=\"常用命令使用\"></a>常用命令使用</h1><h2 id=\"常用匹配符\"><a href=\"#常用匹配符\" class=\"headerlink\" title=\"常用匹配符\"></a>常用匹配符</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">匹配符</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">.</td>\n<td style=\"text-align:center\">匹配除换行之外的任意字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\w</td>\n<td style=\"text-align:center\">匹配字母,数字或下划线</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\s</td>\n<td style=\"text-align:center\">匹配任意的空白</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\d</td>\n<td style=\"text-align:center\">匹配数字</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\D</td>\n<td style=\"text-align:center\">匹配非数字字符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\b</td>\n<td style=\"text-align:center\">匹配单词的开始或结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">匹配字符串开始</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&amp;</td>\n<td style=\"text-align:center\">匹配字符串结束</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"命令使用\"><a href=\"#命令使用\" class=\"headerlink\" title=\"命令使用\"></a>命令使用</h2><h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-i</td>\n<td style=\"text-align:center\">忽略大小写</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n<td style=\"text-align:center\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cut\"><a href=\"#cut\" class=\"headerlink\" title=\"cut\"></a>cut</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">指定单位</td>\n<td style=\"text-align:center\">-b以字节为单位,-c以字符为单位,-f以字段为单位</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">N-,-M,N-M</td>\n<td style=\"text-align:center\">取值范围</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-d</td>\n<td style=\"text-align:center\">指定定界符</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"xargs\"><a href=\"#xargs\" class=\"headerlink\" title=\"xargs\"></a>xargs</h3><p>命令行参数转换</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-d</td>\n<td style=\"text-align:center\">指定分割符</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-n  [Num]</td>\n<td style=\"text-align:center\">指定一行的字段数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"wc\"><a href=\"#wc\" class=\"headerlink\" title=\"wc\"></a>wc</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">选项</th>\n<th style=\"text-align:center\">作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">-l</td>\n<td style=\"text-align:center\">统计行数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-w</td>\n<td style=\"text-align:center\">统计单词数</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-c</td>\n<td style=\"text-align:center\">统计字符数</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"的含义及用法\"><a href=\"#的含义及用法\" class=\"headerlink\" title=\"#,##,#,##,% ,%% 的含义及用法\"></a>#<em>,##</em>,#<em>,##</em>,% <em>,%% </em>的含义及用法</h3><p>作用可以在${}分别替换得到不同的值,很有意思的一个地方,#在$的左边,%在$的右边</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file=/dir1/dir2/dir3/myfile.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉第一个/及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file#*/&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个/及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file##*/&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉第一个.及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file#*.&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个.及其左边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file##*.&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删掉最后一个/及其右边的字符串</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file%/*&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 删除第一个/及其右边的字符串,‘.’类似</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file%%/*&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 提取最左边的5个字节</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file:0:5&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 提取第5个字节的连续5个字节</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file:5:5&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 对变量的值做替换,替换第一个</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file/dir/path&#125;</span><br><span class=\"line\"><span class=\"meta\">#</span> 对变量的值做替换,替换所有</span><br><span class=\"line\"><span class=\"meta\">$</span>&#123;file//dir/path&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"windows的bat脚本使用\"><a href=\"#windows的bat脚本使用\" class=\"headerlink\" title=\"windows的bat脚本使用\"></a>windows的bat脚本使用</h1><h2 id=\"setlocal和endlocal的作用\"><a href=\"#setlocal和endlocal的作用\" class=\"headerlink\" title=\"setlocal和endlocal的作用\"></a>setlocal和endlocal的作用</h2><p>让中间程序对于系统变量的改变只在程序内起作用</p>\n<h2 id=\"pushd和popd的作用\"><a href=\"#pushd和popd的作用\" class=\"headerlink\" title=\"pushd和popd的作用\"></a>pushd和popd的作用</h2><p>pushd保存当前目录供popd使用,然后改到指定目录</p>\n<h2 id=\"dp0-含义\"><a href=\"#dp0-含义\" class=\"headerlink\" title=\"%~dp0%含义\"></a>%~dp0%含义</h2><p>当前批处理文件所在的路径</p>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\":: 注释\"></a>:: 注释</h2><h2 id=\"for命令\"><a href=\"#for命令\" class=\"headerlink\" title=\"for命令\"></a>for命令</h2><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span> delims=/ \" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('<span class=\"built_in\">date</span> /t') <span class=\"keyword\">do</span> @<span class=\"built_in\">echo</span> <span class=\"variable\">%%c</span>-<span class=\"variable\">%%a</span>-<span class=\"variable\">%%b</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"findstr在文件中查找字符串\"><a href=\"#findstr在文件中查找字符串\" class=\"headerlink\" title=\"findstr在文件中查找字符串\"></a>findstr在文件中查找字符串</h2><p><a href=\"https://blog.csdn.net/holandstone/article/details/8271369\" target=\"_blank\" rel=\"noopener\">findstr使用</a></p>\n"},{"title":"蓝牙","reward":true,"date":"2018-11-11T01:08:59.000Z","description":null,"_content":"\n# Bluetooth\n\n## 链接\n\n[官网](https://www.bluetooth.com/zh-cn/specifications)\n[Zephyr](https://docs.zephyrproject.org/latest/)\n\n## 历史\n\n## 原理\n\n## 案例分析\n\n## 实践\n\n### BlueZ v5.49","source":"_posts/蓝牙.md","raw":"---\ntitle: 蓝牙\nreward: true\ndate: 2018-11-11 09:08:59\ndescription:\ncategories:\ntags:\n- bluetooth\n---\n\n# Bluetooth\n\n## 链接\n\n[官网](https://www.bluetooth.com/zh-cn/specifications)\n[Zephyr](https://docs.zephyrproject.org/latest/)\n\n## 历史\n\n## 原理\n\n## 案例分析\n\n## 实践\n\n### BlueZ v5.49","slug":"蓝牙","published":1,"updated":"2018-11-11T01:31:23.733Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqw0029ewuotjv8ie0p","content":"<h1 id=\"Bluetooth\"><a href=\"#Bluetooth\" class=\"headerlink\" title=\"Bluetooth\"></a>Bluetooth</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://www.bluetooth.com/zh-cn/specifications\" target=\"_blank\" rel=\"noopener\">官网</a><br><a href=\"https://docs.zephyrproject.org/latest/\" target=\"_blank\" rel=\"noopener\">Zephyr</a></p>\n<h2 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h2><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><h2 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h2><h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><h3 id=\"BlueZ-v5-49\"><a href=\"#BlueZ-v5-49\" class=\"headerlink\" title=\"BlueZ v5.49\"></a>BlueZ v5.49</h3>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Bluetooth\"><a href=\"#Bluetooth\" class=\"headerlink\" title=\"Bluetooth\"></a>Bluetooth</h1><h2 id=\"链接\"><a href=\"#链接\" class=\"headerlink\" title=\"链接\"></a>链接</h2><p><a href=\"https://www.bluetooth.com/zh-cn/specifications\" target=\"_blank\" rel=\"noopener\">官网</a><br><a href=\"https://docs.zephyrproject.org/latest/\" target=\"_blank\" rel=\"noopener\">Zephyr</a></p>\n<h2 id=\"历史\"><a href=\"#历史\" class=\"headerlink\" title=\"历史\"></a>历史</h2><h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><h2 id=\"案例分析\"><a href=\"#案例分析\" class=\"headerlink\" title=\"案例分析\"></a>案例分析</h2><h2 id=\"实践\"><a href=\"#实践\" class=\"headerlink\" title=\"实践\"></a>实践</h2><h3 id=\"BlueZ-v5-49\"><a href=\"#BlueZ-v5-49\" class=\"headerlink\" title=\"BlueZ v5.49\"></a>BlueZ v5.49</h3>"},{"title":"译文_C?Go?Cgo","reward":true,"date":"2019-01-01T13:03:17.000Z","description":null,"_content":"\n# C?Go?Cgo\n\n    2011/03/17\n\n## 引言\n\nGo中的Cgo工具让Go包可以调用C代码.在Go源码中使用特定的格式,cgo可以将Go和C文件组合成一个单一的Go包.\n\n举个例子,下面的Go包中有调用C的random和srandom组成的Random和Seed两个函数.\n\n```go\npackage rand\n\n/*\n#include <stdlib.h>\n*/\nimport \"C\"\n\nfunc Random() int {\n    return int(C.random())\n}\n\nfunc Seed(i int) {\n    C.srandom(C.uint(i))\n}\n```\n\n下面我们来从import状态开始分析一下发生些什么情况.\n\n1. rand包import \"C\".\n    你在Go的标准库中是无法找到\"C\"对应的包的.这是因为C是一个\"伪包\".此处的C伪包是一个C代码的参考,被cgo工具解析.\n\n2. rand包中包含了C包中的4个调用. C.random, C.srandom, C.uint(i)转换和import状态\n\n3. Random函数调用C标准库中的random函数,返回了一个结果.在C中, random返回得是C类型中的long,所有cgo会把这个类型\n   写成C.long.如果想在包外使用这个参数,必须要转换成Go的参数类型.使用一个普通的Go类型转换\n\n    ```go\n    func Random() int {\n        return int(C.random())\n    }\n    ```\n\n    等价下面使用临时变量转换\n\n    ```go\n    func Random() int {\n        var r C.long = C.random()\n        return int(r)\n    }\n    ```\n\n4. Seed函数相反.它获取到一个Go中int类型,将它转换成C中的unsigned int类型,再把转换后的参数传入C的srandom函数中.\n\n    ```go\n    func Seed(i int) {\n        C.srandom(C.uint(i))\n    }\n    ```\n\n    注意: cgo知道unsigned int类型是C.uint类型.\n\n5. 这个例子中我们还没有分析import状态行上的注释\n\n   ```go\n    /*\n    #include <stdlib.h>\n    */\n    import \"C\"\n   ```\n\n   Cgo可以识别这个注释.任何以#cgo开始后面接有空格字符的行将会被移除.这些行变成了cgo的指令.在编译这个包中C部分的代码\n   时,剩余行会变成头部分.在这个例子中,这些行就是#include,也可以是任何的C代码.当编译包中的C部分时,#cgo指令对于编辑器和链接器提供标识.\n\n   这里还有一个限制条件:如果你的程序中使用了任何一个//export指令,在注释上的C代码将只会包含声明,没有定义.你可以使用//export指令让Go函数能访问到C代码.\n\n   #cgo和//export指令可以在cgo文档中查看.\n\n## Strings 和 things\n\n不像Go, C没有一个明确的string类型.在C中字符串使用以'\\0'表示符结尾的字符数组.\n\nGo和C中的字符串转换使用C.CString, C.GoString, 和C.GoStringN函数.这些转换就是对一个字符传数据的一个拷贝.\n\n下面这个例子是实现了一个Print函数,将字符串使用C中stdio库的fputs显示到标准输出.\n\n```go\npackage print\n\n// #include <stdio.h>\n// #include <stdlib.h>\nimport \"C\"\nimport \"unsafe\"\n\nfunc Print(s string) {\n    cs := C.CString(s)\n    C.fputs(cs, (*C.FILE)(C.stdout))\n    C.free(unsafe.Pointer(cs))\n}\n```\n\nGo的内存管理器无法知道C代码的内存分配.当我们使用C.CString创建一个C的字符串时,必须要记得在适当的位置使用C.free进行释放.\n\n调用C.CString返回了一个指向字符数组开始地方的指针,所以在这个函数退出前,我们要将它转换成unsafe.Pointer和使用C.free使用\n内存.在cgo程序中处理内存释放的一个惯用方法是在分配内存后立即使用defer去释放.Print可以改写成\n\n```go\nfunc Print(s string) {\n    cs := C.CString(s)\n    defer C.free(unsafe.Pointer(cs))\n    C.fputs(cs, (*C.FILE)(C.stdout))\n}\n```\n\n## 编译cgo包\n\n编译cgo包和编译其他包一样,使用go build或go install.go工具识别import \"C\"自动使用cgo去编译对应的文件\n\n## cgo的其他资源\n\n    [cgo commond](https://golang.org/cmd/cgo/)\n    [cgo example](https://golang.org/misc/cgo/)\n\n    如果想了解cgo的内部工作原理,可以看下cgocall.go文件.","source":"_posts/译文-C-Go-Cgo.md","raw":"---\ntitle: 译文_C?Go?Cgo\nreward: true\ndate: 2019-01-01 21:03:17\ndescription:\ncategories:\ntags:\n- 译文\n---\n\n# C?Go?Cgo\n\n    2011/03/17\n\n## 引言\n\nGo中的Cgo工具让Go包可以调用C代码.在Go源码中使用特定的格式,cgo可以将Go和C文件组合成一个单一的Go包.\n\n举个例子,下面的Go包中有调用C的random和srandom组成的Random和Seed两个函数.\n\n```go\npackage rand\n\n/*\n#include <stdlib.h>\n*/\nimport \"C\"\n\nfunc Random() int {\n    return int(C.random())\n}\n\nfunc Seed(i int) {\n    C.srandom(C.uint(i))\n}\n```\n\n下面我们来从import状态开始分析一下发生些什么情况.\n\n1. rand包import \"C\".\n    你在Go的标准库中是无法找到\"C\"对应的包的.这是因为C是一个\"伪包\".此处的C伪包是一个C代码的参考,被cgo工具解析.\n\n2. rand包中包含了C包中的4个调用. C.random, C.srandom, C.uint(i)转换和import状态\n\n3. Random函数调用C标准库中的random函数,返回了一个结果.在C中, random返回得是C类型中的long,所有cgo会把这个类型\n   写成C.long.如果想在包外使用这个参数,必须要转换成Go的参数类型.使用一个普通的Go类型转换\n\n    ```go\n    func Random() int {\n        return int(C.random())\n    }\n    ```\n\n    等价下面使用临时变量转换\n\n    ```go\n    func Random() int {\n        var r C.long = C.random()\n        return int(r)\n    }\n    ```\n\n4. Seed函数相反.它获取到一个Go中int类型,将它转换成C中的unsigned int类型,再把转换后的参数传入C的srandom函数中.\n\n    ```go\n    func Seed(i int) {\n        C.srandom(C.uint(i))\n    }\n    ```\n\n    注意: cgo知道unsigned int类型是C.uint类型.\n\n5. 这个例子中我们还没有分析import状态行上的注释\n\n   ```go\n    /*\n    #include <stdlib.h>\n    */\n    import \"C\"\n   ```\n\n   Cgo可以识别这个注释.任何以#cgo开始后面接有空格字符的行将会被移除.这些行变成了cgo的指令.在编译这个包中C部分的代码\n   时,剩余行会变成头部分.在这个例子中,这些行就是#include,也可以是任何的C代码.当编译包中的C部分时,#cgo指令对于编辑器和链接器提供标识.\n\n   这里还有一个限制条件:如果你的程序中使用了任何一个//export指令,在注释上的C代码将只会包含声明,没有定义.你可以使用//export指令让Go函数能访问到C代码.\n\n   #cgo和//export指令可以在cgo文档中查看.\n\n## Strings 和 things\n\n不像Go, C没有一个明确的string类型.在C中字符串使用以'\\0'表示符结尾的字符数组.\n\nGo和C中的字符串转换使用C.CString, C.GoString, 和C.GoStringN函数.这些转换就是对一个字符传数据的一个拷贝.\n\n下面这个例子是实现了一个Print函数,将字符串使用C中stdio库的fputs显示到标准输出.\n\n```go\npackage print\n\n// #include <stdio.h>\n// #include <stdlib.h>\nimport \"C\"\nimport \"unsafe\"\n\nfunc Print(s string) {\n    cs := C.CString(s)\n    C.fputs(cs, (*C.FILE)(C.stdout))\n    C.free(unsafe.Pointer(cs))\n}\n```\n\nGo的内存管理器无法知道C代码的内存分配.当我们使用C.CString创建一个C的字符串时,必须要记得在适当的位置使用C.free进行释放.\n\n调用C.CString返回了一个指向字符数组开始地方的指针,所以在这个函数退出前,我们要将它转换成unsafe.Pointer和使用C.free使用\n内存.在cgo程序中处理内存释放的一个惯用方法是在分配内存后立即使用defer去释放.Print可以改写成\n\n```go\nfunc Print(s string) {\n    cs := C.CString(s)\n    defer C.free(unsafe.Pointer(cs))\n    C.fputs(cs, (*C.FILE)(C.stdout))\n}\n```\n\n## 编译cgo包\n\n编译cgo包和编译其他包一样,使用go build或go install.go工具识别import \"C\"自动使用cgo去编译对应的文件\n\n## cgo的其他资源\n\n    [cgo commond](https://golang.org/cmd/cgo/)\n    [cgo example](https://golang.org/misc/cgo/)\n\n    如果想了解cgo的内部工作原理,可以看下cgocall.go文件.","slug":"译文-C-Go-Cgo","published":1,"updated":"2019-01-01T14:17:30.997Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjra7gvqx002bewuorci30hdi","content":"<h1 id=\"C-Go-Cgo\"><a href=\"#C-Go-Cgo\" class=\"headerlink\" title=\"C?Go?Cgo\"></a>C?Go?Cgo</h1><pre><code>2011/03/17\n</code></pre><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>Go中的Cgo工具让Go包可以调用C代码.在Go源码中使用特定的格式,cgo可以将Go和C文件组合成一个单一的Go包.</p>\n<p>举个例子,下面的Go包中有调用C的random和srandom组成的Random和Seed两个函数.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> rand</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">#include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(C.random())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Seed</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    C.srandom(C.<span class=\"keyword\">uint</span>(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面我们来从import状态开始分析一下发生些什么情况.</p>\n<ol>\n<li><p>rand包import “C”.<br> 你在Go的标准库中是无法找到”C”对应的包的.这是因为C是一个”伪包”.此处的C伪包是一个C代码的参考,被cgo工具解析.</p>\n</li>\n<li><p>rand包中包含了C包中的4个调用. C.random, C.srandom, C.uint(i)转换和import状态</p>\n</li>\n<li><p>Random函数调用C标准库中的random函数,返回了一个结果.在C中, random返回得是C类型中的long,所有cgo会把这个类型<br>写成C.long.如果想在包外使用这个参数,必须要转换成Go的参数类型.使用一个普通的Go类型转换</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(C.random())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 等价下面使用临时变量转换</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r C.long = C.random()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(r)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Seed函数相反.它获取到一个Go中int类型,将它转换成C中的unsigned int类型,再把转换后的参数传入C的srandom函数中.</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Seed</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    C.srandom(C.<span class=\"keyword\">uint</span>(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 注意: cgo知道unsigned int类型是C.uint类型.</p>\n</li>\n<li><p>这个例子中我们还没有分析import状态行上的注释</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">#include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br></pre></td></tr></table></figure>\n<p>Cgo可以识别这个注释.任何以#cgo开始后面接有空格字符的行将会被移除.这些行变成了cgo的指令.在编译这个包中C部分的代码<br>时,剩余行会变成头部分.在这个例子中,这些行就是#include,也可以是任何的C代码.当编译包中的C部分时,#cgo指令对于编辑器和链接器提供标识.</p>\n<p>这里还有一个限制条件:如果你的程序中使用了任何一个//export指令,在注释上的C代码将只会包含声明,没有定义.你可以使用//export指令让Go函数能访问到C代码.</p>\n<p>#cgo和//export指令可以在cgo文档中查看.</p>\n</li>\n</ol>\n<h2 id=\"Strings-和-things\"><a href=\"#Strings-和-things\" class=\"headerlink\" title=\"Strings 和 things\"></a>Strings 和 things</h2><p>不像Go, C没有一个明确的string类型.在C中字符串使用以’\\0’表示符结尾的字符数组.</p>\n<p>Go和C中的字符串转换使用C.CString, C.GoString, 和C.GoStringN函数.这些转换就是对一个字符传数据的一个拷贝.</p>\n<p>下面这个例子是实现了一个Print函数,将字符串使用C中stdio库的fputs显示到标准输出.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> <span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #include &lt;stdio.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// #include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"unsafe\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Print</span><span class=\"params\">(s <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    cs := C.CString(s)</span><br><span class=\"line\">    C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class=\"line\">    C.free(unsafe.Pointer(cs))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Go的内存管理器无法知道C代码的内存分配.当我们使用C.CString创建一个C的字符串时,必须要记得在适当的位置使用C.free进行释放.</p>\n<p>调用C.CString返回了一个指向字符数组开始地方的指针,所以在这个函数退出前,我们要将它转换成unsafe.Pointer和使用C.free使用<br>内存.在cgo程序中处理内存释放的一个惯用方法是在分配内存后立即使用defer去释放.Print可以改写成</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Print</span><span class=\"params\">(s <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    cs := C.CString(s)</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> C.free(unsafe.Pointer(cs))</span><br><span class=\"line\">    C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译cgo包\"><a href=\"#编译cgo包\" class=\"headerlink\" title=\"编译cgo包\"></a>编译cgo包</h2><p>编译cgo包和编译其他包一样,使用go build或go install.go工具识别import “C”自动使用cgo去编译对应的文件</p>\n<h2 id=\"cgo的其他资源\"><a href=\"#cgo的其他资源\" class=\"headerlink\" title=\"cgo的其他资源\"></a>cgo的其他资源</h2><pre><code>[cgo commond](https://golang.org/cmd/cgo/)\n[cgo example](https://golang.org/misc/cgo/)\n\n如果想了解cgo的内部工作原理,可以看下cgocall.go文件.\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"C-Go-Cgo\"><a href=\"#C-Go-Cgo\" class=\"headerlink\" title=\"C?Go?Cgo\"></a>C?Go?Cgo</h1><pre><code>2011/03/17\n</code></pre><h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>Go中的Cgo工具让Go包可以调用C代码.在Go源码中使用特定的格式,cgo可以将Go和C文件组合成一个单一的Go包.</p>\n<p>举个例子,下面的Go包中有调用C的random和srandom组成的Random和Seed两个函数.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> rand</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">#include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(C.random())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Seed</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    C.srandom(C.<span class=\"keyword\">uint</span>(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面我们来从import状态开始分析一下发生些什么情况.</p>\n<ol>\n<li><p>rand包import “C”.<br> 你在Go的标准库中是无法找到”C”对应的包的.这是因为C是一个”伪包”.此处的C伪包是一个C代码的参考,被cgo工具解析.</p>\n</li>\n<li><p>rand包中包含了C包中的4个调用. C.random, C.srandom, C.uint(i)转换和import状态</p>\n</li>\n<li><p>Random函数调用C标准库中的random函数,返回了一个结果.在C中, random返回得是C类型中的long,所有cgo会把这个类型<br>写成C.long.如果想在包外使用这个参数,必须要转换成Go的参数类型.使用一个普通的Go类型转换</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(C.random())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 等价下面使用临时变量转换</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Random</span><span class=\"params\">()</span> <span class=\"title\">int</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> r C.long = C.random()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">int</span>(r)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Seed函数相反.它获取到一个Go中int类型,将它转换成C中的unsigned int类型,再把转换后的参数传入C的srandom函数中.</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Seed</span><span class=\"params\">(i <span class=\"keyword\">int</span>)</span></span> &#123;</span><br><span class=\"line\">    C.srandom(C.<span class=\"keyword\">uint</span>(i))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p> 注意: cgo知道unsigned int类型是C.uint类型.</p>\n</li>\n<li><p>这个例子中我们还没有分析import状态行上的注释</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">#include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br></pre></td></tr></table></figure>\n<p>Cgo可以识别这个注释.任何以#cgo开始后面接有空格字符的行将会被移除.这些行变成了cgo的指令.在编译这个包中C部分的代码<br>时,剩余行会变成头部分.在这个例子中,这些行就是#include,也可以是任何的C代码.当编译包中的C部分时,#cgo指令对于编辑器和链接器提供标识.</p>\n<p>这里还有一个限制条件:如果你的程序中使用了任何一个//export指令,在注释上的C代码将只会包含声明,没有定义.你可以使用//export指令让Go函数能访问到C代码.</p>\n<p>#cgo和//export指令可以在cgo文档中查看.</p>\n</li>\n</ol>\n<h2 id=\"Strings-和-things\"><a href=\"#Strings-和-things\" class=\"headerlink\" title=\"Strings 和 things\"></a>Strings 和 things</h2><p>不像Go, C没有一个明确的string类型.在C中字符串使用以’\\0’表示符结尾的字符数组.</p>\n<p>Go和C中的字符串转换使用C.CString, C.GoString, 和C.GoStringN函数.这些转换就是对一个字符传数据的一个拷贝.</p>\n<p>下面这个例子是实现了一个Print函数,将字符串使用C中stdio库的fputs显示到标准输出.</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> <span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// #include &lt;stdio.h&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// #include &lt;stdlib.h&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"C\"</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">\"unsafe\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Print</span><span class=\"params\">(s <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    cs := C.CString(s)</span><br><span class=\"line\">    C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class=\"line\">    C.free(unsafe.Pointer(cs))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Go的内存管理器无法知道C代码的内存分配.当我们使用C.CString创建一个C的字符串时,必须要记得在适当的位置使用C.free进行释放.</p>\n<p>调用C.CString返回了一个指向字符数组开始地方的指针,所以在这个函数退出前,我们要将它转换成unsafe.Pointer和使用C.free使用<br>内存.在cgo程序中处理内存释放的一个惯用方法是在分配内存后立即使用defer去释放.Print可以改写成</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Print</span><span class=\"params\">(s <span class=\"keyword\">string</span>)</span></span> &#123;</span><br><span class=\"line\">    cs := C.CString(s)</span><br><span class=\"line\">    <span class=\"keyword\">defer</span> C.free(unsafe.Pointer(cs))</span><br><span class=\"line\">    C.fputs(cs, (*C.FILE)(C.stdout))</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"编译cgo包\"><a href=\"#编译cgo包\" class=\"headerlink\" title=\"编译cgo包\"></a>编译cgo包</h2><p>编译cgo包和编译其他包一样,使用go build或go install.go工具识别import “C”自动使用cgo去编译对应的文件</p>\n<h2 id=\"cgo的其他资源\"><a href=\"#cgo的其他资源\" class=\"headerlink\" title=\"cgo的其他资源\"></a>cgo的其他资源</h2><pre><code>[cgo commond](https://golang.org/cmd/cgo/)\n[cgo example](https://golang.org/misc/cgo/)\n\n如果想了解cgo的内部工作原理,可以看下cgocall.go文件.\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjra7gvpr0005ewuokvecwapd","category_id":"cjra7gvpv0008ewuolb6hcdp2","_id":"cjra7gvq4000iewuoy076kl47"},{"post_id":"cjra7gvqa000vewuoe6uz06u8","category_id":"cjra7gvqc000zewuonrnycisw","_id":"cjra7gvqg0019ewuom3ek3j93"},{"post_id":"cjra7gvqb000xewuo7g9pzesr","category_id":"cjra7gvqf0015ewuo8r5wc1qg","_id":"cjra7gvqj001fewuorzec6kwd"},{"post_id":"cjra7gvqn001pewuof9ck6hpw","category_id":"cjra7gvqp001tewuoz8i1arxc","_id":"cjra7gvqu0023ewuovzgap8ss"},{"post_id":"cjra7gvqt0022ewuomd1yc9f6","category_id":"cjra7gvqv0026ewuonkm93r2x","_id":"cjra7gvqy002eewuocwop805z"}],"PostTag":[{"post_id":"cjra7gvpc0000ewuocslgme1u","tag_id":"cjra7gvpl0003ewuow72fp3b8","_id":"cjra7gvpw0009ewuov1zibs3x"},{"post_id":"cjra7gvpj0002ewuotjqiql9z","tag_id":"cjra7gvpu0007ewuo16o3g4ta","_id":"cjra7gvq2000eewuoavs5ie4j"},{"post_id":"cjra7gvpo0004ewuoa58690nt","tag_id":"cjra7gvq0000cewuo5fyelqgq","_id":"cjra7gvq4000jewuosyrl5n99"},{"post_id":"cjra7gvpr0005ewuokvecwapd","tag_id":"cjra7gvq3000gewuofs3q64dz","_id":"cjra7gvq7000newuolerksrwy"},{"post_id":"cjra7gvpt0006ewuopp20g0w4","tag_id":"cjra7gvq5000lewuo6xbl40ci","_id":"cjra7gvq9000rewuot2damajn"},{"post_id":"cjra7gvpw000aewuohhpye7tr","tag_id":"cjra7gvq8000qewuopiii3z9a","_id":"cjra7gvqb000wewuo9f2yiie7"},{"post_id":"cjra7gvpz000bewuo5ml6ums0","tag_id":"cjra7gvqa000uewuosrgz1wjl","_id":"cjra7gvqd0011ewuohp6mhbci"},{"post_id":"cjra7gvq2000fewuojt6fpoqr","tag_id":"cjra7gvqc000yewuo73wlzgge","_id":"cjra7gvqf0016ewuo1ad36lex"},{"post_id":"cjra7gvqf0017ewuoqkmbb70g","tag_id":"cjra7gvqe0013ewuo188hryzr","_id":"cjra7gvqh001bewuo5pa6m01o"},{"post_id":"cjra7gvq3000hewuoixfuz97i","tag_id":"cjra7gvqe0013ewuo188hryzr","_id":"cjra7gvqi001dewuo957jka40"},{"post_id":"cjra7gvqh001cewuokphuudw1","tag_id":"cjra7gvqe0013ewuo188hryzr","_id":"cjra7gvqj001hewuo6id154h4"},{"post_id":"cjra7gvq4000kewuo7jno7sim","tag_id":"cjra7gvqg001aewuom6odcq6y","_id":"cjra7gvqk001jewuobmysd8qx"},{"post_id":"cjra7gvqi001eewuoft6tze5g","tag_id":"cjra7gvqe0013ewuo188hryzr","_id":"cjra7gvql001mewuoe8ezerky"},{"post_id":"cjra7gvq5000mewuor7ssr84e","tag_id":"cjra7gvqj001gewuo7qyq4v6n","_id":"cjra7gvqn001oewuotr61ko7j"},{"post_id":"cjra7gvq7000oewuozcxk096g","tag_id":"cjra7gvqe0013ewuo188hryzr","_id":"cjra7gvqp001sewuokyuclo6h"},{"post_id":"cjra7gvq7000pewuop1cjlb6y","tag_id":"cjra7gvqo001qewuoxln2xu3k","_id":"cjra7gvqr001xewuoaucbhtqf"},{"post_id":"cjra7gvq9000sewuokkf1t05m","tag_id":"cjra7gvqq001vewuo848bjjrf","_id":"cjra7gvqt0021ewuoh7hbisle"},{"post_id":"cjra7gvq9000tewuog04fnyu0","tag_id":"cjra7gvqt0020ewuon3xl0ooo","_id":"cjra7gvqw0028ewuo197bppo2"},{"post_id":"cjra7gvqa000vewuoe6uz06u8","tag_id":"cjra7gvqv0025ewuocchd9f94","_id":"cjra7gvqy002cewuo08cdizwu"},{"post_id":"cjra7gvqb000xewuo7g9pzesr","tag_id":"cjra7gvqx002aewuowgnaucvy","_id":"cjra7gvqz002fewuoi4m19yed"},{"post_id":"cjra7gvqc0010ewuoxhmy6xr2","tag_id":"cjra7gvqy002dewuopt0j5tlz","_id":"cjra7gvqz002hewuo12cw5b63"},{"post_id":"cjra7gvqd0012ewuo6kbdayws","tag_id":"cjra7gvqx002aewuowgnaucvy","_id":"cjra7gvr0002kewuo2cg9p8tf"},{"post_id":"cjra7gvqd0012ewuo6kbdayws","tag_id":"cjra7gvqz002iewuox9d8um08","_id":"cjra7gvr0002lewuoovkldlq4"},{"post_id":"cjra7gvqe0014ewuooheuyeo9","tag_id":"cjra7gvr0002jewuo9njqt81d","_id":"cjra7gvr0002newuookgqxuwp"},{"post_id":"cjra7gvqg0018ewuoy81lma2a","tag_id":"cjra7gvr0002mewuochioo4r8","_id":"cjra7gvr1002pewuojhpadv6r"},{"post_id":"cjra7gvqk001iewuohydwfx95","tag_id":"cjra7gvr1002oewuoxfuye9jq","_id":"cjra7gvr1002rewuovpnpd52t"},{"post_id":"cjra7gvqk001kewuosart2t4r","tag_id":"cjra7gvr1002qewuo0ymx2qmv","_id":"cjra7gvr2002tewuojwe6u5s5"},{"post_id":"cjra7gvqm001newuotmnpe2nb","tag_id":"cjra7gvr1002sewuoygn9ytfe","_id":"cjra7gvr2002vewuoiirxpnm0"},{"post_id":"cjra7gvqn001pewuof9ck6hpw","tag_id":"cjra7gvr2002uewuolas15p06","_id":"cjra7gvr2002xewuo8r3i3vwg"},{"post_id":"cjra7gvqp001uewuo5vqm7n81","tag_id":"cjra7gvr2002wewuoopowq5pz","_id":"cjra7gvr3002zewuokrx0td54"},{"post_id":"cjra7gvqq001wewuo6viyu5pb","tag_id":"cjra7gvr2002yewuo8a7kmkkn","_id":"cjra7gvr30031ewuoic4f4m65"},{"post_id":"cjra7gvqr001yewuoirwx1itj","tag_id":"cjra7gvr30030ewuo7hdnijt3","_id":"cjra7gvr40033ewuowgubrg3r"},{"post_id":"cjra7gvqs001zewuokqhzhxem","tag_id":"cjra7gvqx002aewuowgnaucvy","_id":"cjra7gvr40035ewuofynr8zmp"},{"post_id":"cjra7gvqt0022ewuomd1yc9f6","tag_id":"cjra7gvr40034ewuo5kx3njtc","_id":"cjra7gvr50037ewuog0tvn2r4"},{"post_id":"cjra7gvqu0024ewuo3b2naka9","tag_id":"cjra7gvr40036ewuo6npnh56b","_id":"cjra7gvr50039ewuovq0tonao"},{"post_id":"cjra7gvqw0027ewuozi40isl6","tag_id":"cjra7gvr50038ewuoujnmz5l8","_id":"cjra7gvr5003bewuopmlxkcgz"},{"post_id":"cjra7gvqw0029ewuotjv8ie0p","tag_id":"cjra7gvr5003aewuowlcytrxt","_id":"cjra7gvr6003dewuoflf3xf39"},{"post_id":"cjra7gvqx002bewuorci30hdi","tag_id":"cjra7gvr6003cewuoydgd6yzu","_id":"cjra7gvr6003eewuon8g1b96h"}],"Tag":[{"name":"DevOps","_id":"cjra7gvpl0003ewuow72fp3b8"},{"name":"friend declaration1.","_id":"cjra7gvpu0007ewuo16o3g4ta"},{"name":"CMake","_id":"cjra7gvq0000cewuo5fyelqgq"},{"name":"cmd","_id":"cjra7gvq3000gewuofs3q64dz"},{"name":"Go","_id":"cjra7gvq5000lewuo6xbl40ci"},{"name":"GO","_id":"cjra7gvq8000qewuopiii3z9a"},{"name":"Javascript","_id":"cjra7gvqa000uewuosrgz1wjl"},{"name":"make","_id":"cjra7gvqc000yewuo73wlzgge"},{"name":"linux","_id":"cjra7gvqe0013ewuo188hryzr"},{"name":"RabbitMQ","_id":"cjra7gvqg001aewuom6odcq6y"},{"name":"集群","_id":"cjra7gvqj001gewuo7qyq4v6n"},{"name":"Sphinx","_id":"cjra7gvqo001qewuoxln2xu3k"},{"name":"bug","_id":"cjra7gvqq001vewuo848bjjrf"},{"name":"项目管理","_id":"cjra7gvqt0020ewuon3xl0ooo"},{"name":"UML","_id":"cjra7gvqv0025ewuocchd9f94"},{"name":"acl","_id":"cjra7gvqx002aewuowgnaucvy"},{"name":"VSCode","_id":"cjra7gvqy002dewuopt0j5tlz"},{"name":"singleton","_id":"cjra7gvqz002iewuox9d8um08"},{"name":"容器","_id":"cjra7gvr0002jewuo9njqt81d"},{"name":"gulp","_id":"cjra7gvr0002mewuochioo4r8"},{"name":"python","_id":"cjra7gvr1002oewuoxfuye9jq"},{"name":"工具","_id":"cjra7gvr1002qewuo0ymx2qmv"},{"name":"c++","_id":"cjra7gvr1002sewuoygn9ytfe"},{"name":"svn","_id":"cjra7gvr2002uewuolas15p06"},{"name":"redis","_id":"cjra7gvr2002wewuoopowq5pz"},{"name":"yarn","_id":"cjra7gvr2002yewuo8a7kmkkn"},{"name":"valgrind","_id":"cjra7gvr30030ewuo7hdnijt3"},{"name":"前端常识","_id":"cjra7gvr40034ewuo5kx3njtc"},{"name":"Class","_id":"cjra7gvr40036ewuo6npnh56b"},{"name":"shell","_id":"cjra7gvr50038ewuoujnmz5l8"},{"name":"bluetooth","_id":"cjra7gvr5003aewuowlcytrxt"},{"name":"译文","_id":"cjra7gvr6003cewuoydgd6yzu"}]}}